<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Middleware on Cylon&#39;s Collection</title>
    <link>http://localhost:1313/tags/middleware/</link>
    <description>Recent content in Middleware on Cylon&#39;s Collection</description>
    <generator>Hugo -- 0.125.7</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 05 Dec 2024 23:00:36 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/middleware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>zookeeper版本升级 - from 3.4 to 3.8</title>
      <link>http://localhost:1313/2024/11/zk-upgrade-3.4-to-3.6/</link>
      <pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/11/zk-upgrade-3.4-to-3.6/</guid>
      <description>最近，我不得不将 Zookeeper 3.4.18 集群升级到 3.6+。要求是：无感升级，不丢失数据，并且尽量不向任何用户发出通知。在调研zookeeper 版本后，发现 3.6+ 支持了 metrics 模块，比较符合需求，所以需要从 3.4.18 升级至 3.6.4
3.5 + 支持动态配置 3.6.0+ 支持内置 metrics 模块 现有集群配置 集群IP 当前目录 新版本目录 192.240.16.18 /usr/local/zookeeper-3.4.14/ /usr/local/apache-zookeeper-3.6.4-bin/ 192.240.16.21 /usr/local/zookeeper-3.4.14/ /usr/local/apache-zookeeper-3.6.4-bin/ 192.240.16.28 /usr/local/zookeeper-3.4.14/ /usr/local/apache-zookeeper-3.6.4-bin/ 192.240.16.147 /usr/local/zookeeper-3.4.14/ /usr/local/apache-zookeeper-3.6.4-bin/ 192.240.16.202 /usr/local/zookeeper-3.4.14/ /usr/local/apache-zookeeper-3.6.4-bin/ 下载安装包 在官方 archive 找到对应安装包
从 zk 3.5 起安装包分为带 “bin” 和不带 “bin” 的
带 “bin” 的包含所需jar包 不带 “bin” 的需要自行编译 bash 1 wget https://archive.apache.org/dist/zookeeper/zookeeper-3.6.4/ 解压
bash 1 tar Czxf /usr/local/ apache-zookeeper-3.6.4-bin.tar.gz &amp;amp;&amp;amp; cd /usr/local 升级版本 注意以下步骤需要对每个 zk 服务器都执行一边</description>
    </item>
    <item>
      <title>Kubernetes公有云集群中部署Nacos集群</title>
      <link>http://localhost:1313/2024/09/nacos-deploy-with-gcp-eks/</link>
      <pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/09/nacos-deploy-with-gcp-eks/</guid>
      <description>nacos-k8s nacos-k8s 是Nacos官方维护的项目，可以使用 helm 直接在 k8s 集群中部署 nacos 集群（包含公有云）
部署步骤 找到数据库表结构 在你要安装的版本号的配置中找到 SQL 文件进行创建库操作，例如 github.com/alibaba/nacos/tree/2.4.1/distribution/conf
自定义 helm 资源和配置 在公有云上部署，还需要修改下对应资源的类型，例如建立 LB
service 增加了自动获取 gcp 预留的 IP，和service改为LB类型
yaml 1 2 3 4 5 6 7 8 9 10 11 12 service: #type: ClusterIP #type: NodePort type: LoadBalancer port: 8848 nodePort: 30000 # 这样可以使用静态IP loadBalancerIP: 192.168.0.1 annotations: # 这个annotation 原自官方创建 load-balancer的方式 cloud.google.com/load-balancer-type: Internal labels: {} cloud.google.com/load-balancer-type GKE 的 service LB 类型的参数 [1]
service.beta.kubernetes.io/alibaba-cloud-loadbalancer-address-type: &amp;ldquo;intranet&amp;rdquo; ACK 的 service LB 类型的参数 [2]</description>
    </item>
    <item>
      <title>使用虚拟机部署nacos</title>
      <link>http://localhost:1313/2024/02/nacos-deploy-with-vm/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/02/nacos-deploy-with-vm/</guid>
      <description>下载 nacos-server
bash 1 $ tar zxvf nacos-server-2.2.3.tar.gz -C /opt/ 创建nacos用户
bash 1 useradd nacos -s /sbin/nologin -M 修改 java 环境变量
使用openjdk启动，需要配置JAVA_HOME在启动脚本中
bash 1 2 3 4 $ rpm -ql java-1.8.0-openjdk-headless # 找到 jre 根目录配置 JAVA_HOME # /opt/nacos/bin/startup.sh JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.412.b08-1.el7_9.x86_64/jre 启动命令
集群模式需要同时启动多个节点
bash 1 2 3 4 5 6 7 启动命令 # 单机 sudo -u nacos /opt/nacos/bin/startup.sh -m standalone # 集群 sudo -u nacos /opt/nacos/bin/startup.sh -m cluster # 停止服务 sudo -u nacos /opt/nacos/bin/shutdown.</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>vmvare on Cylon&#39;s Collection</title>
    <link>https://www.oomkill.com/tags/vmvare/</link>
    <description>Recent content in vmvare on Cylon&#39;s Collection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 17 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.oomkill.com/tags/vmvare/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux VMware Tools详解</title>
      <link>https://www.oomkill.com/2021/02/vmvaretool/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2021/02/vmvaretool/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="vmware-tools描述">VMware Tools描述</h2>
<p>VMware Tools 中包含一系列服务和模块，可在 VMware 产品中实现多种功能，从而使用户能够更好地管理客户机操作系统，以及与客户机系统进行无缝交互。</p>
<h2 id="在linux虚拟机中安装vmware-tools">在Linux虚拟机中安装VMware Tools</h2>
<p><strong>安装前准备</strong></p>
<ul>
<li>虚拟机必须打开cd/dvd驱动器，否则<code>安装VMware Tools</code>的选项无法选择</li>
<li>VMware Tools安装程序是使用Perl编写的，必须确认操作系统中安装Perl。</li>
</ul>
<p><strong>安装步骤</strong></p>
<ol>
<li>
<p>在虚拟机菜单中右键单击虚拟机，然后单击客户机 &gt; 安装/升级 VMware Tools。</p>
</li>
<li>
<p>要创建一个挂载点 <code>mkdir /mnt/cdrom</code></p>
</li>
<li>
<p>要装载 CDROM，<code>mount /dev/cdrom /mnt/cdrom</code></p>
</li>
<li>
<p>要将安装文件文件复制到临时目录：<code>cp /mnt/cdrom/VMwareTools*.tar.gz /tmp/</code>；其中，<code>*</code> <em>部分是 VMware Tools 软件包的版本号，故以</em>替代*。</p>
</li>
<li>
<p>解压文件：<code>cd /tmp &amp;&amp; tar -zxvf VMwareTools*.tar.gz</code></p>
</li>
<li>
<p>运行PERL脚本以安装<code>VMware Tools</code>：<code>cd vmware-tools-distrib &amp;&amp; ./vmware-install.pl</code>，<em>若要求选择，一路回车即可</em>。</p>
</li>
<li>
<p>安装完成后清理 <code>rm -fr {/tmp/VMwareTools*,/tmp/vmware-tools-distrib} ; yum remove perl -y</code>，如不需要perl可以卸载</p>
</li>
</ol>
<p>命令集合</p>
<pre><code class="language-bash">mkdir /mnt/cdrom
mount /dev/cdrom /mnt/cdrom
cp /mnt/cdrom/VMwareTools*.tar.gz /tmp/
cd /tmp &amp;&amp; tar -xf VMwareTools*.tar.gz
cd vmware-tools-distrib &amp;&amp; ./vmware-install.pl
</code></pre>
<p>安装后清理</p>
<pre><code class="language-bash">rm -fr {/tmp/VMwareTools*,/tmp/vmware-tools-distrib}
yum remove perl -y # 选择性执行
</code></pre>
<h2 id="vmware-tools服务">VMware Tools服务</h2>
<p>VMware Tools守护进程在后台运行。它在 Windows 客户机操作系统中名为 vmtoolsd.exe，在 Mac OS X 客户机操作系统中名为 vmware-tools-daemon，在 Linux、FreeBSD 和 Solaris 客户机操作系统中名为 vmtoolsd。</p>
<p>安装完成后，<code>VMware Tools</code>守护进程并未开机启动，可以设置开机启动，该守护进程在主机和客户机操作系统之间传递信息。</p>
<pre><code>systemctl enable vmtoolsd
systemctl start vmtoolsd 
systemctl status vmtoolsd
</code></pre>
<h2 id="配置虚拟机与宿主机系统之间的时间同步">配置虚拟机与宿主机系统之间的时间同步</h2>
<p>启用时间同步时，VMware Tools会将虚拟机操作系统的时间设置为与宿主机的时间相同。</p>
<blockquote>
<p>注意：无论 <code>VMware Tools</code>时间同步是否打开，在执行以下操作后都会进行时间同步：</p>
<ul>
<li>当启动 <code>VMware Tools</code>守护进程时，例如重新引导或打开电源操作过程中。</li>
<li>在从某个挂起操作恢复虚拟机时</li>
<li>恢复到快照后</li>
<li>压缩磁盘后</li>
</ul>
</blockquote>
<p><strong>命令</strong></p>
<table>
<thead>
<tr>
<th>操作系统</th>
<th>程序名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>Windows</td>
<td>VMwareToolboxCmd.exe</td>
</tr>
<tr>
<td>Linux、Solaris 和 FreeBSD</td>
<td>vmware-toolbox-cmd</td>
</tr>
<tr>
<td>MAC OS X</td>
<td>vmware-tools-cli</td>
</tr>
</tbody>
</table>
<pre><code>vmware-toolbox-cmd timesync enable|disable
</code></pre>
<h2 id="reference">Reference</h2>
<blockquote>
<p><a href="https://docs.vmware.com/cn/VMware-Tools/11.2.0/com.vmware.vsphere.vmwaretools.doc/GUID-C0D8326A-B6E7-4E61-8470-6C173FDDF656.html" target="_blank"
   rel="noopener nofollow noreferrer" >配置客户机与主机操作系统之间的时间同步</a></p>
<p><a href="https://kb.vmware.com/s/article/1018414?lang=zh_cn" target="_blank"
   rel="noopener nofollow noreferrer" >在 Linux 虚拟机中安装 VMware Tools (1018414)</a></p>
<p><a href="https://docs.vmware.com/cn/VMware-Tools/index.html" target="_blank"
   rel="noopener nofollow noreferrer" >VMware Tools 产品文档</a></p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>Powershell阻止确认</title>
      <link>https://www.oomkill.com/2020/04/powershell-confirm/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/04/powershell-confirm/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>要阻止弹出确认提示，需要设置-Confirm为false,</p>
<pre><code>new-VM -Name $hostname -Template $template -VMHost 10.11.31.5 -OSCustomizationspec TestLinux -Confirm:$false
</code></pre>
<p>获得当前确认级别</p>
<pre><code>$ConfirmPreference
</code></pre>
<p>查看确认级别（$ConfirmPreference）支持的选项，类型为枚举</p>
<pre><code>[ENUM]::GetNames($ConfirmPreference.GetType())
</code></pre>
<p>设置确认级别</p>
<pre><code>$ConfirmPreference=&quot;None&quot;
</code></pre>
]]></content:encoded>
    </item>
    
    <item>
      <title>centos安装powershell和powercli</title>
      <link>https://www.oomkill.com/2019/10/centos-install-powershellpowercli/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/10/centos-install-powershellpowercli/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>poershell <a href="https://github.com/PowerShell/PowerShell/releases" target="_blank"
   rel="noopener nofollow noreferrer" >github</a></p>
<p>本次采用github下载对应的rpm进行安装</p>
<p>windows下安装方法</p>
<p><a href="https://code.vmware.com/web/tool/12.0.0/vmware-powercli" target="_blank"
   rel="noopener nofollow noreferrer" >离线安装包下载地址</a></p>
<pre><code>yum install -y https://github.com/PowerShell/PowerShell/releases/download/v7.0.0/powershell-lts-7.0.0-1.rhel.7.x86_64.rpm
</code></pre>
<p>安装完成后再终端输入以下命令 <code>pwsh</code>。在一个PowerShell会话，您可以通过运行以下命令来检查的PowerShell的版本。</p>
<pre><code>PS /root&gt; $PSVersionTable.PSVersion

Major  Minor  Patch  PreReleaseLabel BuildLabel
-----  -----  -----  --------------- ----------
7      0      0  

Set-PSRepository -Name &quot;PSGallery&quot; -InstallationPolicy &quot;Trusted&quot;
</code></pre>
<p>接下来，运行以下命令来安装VMware.PowerCLI模块。这将发现和在PSGallery安装最新版本的模块</p>
<pre><code>Find-Module &quot;VMware.PowerCLI&quot; | Install-Module -Scope &quot;CurrentUser&quot; -AllowClobber
</code></pre>
<p>完成后，通过运行以下命令进行检查，以确保该模块安装。</p>
<pre><code>
Get-Module &quot;VMware.PowerCLI&quot; -ListAvailable | FT -Autosize

 

PS /root&gt; Get-Module &quot;VMware.PowerCLI&quot; -ListAvailable | FT -Autosize


    Directory: /root/.local/share/powershell/Modules

ModuleType Version         PreRelease Name            PSEdition ExportedCommands
---------- -------         ---------- ----            --------- ----------------
Manifest   12.0.0.15947286            VMware.PowerCLI Desk 
</code></pre>
<p>如果你想看到所有的VMware安装的模块，运行以下命令。</p>
<pre><code>PS /root&gt; Get-Module &quot;VMware.*&quot; -ListAvailable | FT -Autosize


    Directory: /root/.local/share/powershell/Modules

ModuleType Version         PreRelease Name                                    PSEdition ExportedCommands
---------- -------         ---------- ----                                    --------- ----------------
Script     12.0.0.15947289            VMware.CloudServices                    Desk      {Connect-Vcs, Get-VcsOrganizationRole, Get-VcsService, Get-VcsServiceRole…
Script     7.0.0.15902843             VMware.DeployAutomation                 Desk      {Add-DeployRule, Add-ProxyServer, Add-ScriptBundle, Copy-DeployRule…}
Script     7.0.0.15902843             VMware.ImageBuilder                     Desk      {Add-EsxSoftwareDepot, Add-EsxSoftwarePackage, Compare-EsxImageProfile, E…
Manifest   12.0.0.15947286            VMware.PowerCLI                         Desk      
Script     7.0.0.15939650             VMware.Vim                              Desk      
Script     12.0.0.15939657            VMware.VimAutomation.Cis.Core           Desk      {Connect-CisServer, Disconnect-CisServer, Get-CisService}
Script     12.0.0.15940183            VMware.VimAutomation.Cloud              Desk      {Add-CIDatastore, Connect-CIServer, Disconnect-CIServer, Get-Catalog…}
Script     12.0.0.15939652            VMware.VimAutomation.Common             Desk      {Get-Task, New-OAuthSecurityContext, Stop-Task, Wait-Task}
Script     12.0.0.15939655            VMware.VimAutomation.Core               Desk      {Add-PassthroughDevice, Add-VirtualSwitchPhysicalNetworkAdapter, Add-VMHo…
Script     12.0.0.15939647            VMware.VimAutomation.Hcx                Desk      {Connect-HCXServer, Disconnect-HCXServer, Get-HCXAppliance, Get-HCXComput…
Script     7.12.0.15718406            VMware.VimAutomation.HorizonView        Desk      {Connect-HVServer, Disconnect-HVServer}
Script     12.0.0.15939670            VMware.VimAutomation.License            Desk      Get-LicenseDataManager
Script     12.0.0.15939671            VMware.VimAutomation.Nsxt               Desk      {Connect-NsxtServer, Disconnect-NsxtServer, Get-NsxtPolicyService, Get-Ns…
Script     12.0.0.15939651            VMware.VimAutomation.Sdk                Desk      {Get-ErrorReport, Get-PSVersion, Get-InstallPath}
Script     12.0.0.15939672            VMware.VimAutomation.Security           Desk      {Add-AttestationServiceInfo, Add-KeyProviderServiceInfo, Add-TrustAuthori…
Script     11.5.0.14899557            VMware.VimAutomation.Srm                Desk      {Connect-SrmServer, Disconnect-SrmServer}
Script     12.0.0.15939648            VMware.VimAutomation.Storage            Desk      {Add-EntityDefaultKeyProvider, Add-KeyManagementServer, Add-VsanFileServi…
Script     1.3.0.0                    VMware.VimAutomation.StorageUtility     Desk      Update-VmfsDatastore
Script     12.0.0.15940185            VMware.VimAutomation.Vds                Desk      {Add-VDSwitchPhysicalNetworkAdapter, Add-VDSwitchVMHost, Export-VDPortGro…
Script     12.0.0.15947287            VMware.VimAutomation.Vmc                Desk      {Add-VmcSddcHost, Connect-Vmc, Disconnect-Vmc, Get-AwsAccount…}
Script     12.0.0.15940184            VMware.VimAutomation.vROps              Desk      {Connect-OMServer, Disconnect-OMServer, Get-OMAlert, Get-OMAlertDefinitio…
Script     12.0.0.15947288            VMware.VimAutomation.WorkloadManagement Desk      {Get-WMNamespace, Get-WMNamespacePermission, Get-WMNamespaceStoragePolicy…
Script     6.5.1.7862888              VMware.VumAutomation                    Desk      {Add-EntityBaseline, Copy-Patch, Get-Baseline, Get-Compliance…}
</code></pre>
<p>当VMware.PowerCLI发布新版本，你可以运行下面的命令来更新。</p>
<pre><code>Update-Module &quot;VMware.PowerCLI&quot;
</code></pre>
<p>VMware.PowerCLI现在已安装完成，可以连接到您的vCenter Server或ESXi主机</p>
<pre><code>PS /root&gt; Set-PowerCLIConfiguration -InvalidCertificateAction &quot;Ignore&quot;

Perform operation?
Performing operation 'Update PowerCLI configuration.'?
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): Y

Scope    ProxyPolicy     DefaultVIServerMode InvalidCertificateAction  DisplayDeprecationWarnings WebOperationTimeout
                                                                                                  Seconds
-----    -----------     ------------------- ------------------------  -------------------------- -------------------
Session  UseSystemProxy  Multiple            Ignore                    True                       300
User                                         Ignore                                               
AllUsers  
</code></pre>
]]></content:encoded>
    </item>
    
    <item>
      <title>powercli The SSL connection could not be established, see inner exception. 问题解决</title>
      <link>https://www.oomkill.com/2019/10/powercli-the-ssl-connection-could-not-be-established-see-inner-exception/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/10/powercli-the-ssl-connection-could-not-be-established-see-inner-exception/</guid>
      <description></description>
      <content:encoded><![CDATA[<pre><code>Connect-VIServer -Server 
</code></pre>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/1380340-20210801143141181-1047906479.png" alt="" onerror="this.onerror=null;this.src='/placeholder.svg';this.className='pe-image-placeholder'" /></p>
<p>这里是“SSL连接不能建立&hellip;&hellip;”这实际上意味着你没有一个有效的证书。如果你想连接到vCenter没有一个有效的证书，您必须允许可以改变你的vCenter证书到受信任的一个，这是正确的解决方案，也可以忽略无效的证书，以规避所有的安全性，但使它现在的工作。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/1380340-20210801143200019-1825949412.png" alt="" onerror="this.onerror=null;this.src='/placeholder.svg';this.className='pe-image-placeholder'" /></p>
<p>忽略无效证书</p>
<pre><code>Set-PowerCLIConfiguration -InvalidCertificateAction:ignore
</code></pre>
<p>再次登陆可正常登陆
<img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/1380340-20210801143232415-1036597499.png" alt="" onerror="this.onerror=null;this.src='/placeholder.svg';this.className='pe-image-placeholder'" /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>powercli常用命令</title>
      <link>https://www.oomkill.com/2019/10/powercli-vsphere-command/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/10/powercli-vsphere-command/</guid>
      <description></description>
      <content:encoded><![CDATA[<pre><code class="language-pwsh">Connect-VIServer -Server 10.11.17.20 -User administrator@vsphere.local -Password DC02@123456

Get-OSCustomizationSpec linux1|Get-OSCustomizationNicMapping|Set-OSCustomizationNicMapping -IpMode UseStaticIP -SubnetMask 255.255.255.0 -DefaultGateway 10.10.12.254 -IpAddress 10.10.12.114

new-VM -Name zy-ntw-prod-dbvm-pushredis01  -Template template-centos76 -VMHost 10.10.12.14  -OSCustomizationspec linux1

Get-VM -name zy-ntw-prod-dbvm-pushredis01|set-VM -MemoryGB 96 -NumCPU 16

	
get-vm zy-ntw-prod-dbvm-pushredis01|New-HardDisk -CapacityGB 100

New-Snapshot -Name &quot;20200622&quot;


Connect-VIServer -Server 10.11.17.20 -User administrator@vsphere.local -Password DC@123456


Connect-VIServer -Server 10.11.17.20 -User administrator@vsphere.local -Password DC02@123456


Connect-VIServer -Server 10.10.200.20 -User administrator@vsphere.local -Password DC@123456


Get-OSCustomizationSpec linux1|Get-OSCustomizationNicMapping|Set-OSCustomizationNicMapping -IpMode UseStaticIP -SubnetMask 255.255.255.0 -DefaultGateway 10.11.31.254 -IpAddress 10.11.31.65

new-VM -Name zy-ntw-zr-prod-vip-upgrade01 -Template template-centos76 -VMHost 10.11.31.4 -OSCustomizationspec linux1

Get-OSCustomizationSpec linux1|Get-OSCustomizationNicMapping|Set-OSCustomizationNicMapping -IpMode UseStaticIP -SubnetMask 255.255.255.0 -DefaultGateway 10.11.31.254 -IpAddress 10.11.31.66

new-VM -Name zy-ntw-zr-prod-vip-upgrade02 -Template template-centos76 -VMHost 10.11.31.5 -OSCustomizationspec linux1


get-vm zy-ntw-zr-prod-vip-upgrade*|set-VM -MemoryGB 8 -NumCPU 4

get-harddisk zy-ntw-zr-prod-vip-upgrade*      
get-harddisk zy-ntw-zr-prod-vip-upgrade*|set-harddisk -CapacityGB 100 
# 现有硬盘扩容
get-vm zy-ntw-zr-prod-vip-upgrade* |get-harddisk|set-harddisk -CapacityGB 100

## 删除虚拟机
remove-vm –deletepermanently 
</code></pre>
]]></content:encoded>
    </item>
    
    <item>
      <title>powercli创建虚拟机步骤及批量创建脚本</title>
      <link>https://www.oomkill.com/2019/10/powercli-vsphere-command/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/10/powercli-vsphere-command/</guid>
      <description></description>
      <content:encoded><![CDATA[<blockquote>
<p>文档中心
<a href="https://pubs.vmware.com/vsphere-51/index.jsp?topic=%2Fcom.vmware.powercli.cmdletref.doc%2FSet-OSCustomizationSpec.html" target="_blank"
   rel="noopener nofollow noreferrer" >https://pubs.vmware.com/vsphere-51/index.jsp?topic=%2Fcom.vmware.powercli.cmdletref.doc%2FSet-OSCustomizationSpec.html</a>
<a href="https://blogs.vmware.com/PowerCLI/2014/05/working-customization-specifications-powercli-part-1.html" target="_blank"
   rel="noopener nofollow noreferrer" >https://blogs.vmware.com/PowerCLI/2014/05/working-customization-specifications-powercli-part-1.html</a>
<a href="http://powershelldistrict.com/powercli-oscustomizationspec/" target="_blank"
   rel="noopener nofollow noreferrer" >http://powershelldistrict.com/powercli-oscustomizationspec/</a>
<a href="https://powercli-core.readthedocs.io/en/latest/cmd_new.html#new-oscustomizationspec" target="_blank"
   rel="noopener nofollow noreferrer" >https://powercli-core.readthedocs.io/en/latest/cmd_new.html#new-oscustomizationspec</a>
<a href="https://pubs.vmware.com/vsphere-51/index.jsp?topic=%2Fcom.vmware.powercli.cmdletref.doc%2FSet-OSCustomizationSpec.html" target="_blank"
   rel="noopener nofollow noreferrer" >官方文档中心</a></p>
</blockquote>
<p>添加一块新硬盘</p>
<pre><code>get-vm {vmname}|New-HardDisk -CapacityGB 300
</code></pre>
<p>批量设置硬件</p>
<pre><code>Get-VM -name {hostname}*|set-VM -MemoryGB 4 -NumCPU 2
</code></pre>
<p>基于模板创建虚拟机</p>
<pre><code>new-VM -Name {hostname}  -Template template-centos76 -VMHost 10.112.131.5  -OSCustomizationspec TestLinux
</code></pre>
<p>设置规范模板</p>
<pre><code>
Get-OSCustomizationSpec TestLinux|Get-OSCustomizationNicMapping|Set-OSCustomizationNicMapping \
-IpMode UseStaticIP \
-SubnetMask 255.255.255.0 \
-DefaultGateway 10.11.121.254 \
-IpAddress 10.11.121.203

Get-OSCustomizationSpec TestLinux|Get-OSCustomizationNicMapping|Set-OSCustomizationNicMapping \
-IpMode UseStaticIP \
-SubnetMask 255.255.255.0 \
-DefaultGateway 10.11.131.254 \
-IpAddress 10.11.131.64
</code></pre>
<p>获得规范信息</p>
<pre><code>Get-OSCustomizationSpec liunx
</code></pre>
<p>创建一个新的规范</p>
<pre><code>New-OSCustomizationSpec -OSType &quot;Linux&quot; -Name linux1 -Type Persistent –DnsServer &quot;8.8.8.8&quot;  –Domain &quot;vmware.com&quot;
</code></pre>
<p>批量创建脚本</p>
<pre><code>$vserver=&quot;10.111.111.22&quot;
$vuser=&quot;youname&quot;
$vpwd=&quot;yourpasswd&quot;


filter Convert-IP2Decimal 
{
    ([IPAddress][String]([IPAddress]$_)).Address
}

filter Convert-Decimal2IP
{
	([System.Net.IPAddress]$_).IPAddressToString
}

$IPPrefix=&quot;10.111.31&quot;
$startIp=$args[0]
$startHostname=$args[1]
$num=$args[2]
$gateway=&quot;10.111.31.254&quot;
$netmask=&quot;255.255.255.0&quot;
$cpu=4
$mem=8
$template=&quot;template-centos7&quot;

$vhost17=,&quot;10.111.17.1&quot;,&quot;10.111.17.2&quot;,&quot;10.111.17.3&quot;,&quot;10.111.17.4&quot;
$vhost20=,&quot;10.111.20.1&quot;,&quot;10.111.20.2&quot;,&quot;10.111.20.3&quot;,&quot;10.111.20.4&quot;
$vhost31=,&quot;10.111.31.1&quot;,&quot;10.111.31.2&quot;,&quot;10.111.31.3&quot;,&quot;10.111.31.4&quot;


function LoginVSphere($server,$user,$pwd){
	Connect-VIServer -Server $server[0] -User $server[1] -Password $server[2] -EA &quot;Stop&quot;
}

LoginVSphere($vserver, $vuser, $vpwd)
$temp=Get-OSCustomizationSpec TestLinux 






for($n=[int]$startIp;$n -le [int]$num; $n++)
{
	$ipaddr=-Join($IPPrefix,'.',$n)
	$hostname=-Join($startHostname,$n)
	$temp|Get-OSCustomizationNicMapping|Set-OSCustomizationNicMapping -IpMode UseStaticIP -SubnetMask $netmask -DefaultGateway $gateway -IpAddress $ipaddr
	new-VM -Name $hostname -Template $template -VMHost 10.111.31.5 -OSCustomizationspec TestLinux -Confirm:$false
	Get-VM -Name $hostname|Set-VM -MemoryGB $mem -NumCPU $cpu -Confirm:$false
}
</code></pre>
<h2 id="reference">Reference</h2>
<blockquote>
<p><a href="https://communities.vmware.com/thread/567585" target="_blank"
   rel="noopener nofollow noreferrer" >https://communities.vmware.com/thread/567585</a></p>
<p><a href="https://www.itnotebooks.com/?p=716" target="_blank"
   rel="noopener nofollow noreferrer" >脚本参考</a></p>
<p><a href="https://blogs.vmware.com/PowerCLI/2014/05/working-customization-specifications-powercli-part-1.html" target="_blank"
   rel="noopener nofollow noreferrer" >https://blogs.vmware.com/PowerCLI/2014/05/working-customization-specifications-powercli-part-1.html</a></p>
<p><a href="http://powershelldistrict.com/powercli-oscustomizationspec/" target="_blank"
   rel="noopener nofollow noreferrer" >http://powershelldistrict.com/powercli-oscustomizationspec/</a></p>
<p><a href="https://pubs.vmware.com/vsphere-51/index.jsp?topic=%2Fcom.vmware.powercli.cmdletref.doc%2FSet-OSCustomizationSpec.html" target="_blank"
   rel="noopener nofollow noreferrer" >https://pubs.vmware.com/vsphere-51/index.jsp?topic=%2Fcom.vmware.powercli.cmdletref.doc%2FSet-OSCustomizationSpec.html</a></p>
</blockquote>
]]></content:encoded>
    </item>
    
  </channel>
</rss>

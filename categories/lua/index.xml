<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>lua on Cylon&#39;s Collection</title>
    <link>https://www.oomkill.com/categories/lua/</link>
    <description>Recent content in lua on Cylon&#39;s Collection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 02 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.oomkill.com/categories/lua/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>lua cjson使用</title>
      <link>https://www.oomkill.com/2019/10/lua-cjson/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/10/lua-cjson/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>cjson下载</p>
<p><a href="https://github.com/mpx/lua-cjson.git" target="_blank"
   rel="noopener nofollow noreferrer" >https://github.com/mpx/lua-cjson.git</a></p>
<p>下载解压后，编译需要根据自己的lua环境以及操作系统修改Makefile的一些配置，不然容易出错。
以下是Makefile中的一些配置。</p>
<pre><code class="language-c">LUA_VERSION =       5.2
TARGET =            cjson.so
PREFIX =            /usr/local
CJSON_LDFLAGS =     -shared
LUA_INCLUDE_DIR =   $(PREFIX)/include
LUA_CMODULE_DIR =   $(PREFIX)/lib/lua/$(LUA_VERSION)
LUA_MODULE_DIR =    $(PREFIX)/share/lua/$(LUA_VERSION)
LUA_BIN_DIR =       $(PREFIX)/bin
</code></pre>
<p><a href="https://blog.gezhiqiang.com/2017/08/24/lua-cjson/" target="_blank"
   rel="noopener nofollow noreferrer" >https://blog.gezhiqiang.com/2017/08/24/lua-cjson/</a></p>
<pre><code class="language-lua">local cjson = require(&quot;cjson&quot;)

local obj = {
    id = 1,
    name = &quot;zhangsan&quot;,
    age = nil,
    is_male = false,
    hobby = {&quot;zhangsan&quot;,&quot;lisi&quot;,&quot;wangwu&quot;}
}

local str = cjson.encode(obj)

ngx.say(str)
</code></pre>
]]></content:encoded>
    </item>
    
    <item>
      <title>lua nginx api</title>
      <link>https://www.oomkill.com/2019/10/lua-nginx-api/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/10/lua-nginx-api/</guid>
      <description></description>
      <content:encoded><![CDATA[<pre><code class="language-lua">location = /reqq {
	default_type text/plain;
	content_by_lua_block {
		ngx.req.read_body()
		local data = ngx.req.get_body_data()
                local args, err = ngx.req.get_uri_args()
		if not args then
			ngx.say('post fail')
			return
		end
		
        for key,v in pairs(args) do
			ngx.say(key,&quot;::&quot;,v,&quot;--&quot;)
		end
		ngx.say(data)
	}
}
</code></pre>
<h3 id="ngxexec-内部重定向">ngx.exec 内部重定向</h3>
<pre><code class="language-lua">location = /bb {
    default_type text/plain;
    content_by_lua_block{
        ngx.exec('/reqq?m=DaoShengPay3&amp;c=Pay&amp;orderNo=PH201910111')
    }
}

location = /reqq {
    default_type text/plain;
    content_by_lua_block {
       ngx.req.read_body()
       local data = ngx.req.get_body_data()
       local args, err = ngx.req.get_uri_args()
       if not args then
               ngx.say('post fail')
               return
       end
       for key,v in pairs(args) do
               ngx.say(key,&quot;::&quot;,v,&quot;--&quot;)
       end
       ngx.say(data)
    }
}
</code></pre>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/1570889980396.png" alt="1570889980396" onerror="this.onerror=null;this.src='/placeholder.svg';this.className='pe-image-placeholder'" /></p>
<h3 id="ngxlog">ngx.log</h3>
<pre><code class="language-lua">location = /testlog {
    default_type text/plain;
    content_by_lua_block{
        ngx.say('hello lua log')
        ngx.log(ngx.ERR, 'print hello lua log')
    }
}
</code></pre>
<pre><code class="language-log">2019/10/12 22:25:31 [error] 468#0: *248 [lua] content_by_lua(nginx.conf:44):3: print hello lua log, client: 203.90.247.72, server: test111.hou2008.com, request: &quot;GET /testlog HTTP/1.1&quot;, host: &quot;test111.hou2008.com:8181&quot;, referrer: &quot;http://test111.hou2008.com/testlog&quot;
</code></pre>
<h1 id="nginx-api-for-lua">Nginx API for Lua</h1>
<p><a href="https://github.com/openresty/lua-nginx-module" target="_blank"
   rel="noopener nofollow noreferrer" >https://github.com/openresty/lua-nginx-module</a></p>
<p><a href="https://www.zifangsky.cn/1024.html" target="_blank"
   rel="noopener nofollow noreferrer" >https://www.zifangsky.cn/1024.html</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>lua nginx module</title>
      <link>https://www.oomkill.com/2019/10/lua-nginx-module/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/10/lua-nginx-module/</guid>
      <description></description>
      <content:encoded><![CDATA[<pre><code class="language-lua">package1 = {}

package1.const = &quot;测试常量&quot;


function package1.func1()
    io.write(&quot;this is public func\n&quot;)
end

return package1
</code></pre>
<p>req.lua</p>
<pre><code class="language-lua">require &quot;package1&quot;
package1.func1()
print(package1)
</code></pre>
<pre><code>lc@lc-virtual-machine:~/lua$ lua pack1.lua 
this is public func
table: 0x5575766224a0
</code></pre>
<p>注意事项：</p>
<ul>
<li>
<p>测试文件是和封装好的模块在同一个目录，否则引用时需要设置路径。</p>
<pre><code class="language-lua">package.path = '/home/lc/lua/1/package1.lua;';

require &quot;package1&quot;

package1.func1()

print(package1)
</code></pre>
</li>
<li>
<p>模块名称和文件名称必须相同</p>
</li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>

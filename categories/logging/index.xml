<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>logging on Cylon&#39;s Collection</title>
    <link>https://www.oomkill.com/categories/logging/</link>
    <description>Recent content in logging on Cylon&#39;s Collection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 02 Nov 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.oomkill.com/categories/logging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ELK收集java日志</title>
      <link>https://www.oomkill.com/2018/11/elk-collect-java/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2018/11/elk-collect-java/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>Java日志多由多行行组成，初始行之后的每一行以空格开头，如下例所示：在这种情况下，需要在将事件数据output之前处理多行事件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[ERROR] - 2018-09-21 04:19:57.685 (SocketTransfer.java:73) - Socket交互遇到错误
</span></span><span class="line"><span class="cl">   Exception in thread &#34;main&#34; java.lang.NullPointerException
</span></span><span class="line"><span class="cl">   at com.example.myproject.Book.getTitle(Book.java:16)
</span></span><span class="line"><span class="cl">   at com.example.myproject.Author.getBookTitles(Author.java:25)
</span></span><span class="line"><span class="cl">   at com.example.myproject.Bootstrap.main(Bootstrap.java:14)
</span></span></code></pre></td></tr></table>
</div>
</div><p>配置multiline参数如下：<a href="https://www.elastic.co/guide/en/logstash/6.4/plugins-codecs-multiline.html">Multiline codec plugin</a></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>pattern</td>
<td>指定正则表达式。与指定正则表达式匹配的行被视为前一行的延续或新多行事件的开始。</td>
</tr>
<tr>
<td>what</td>
<td>previous或next。该previous值指定与pattern选项中的值匹配的行是上一行的一部分。该next值指定与pattern选项中的值匹配的行是以下行的一部分</td>
</tr>
<tr>
<td>negate</td>
<td>true或false（默认为false）。如果true，与pattern模式不匹配的消息将构成多行过滤器的匹配what并将应用。</td>
</tr>
</tbody>
</table>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input <span class="o">{</span>
</span></span><span class="line"><span class="cl">		file <span class="o">{</span>
</span></span><span class="line"><span class="cl">				<span class="nv">path</span> <span class="o">=</span>&gt; <span class="s2">&#34;/root/apache-tomcat-8.5.34/logs/catalina.out&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="nb">type</span> <span class="o">=</span>&gt; <span class="s2">&#34;sk&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="nv">start_position</span> <span class="o">=</span>&gt; <span class="s2">&#34;beginning&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="nv">codec</span> <span class="o">=</span>&gt; multiline <span class="o">{</span>
</span></span><span class="line"><span class="cl">						<span class="nv">pattern</span> <span class="o">=</span>&gt; <span class="s2">&#34;^\[&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="nv">negate</span> <span class="o">=</span>&gt; <span class="s2">&#34;true&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="nv">what</span> <span class="o">=</span>&gt; <span class="s2">&#34;previous&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="o">}</span>
</span></span><span class="line"><span class="cl">		<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>如上列日志格式为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">[</span>日志级别<span class="o">]</span> - 日期 java类 - 错误报错
</span></span></code></pre></td></tr></table>
</div>
</div><p>一般情况下，我们不需要将对其grok，因grok会大量影响性能。如上列格式需要对每一列进行grok</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1"># 日期 </span>
</span></span><span class="line"><span class="cl">TESTTIME %<span class="o">{</span>YEAR<span class="o">}</span><span class="se">\-</span>%<span class="o">{</span>MONTHNUM<span class="o">}</span><span class="se">\-</span>%<span class="o">{</span>MONTHDAY<span class="o">}</span> %<span class="o">{</span>HOUR<span class="o">}</span>:%<span class="o">{</span>MINUTE<span class="o">}</span>:%<span class="o">{</span>SECOND<span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>根据以上格式写出如下的正则</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">filter {
</span></span><span class="line"><span class="cl">  grok {
</span></span><span class="line"><span class="cl">    match =&gt; {
</span></span><span class="line"><span class="cl">      &#39;message&#39; =&gt; &#34;\[\s?%{LOGLEVEL:lev}\] - %{TESTTIME:date}\s+\((?&lt;\class&gt;.*\.java\:\d+)\)\s\-\s(?&lt;\msg&gt;.*)&#34;
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  }
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  mutate {  
</span></span><span class="line"><span class="cl">    remove_field =&gt; &#34;message&#34;
</span></span><span class="line"><span class="cl">  }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>匹配到的日志格式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@timestamp&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;2018-10-05T13:16:27.263Z&#34;</span>,
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;@version&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;1&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;path&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;/root/apache-tomcat-8.5.34/logs/catalina.out&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;host&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;node02&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;type&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;sk&#34;</span>,
</span></span><span class="line"><span class="cl">           <span class="s2">&#34;lev&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;DEBUG&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;date&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;2018-10-04 12:48:56.142&#34;</span>,
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;class&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;ObjectDaoImpl.java:219&#34;</span>,
</span></span><span class="line"><span class="cl">           <span class="s2">&#34;msg&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;queryPage with hql:select t.fplxdm,t.fpdm,t.fphm,t.fpcbh,f.ipdz,f.dkh,f.jqbh from ( select &#39;026&#39; as fplxdm,fpdm,fphm,kprq,fpcbh,jqbh from pj_zzspdz_fpmx where kprq&gt;&#39;20180801000000&#39; and jqbh=&#39;499099915361&#39; and qmbz=&#39;N&#39;) t,dj_fwqxx f where t.jqbh=f.jqbh order by t.kprq&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>ELK收集syslog</title>
      <link>https://www.oomkill.com/2018/11/collect-syslog/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2018/11/collect-syslog/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>Logstash通过网络将syslog消息作为事件读取。使用用 UDPSocket, TCPServer 和</p>
<p>LogStash::Filters::Grok 来实现</p>
<h3 id="配置示例">配置示例</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input <span class="o">{</span>                                            
</span></span><span class="line"><span class="cl">    syslog<span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">port</span> <span class="o">=</span>&gt; <span class="s2">&#34;514&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>配置客户端，在修改linux主机<code>/etc/rsyslog.conf</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">*.* @@host:port
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置说明">配置说明</h2>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>类型</td>
</tr>
<tr>
<td>*</td>
<td>级别</td>
</tr>
<tr>
<td>@</td>
<td>udp</td>
</tr>
<tr>
<td>@@</td>
<td>tcp</td>
</tr>
<tr>
<td>host</td>
<td>可为主机名或ip地址</td>
</tr>
</tbody>
</table>
<hr>
<blockquote>
<p><strong><font color="#0215cd" size=2>注：收集到的数据，本身就以及是rsyslog格式了，无需再进行grok</font></strong></p>
</blockquote>
<hr>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">           <span class="s2">&#34;message&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;(root) CMD (/bin/echo 1111 &gt;&gt;/root/1.txt)\n&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;@version&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;1&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;@timestamp&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;2018-10-05T12:13:01.000Z&#34;</span>,
</span></span><span class="line"><span class="cl">              <span class="s2">&#34;host&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;10.0.0.16&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;priority&#34;</span> <span class="o">=</span>&gt; 78,
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;timestamp&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Oct  5 20:13:01&#34;</span>,
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;logsource&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;node02&#34;</span>,
</span></span><span class="line"><span class="cl">           <span class="s2">&#34;program&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;CROND&#34;</span>,
</span></span><span class="line"><span class="cl">               <span class="s2">&#34;pid&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;92923&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;severity&#34;</span> <span class="o">=</span>&gt; 6,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;facility&#34;</span> <span class="o">=</span>&gt; 9,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;facility_label&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;clock&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;severity_label&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Informational&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>收集到的数据需要对时间进行格式化</p>
<p>官方date插件说明：<a href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html#plugins-filters-date-timezone">Date filter plugin</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">filter <span class="o">{</span>
</span></span><span class="line"><span class="cl">		date <span class="o">{</span>
</span></span><span class="line"><span class="cl">				<span class="nv">match</span> <span class="o">=</span>&gt; <span class="o">[</span><span class="s2">&#34;timestamp&#34;</span> , <span class="s2">&#34;MMM  dd HH:mm:ss&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">				<span class="nv">target</span> <span class="o">=</span>&gt; <span class="s2">&#34;timestamp&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="s2">&#34;timezone&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Asia/Shanghai&#34;</span>
</span></span><span class="line"><span class="cl">		<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>格式化完后的时间如下示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">           <span class="s2">&#34;message&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;(root) CMD (/bin/echo 1111 &gt;&gt;/root/1.txt)\n&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;@version&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;1&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;@timestamp&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;2018-10-05T12:09:01.000Z&#34;</span>,
</span></span><span class="line"><span class="cl">              <span class="s2">&#34;host&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;10.0.0.16&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;priority&#34;</span> <span class="o">=</span>&gt; 78,
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;timestamp&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;2018-10-05T12:09:01.000Z&#34;</span>,
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;logsource&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;node02&#34;</span>,
</span></span><span class="line"><span class="cl">           <span class="s2">&#34;program&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;CROND&#34;</span>,
</span></span><span class="line"><span class="cl">               <span class="s2">&#34;pid&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;92825&#34;</span>,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;severity&#34;</span> <span class="o">=</span>&gt; 6,
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;facility&#34;</span> <span class="o">=</span>&gt; 9,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;facility_label&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;clock&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;severity_label&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Informational&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p><strong><font color="#0215cd" size=2>说明：此处格式化完后时间与当前时区不符，相差8小时。这里不影响，在kibana中显示的为当前时区</font></strong></p>
<hr>
<p></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Logstash使用</title>
      <link>https://www.oomkill.com/2018/11/logstash/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2018/11/logstash/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="1-logstash概述">1 logstash概述</h2>
<p>logstash是基于Jruby语言研发的server/agent结构的日志收集工具，可以在任何一个能产生日志的服务器上部署其agent。agent能同时监控多个产生日志的服务，并把每个服务所产生的日志信息收集并发送给logstash server端。由于收集到的日志信息是分散的，logstash有专门的节点用来将所有的节点收集到的日志信息按时间序列合并在一起形成一个序列，基于这一个序列请求写入并存储在elasticsearch集群中。</p>
<p>kibana是基于node.js开发的elasticsearch的图形用户接口。它可以将用户的搜索语句发送给ES，有ES完成搜索，并且将结果返回。kibana可以将返回的数据，用非常直观的方式（画图）来做趋势展示的。</p>
<p>logstash基于多种数据获取机制，TCP/UDP协议、文件、syslog、windows EventLogs及STDIN等。同时也支持多种数据输出机制。获取到数据后，它支持对数据执行过滤、修改等操作。</p>
<p>logstash基于JRuby语言研发，需要运行在JVM虚拟机之上。工作于agent/server模型。</p>
<h3 id="11-logstash工作机制">1.1 logstash工作机制</h3>
<p>在每一个产生日志的节点之上部署一个agent，这个agent通常称为<font color="#f8070d" size=3><code>shipper</code></font>。shipper负责收集日志，并且发送给server端。但是在发送给server端时，为了避免server端可能无法应付大量节点同时发来的信息，会在server端和agent端之间放置一个消息队列，通常称之为<font color="#f8070d" size=3><code>broker</code></font>。这个消息队列比较常见的使用redis。各agent将数据发送至broker，logstash服务器会从broker中依次取出日志拿来在本地做过滤、修改等操作。在完修改后将其发送至ES集群。</p>
<p>对于logstash而言，server端也是插件式的工作的模式，与ES的不同在于，ES的插件是可有可无的。logstash的除核心外的所有功能都是基于插件来完成的。</p>
<h3 id="12-logstash工作流程">1.2 logstash工作流程</h3>
<p>logstash的工作模式类似于管道，从指定位置读入数据，而后过滤数据，最后将其输出到指定位置。事实上logstash的工作流程为：<font color="#f8070d" size=3><code>input | filter | output</code></font>。如无需对数据额外处理，filter可省略。</p>
<h3 id="13-logstash插件分类">1.3 logstash插件分类</h3>
<ul>
<li>input plugin：收集数据</li>
<li>codec plugin：编码插件</li>
<li>filter plugin：过滤</li>
<li>output plugin：输出插件</li>
</ul>
<h2 id="2-logstash安装下载">2 logstash安装下载</h2>
<p>官网地址：https://www.elastic.co/cn/products../../images/Logstash</p>
<p></p>
<h2 id="3-logstash的配置使用">3 logstash的配置使用</h2>
<p><font color="#f8070d" size=3><code>/etc../../images/Logstash/conf.d/</code></font>路径下所有以<font color="#f8070d" size=3><code>.conf</code></font>结尾的文件都被当做配置文件使用。对于logstash的配置文件定义，就是定义插件。从哪得到数据。向哪里输出数据。</p>
<h3 id="31-logstash的基本配置框架">3.1 logstash的基本配置框架</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input<span class="o">{</span>
</span></span><span class="line"><span class="cl"> 	....
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">filter<span class="o">{</span>
</span></span><span class="line"><span class="cl"> 	....
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">output<span class="o">{</span>
</span></span><span class="line"><span class="cl"> 	....
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>简单的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input<span class="o">{</span>
</span></span><span class="line"><span class="cl"> 	stdin <span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">output <span class="o">{</span> 
</span></span><span class="line"><span class="cl"> 	stdout<span class="o">{</span>
</span></span><span class="line"><span class="cl"> 		<span class="nv">codec</span> <span class="o">=</span>&gt;rubydebug
</span></span><span class="line"><span class="cl"> 	<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>检查配置文件语法是否正确<font color="#f8070d" size=2><code>logstash -f /etc../../images/Logstash/conf.d/sample.conf --configtest</code></font></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">$ logstash -f /etc../../images/Logstash/conf.d/sample.conf 
</span></span><span class="line"><span class="cl">hellow owrd
</span></span><span class="line"><span class="cl">Settings: Default pipeline workers: <span class="m">1</span>
</span></span><span class="line"><span class="cl">Pipeline main started
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">       <span class="s2">&#34;message&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;hellow owrd&#34;</span>, <span class="c1">#←信息的完整内容。logstash的信息是在input → filter → output之间流动的。</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;@version&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;1&#34;</span>, <span class="c1">#←版本号。</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@timestamp&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;2018-06-04T15:02:47.912Z&#34;</span>, <span class="c1">#←事件发生时的时间戳。</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;host&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;test&#34;</span> <span class="c1">#←时间发生的主机。</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="32-logstash支持的数据类型">3.2 logstash支持的数据类型</h3>
<p>Array：[iteml,item2,&hellip;]
Boolean：true,false
Bytes
Codec：编码器。
Hash: key =&gt;value 
Number
Password：
Path：文件系统路径。
String：字符串。
logstash还支持字段引用，使用<font color="#f8070d" size=3><code>[]</code></font>进行引用</p>
<p>3.3 支持的条件判断
==，!=，&lt;，&lt;=，&gt;，&gt;= 正则匹配=~ !~
in,not in and,or</p>
<h2 id="4-logstash常用的插件">4 Logstash常用的插件</h2>
<p>logstash是高度插件化的，主要分为<font color="#f8070d" size=3><code>input</code></font> <font color="#f8070d" size=3><code>codec</code></font> <font color="#f8070d" size=3><code>filter</code></font> <font color="#f8070d" size=3><code>output</code></font>插件：</p>
<h3 id="41-input插件">4.1 input插件</h3>
<h4 id="411-file">4.1.1 File</h4>
<p>从指定的文件中读取事件流。其工作特性类似于<font color="#f8070d" size=3><code>tail -1f</code></font>，能够将日志文件尾部的一行不断的读取出来。</p>
<p>logstash使用<font color="#f8070d" size=3><code>FileWatch</code></font>（ruby gem库）机制来监听文件变化。filewatch是linux内核中提供的一种功能。filewatch库支持以glob方式展开文件名。因此可以监听多个文件。并且可以将每个文件读取的位置及状态信息保存在<font color="#f8070d" size=3><code>.sincedb</code></font>数据库中。即使重启logstash后也不会从头读取文件的。.sincedb记录了每个被监听的文件的<font color="#f8070d" size=3><code>inode</code></font>,<font color="#f8070d" size=3><code>major number</code></font>,<font color="#f8070d" size=3><code>minor nubmer</code></font>,<font color="#f8070d" size=3><code>pos</code></font>。默认情况下位于启动logstash服务的用户家目录下。也可以自行定义位置。另外，file插件还可以自动识别日志的滚动（日志分割）操作。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input<span class="o">{</span>
</span></span><span class="line"><span class="cl">    file<span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">path</span> <span class="o">=</span>&gt; <span class="o">[</span><span class="s1">&#39;/var/log/messages&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">        <span class="nb">type</span> <span class="o">=</span>&gt; <span class="s2">&#34;system&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">start_postition</span> <span class="o">=</span>&gt; <span class="s2">&#34;beginning&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">output<span class="o">{</span>
</span></span><span class="line"><span class="cl">    stdout<span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">codec</span> <span class="o">=</span>&gt; rubydebug
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://www.elastic.co/guide/en../../images/Logstash/2.4/index.html">Logstash</a>
<a href="https://www.elastic.co/guide/en../../images/Logstash/2.4/plugins-inputs-file.html">file</a></p>
<h4 id="412-udp">4.1.2 UDP</h4>
<p>logstash支持通过一个简单的协议来读取信息，如UDP、TCP，说明对方只要通过TCP协议发送时间也是支持的。或者哪怕通过syslog收集事件也是可以的。</p>
<p>logstash通过UDP协议通过网络连接来读取信息，其唯一必须制定的参数为<font color="#f8070d" size=3><code>port</code></font>，用于指定自己监听的端口，agent可以向服务器端端口发送日志信息。而每个被收集数据的主机使用守护进程向server端发送事件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input<span class="o">{</span>
</span></span><span class="line"><span class="cl">    udp<span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">prot</span> <span class="o">=</span>&gt; <span class="m">25826</span>
</span></span><span class="line"><span class="cl">        <span class="nv">queue_size</span> <span class="o">=</span>&gt; <span class="m">2000</span>  <span class="c1">#←队列大小</span>
</span></span><span class="line"><span class="cl">        <span class="nv">workers</span> <span class="o">=</span>&gt; <span class="m">2</span>        <span class="c1">#←启动的工作线程数来接收发送的事件。</span>
</span></span><span class="line"><span class="cl">        <span class="nv">buffer_size</span> <span class="o">=</span>&gt;      <span class="c1">#←接收缓冲区的大小</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>UDP插件实现</strong></p>
</blockquote>
<p>collectd：基于C语言开发的一款高度插件式的主机性能监控程序，以守护进程方式运行，能够收集系统性能相关的各种数据；并且能够基于各种存储机制将收集的结果存储下来。collectd本身所收集到的数据可以通过自身的network插件，将自己在本机所收集到的数据发送至其他主机。</p>
<p>collectd在epel源中</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yum install collectd -y
</span></span></code></pre></td></tr></table>
</div>
</div><p>collectd的大量.so文件为其模块（插件），每一个模块分别实现每一种相应的功能。其配置文件 <font color="#f8070d" size=3><code>/etc/collectd.conf</code></font></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Hostname <span class="s2">&#34;node3.magedu.com&#34;</span>
</span></span><span class="line"><span class="cl">LoadPlugin syslog 
</span></span><span class="line"><span class="cl">LoadPlugin cpu  <span class="c1"># cpu性能数据</span>
</span></span><span class="line"><span class="cl">LoadPlugin df  <span class="c1"># 磁盘空间使用情况</span>
</span></span><span class="line"><span class="cl">LoadPlugin interface <span class="c1"># 网络接口</span>
</span></span><span class="line"><span class="cl">LoadPlugin 1oad  <span class="c1"># 服务器负载</span>
</span></span><span class="line"><span class="cl">LoadPlugin memory  <span class="c1"># 内存</span>
</span></span><span class="line"><span class="cl">LoadPlugin network 
</span></span><span class="line"><span class="cl">&lt;Plugin network&gt;
</span></span><span class="line"><span class="cl">    &lt;server <span class="s2">&#34;10.0.0.19&#34;</span> <span class="s2">&#34;25826&#34;</span>&gt; <span class="c1">#10.0.0.19是logstash主机的地址，25826是其监听的udp端口</span>
</span></span><span class="line"><span class="cl">    &lt;/server&gt;
</span></span><span class="line"><span class="cl">&lt;/Plugin
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input udp <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">port</span> <span class="o">=</span>&gt; <span class="s2">&#34;25826&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">codec</span> <span class="o">=</span>&gt; collectd <span class="o">{}</span>
</span></span><span class="line"><span class="cl">    <span class="nb">type</span> <span class="o">=</span>&gt; <span class="s2">&#34;collectd&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">output<span class="o">{</span>
</span></span><span class="line"><span class="cl">    stdout<span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">codec</span> <span class="o">=</span>&gt; rubydebug
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="413-redis">4.1.3 redis</h4>
<p>redis插件主要作用在于从redis中获取数据。它支持redis中的两种方式；支持redis channel（发布频道）以及lists两种方式。logstash从redis读数据，可以基于列表方式进行。也可以基于channel方式进行。也就是说redis可以仅工作在正常模式下，不用启用channel机制，也一样能够使logstash从中获取数据。</p>
<p>对于logstash而言，一般要求redis版本在<font color="#f8070d" size=3><code>2.6.0</code></font>之后的版本。</p>
<h3 id="42-filter插件">4.2 filter插件</h3>
<p>filter插件主要用于将event通过output发出之前对其实现某些处理功能。对所收集到的数据当中，期望能够基于某种特定格式进行拆分、组合、过滤其中某些信息，都可以使用filter插件实现。在过滤前后如果有需要，都可以调用codec插件，事先基于某种形式对消息做编码。将处理过数据存往任何可存储位置，需要用到特定于存储位置的输出插件。logstash有众多filter过滤器。</p>
<h4 id="421-grok">4.2.1 grok</h4>
<p>gork是logstash中最重要的插件之一，主要用于分析并结构化文本数据。从web服务器日志读取的日志事件是遵循同种格式的，如：我们只想统计有多少访问IP，但是获取的是一行信息。为了能够方便随后的统计操作，需要将每读到的任何一行日志实现切好。使得对日志分析能够得以进行。目前是logstash中将非结构化日志数据转化为结构化的可查询数据的不二之选。</p>
<p>目前支持处理 <font color="#f8070d" size=3><code>syslog</code></font> <font color="#f8070d" size=3><code>httpd</code></font> <font color="#f8070d" size=3><code>nginx</code></font> 等。默认情况下，logstash提供了120种默认grok模式。这些模式定义在<font color="#f8070d" size=3><code>patterns</code></font>目录下，每个模式都有默认的名称。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">rpm -ql logstash<span class="p">|</span>grep <span class="s2">&#34;patterns</span>$<span class="s2">&#34;</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="422-gork语法格式">4.2.2 gork语法格式</h4>
<p>logstash中grok的语法格式是使用<font color="#f8070d" size=3><code>%{}</code></font>括起的一组信息使用<font color="#f8070d" size=3><code>:</code></font>隔开，其中左半段称之为<font color="#f8070d" size=3><code>SYNTAX</code></font>由半段称之为<font color="#f8070d" size=3><code>SEMANTIC</code></font>。其中SYNTAX表示grok模板预定义模式中已有的模式名称，SEMANTIC，匹配到的文本的自定义的标识符。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">%<span class="o">{</span>SYNTAX:SEMANTIC<span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>例:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">10.0.0.1 GET /index.html <span class="m">30</span> 0.23
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">%<span class="o">{</span>IP:client_ip<span class="o">}</span> %<span class="o">{</span>WORD:method<span class="o">}</span> %<span class="o">{</span>URIPATHPARAM:request<span class="o">}</span> %<span class="o">{</span>NUMBER:bytes<span class="o">}</span> %<span class="o">{</span>NUMBER:duration<span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>10.0.0.1 GET /index.html 30 0.23
{
&ldquo;message&rdquo; =&gt; &ldquo;10.0.0.1 GET /index.html 30 0.23&rdquo;,
&ldquo;@version&rdquo; =&gt; &ldquo;1&rdquo;,
&ldquo;@timestamp&rdquo; =&gt; &ldquo;2018-05-31T10:34:37.150Z&rdquo;,
&ldquo;host&rdquo; =&gt; &ldquo;mysql&rdquo;,
&ldquo;client_ip&rdquo; =&gt; &ldquo;10.0.0.1&rdquo;,
&ldquo;method&rdquo; =&gt; &ldquo;GET&rdquo;,
&ldquo;request&rdquo; =&gt; &ldquo;/index.html&rdquo;,
&ldquo;bytes&rdquo; =&gt; &ldquo;30&rdquo;,
&ldquo;duration&rdquo; =&gt; &ldquo;0.23&rdquo;
}</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input <span class="o">{</span>
</span></span><span class="line"><span class="cl">		stdin <span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">filter <span class="o">{</span>
</span></span><span class="line"><span class="cl">  grok <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">match</span> <span class="o">=</span>&gt; <span class="o">{</span> 
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;message&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;%{IP:client_ip} %{WORD:method} %{URIPATHPARAM:request} %{NUMBER:bytes} %{NUMBER:duration}&#34;</span> 
</span></span><span class="line"><span class="cl">    <span class="o">}</span> 
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">output <span class="o">{</span>
</span></span><span class="line"><span class="cl">		stdout <span class="o">{</span> <span class="nv">codec</span> <span class="o">=</span>&gt; rubydebug <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>自定义grok模式</p>
<p>grok模式是基于正则表达式的模式编写，其元字符与其他用到正则表达式的工具awk\sed\grep\pcre差别不大</p>
<p>nginx log匹配方式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">NGUSERNAME <span class="o">[</span>a-zA-Z<span class="se">\.\@\-\+</span>_%<span class="o">]</span>+
</span></span><span class="line"><span class="cl">NGUSER %<span class="o">{</span>NGUSERNAME<span class="o">}</span>
</span></span><span class="line"><span class="cl">NGINXACCESS %<span class="o">{</span>IPORHOST:clientip<span class="o">}</span> - %<span class="o">{</span>NOTSPACE:remote_user<span class="o">}</span> <span class="se">\[</span>%<span class="o">{</span>HTTPDATE:timestamp<span class="o">}</span><span class="se">\]</span> <span class="se">\&#34;</span><span class="o">(</span>?:%<span class="o">{</span>WORD:verb<span class="o">}</span> %<span class="o">{</span>NOTSPACE:request<span class="o">}(</span>?: HTTP/%<span class="o">{</span>NUMBER:httpversion<span class="o">})</span>?<span class="p">|</span>%<span class="o">{</span>DATA:rawrequest<span class="o">})</span><span class="se">\&#34;</span> %<span class="o">{</span>NUMBER:response<span class="o">}</span> <span class="o">(</span>?:%<span class="o">{</span>NUMBER:bytes<span class="o">}</span><span class="p">|</span>-<span class="o">)</span> %<span class="o">{</span>QS:referrer<span class="o">}</span> %<span class="o">{</span>QS:agent<span class="o">}</span> %<span class="o">{</span>NOTSPACE:http_x_forwarded_for<span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://blog.csdn.net/joeyon1985/article/details/46639511">LOGSTASH+ELASTICSEARCH+KIBANA处理NGINX访问日志 - CSDN博客</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input <span class="o">{</span>
</span></span><span class="line"><span class="cl">		file <span class="o">{</span>
</span></span><span class="line"><span class="cl">				<span class="nv">path</span> <span class="o">=</span>&gt; <span class="o">[</span><span class="s1">&#39;/var/log/nginx/access.log&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">				<span class="nb">type</span> <span class="o">=</span>&gt; <span class="s2">&#34;nginxlog&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="nv">start_position</span> <span class="o">=</span>&gt; <span class="s2">&#34;beginning&#34;</span>
</span></span><span class="line"><span class="cl">		<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">filter <span class="o">{</span>
</span></span><span class="line"><span class="cl">		grok <span class="o">{</span>
</span></span><span class="line"><span class="cl">				<span class="nv">match</span> <span class="o">=</span>&gt; <span class="o">{</span> <span class="s2">&#34;message&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;%{NGINXACCESS}&#34;</span> <span class="o">}</span>
</span></span><span class="line"><span class="cl">		<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">output <span class="o">{</span>
</span></span><span class="line"><span class="cl">		stdout	<span class="o">{</span>
</span></span><span class="line"><span class="cl">				<span class="nv">codec</span> <span class="o">=</span>&gt; rubydebug
</span></span><span class="line"><span class="cl">		<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>action 将数据输出到至elasticsearch中后基于什么方式做操作
hosts es主机集群列表。数组
index 存储在es的哪个索引当中</p>
<p>logstash在使用redis做输入或输出插件时，有两种数据类型，用来保存logstash输出的数据list channel</p>
<p><a href="https://blog.csdn.net/aaronhadoop/article/details/73163025">ES5.4.0 记录 - CSDN博客</a></p>
<p><a href="https://blog.csdn.net/qq_21383435/article/details/79323739">18-elasticsearch集群健康为黄色 - CSDN博客</a></p>
<p>curl -X PUT 172.16.16.18:9200/gongsufanghua-work_record/_settings -d &lsquo;{
&ldquo;index&rdquo; : {
&ldquo;number_of_replicas&rdquo; : 0
}
}&rsquo;</p>
<p><a href="https://segmentfault.com/a/1190000011784259">logstash-input-jdbc同步mysql数据到elasticsearch - 运维学习之路 - SegmentFault 思否</a></p>
<p><a href="https://blog.csdn.net/u012546526/article/details/78598608">Elasticsearch yellow unassigned_shards 恢复 replicas 节点恢复 - CSDN博客</a></p>
<p><a href="https://www.jianshu.com/p/62433b9c5c96">logstash mysql 准实时同步到 elasticsearch - 简书</a></p>
<h2 id="5-conditionals">5 conditionals</h2>
<p>当需要在特定条件下过滤或输出事件。可以使用条件条件判断语句。Logstash中的条件查看和行为与编程语言中的条件相同。条件语句支持if，else if以及else和可以被嵌套。</p>
<p><a href="https://www.elastic.co/guide/en../../images/Logstash/6.4/event-dependent-configuration.html#conditionals">conditionals</a></p>
<h3 id="51-语法">5.1 语法</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="k">if</span> EXPRESSION <span class="o">{</span>
</span></span><span class="line"><span class="cl">  ...
</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="k">if</span> EXPRESSION <span class="o">{</span>
</span></span><span class="line"><span class="cl">  ...
</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  ...
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>logstash支持以下比较运算符：</p>
<ul>
<li><font color="#f8070d" size=3><code>==</code></font> <font color="#f8070d" size=3><code>!=</code></font>、 <font color="#f8070d" size=3><code>&lt;</code></font> <font color="#f8070d" size=3><code>&gt;</code></font> <font color="#f8070d" size=3><code>&lt;=</code></font> <font color="#f8070d" size=3><code>&gt;=</code></font></li>
<li>regexp：<font color="#f8070d" size=3><code>=~</code></font><font color="#f8070d" size=3><code>!~</code></font>（检查右边的模式与左边的字符串值）</li>
<li>包含：<font color="#f8070d" size=3><code>in</code></font> <font color="#f8070d" size=3><code>not in</code></font></li>
<li>布尔运算符是： <font color="#f8070d" size=3><code>and</code></font> <font color="#f8070d" size=3><code>or</code></font> <font color="#f8070d" size=3><code>nand</code></font> <font color="#f8070d" size=3><code>xor（异或）</code></font></li>
<li>支持的一元运算符是：<font color="#f8070d" size=3><code>!</code></font></li>
</ul>
<hr>
<p>注：条件判断语句不包括数学运算符，如下写法logstash会报错</p>
<hr>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span>seg_num<span class="o">]</span>&lt;<span class="o">[</span>total_seg<span class="o">]</span>-1 <span class="o">{</span>
</span></span><span class="line"><span class="cl">  ...
</span></span><span class="line"><span class="cl"><span class="o">}</span> 
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="52-logstash常用条件判断语句">5.2 logstash常用条件判断语句</h3>
<p>为了避免多个input的数据提交到Elasticsearch后共存于一个索引中。使用index参数来为每个不同的type建立单独的索引。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">input<span class="o">{</span>
</span></span><span class="line"><span class="cl">  file<span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">path</span><span class="o">=</span>&gt; <span class="s2">&#34;/usr/local/elasticsearch-2.3.2/logs/elasticsearch.log.*&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">type</span><span class="o">=</span>&gt; <span class="s2">&#34;elasticsearch&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">start_position</span><span class="o">=</span>&gt; <span class="s2">&#34;beginning&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  file<span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">path</span><span class="o">=</span>&gt; <span class="s2">&#34;/var/log/secure&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">type</span><span class="o">=</span>&gt; <span class="s2">&#34;secure&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">start_position</span><span class="o">=</span>&gt; <span class="s2">&#34;beginning&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">output<span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="o">[</span>type<span class="o">]</span> <span class="o">==</span> <span class="s2">&#34;elasticsearch&#34;</span> <span class="o">{</span>  
</span></span><span class="line"><span class="cl">    elasticsearch <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">hosts</span><span class="o">=</span>&gt; <span class="o">[</span><span class="s2">&#34;192.168.44.129:9200&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="nv">index</span><span class="o">=</span>&gt; <span class="s2">&#34;elasticsearch-%{+YYYY-MM}&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="o">[</span>type<span class="o">]</span> <span class="o">==</span> <span class="s2">&#34;secure&#34;</span> <span class="o">{</span>  
</span></span><span class="line"><span class="cl">    elasticsearch <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">hosts</span><span class="o">=</span>&gt; <span class="o">[</span><span class="s2">&#34;192.168.44.129:9200&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="nv">index</span><span class="o">=</span>&gt; <span class="s2">&#34;secure-%{+YYYY-MM}&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>  
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用in运算符来测试字段是否包含特定字符串，键或（对于列表）元素：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">filter <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="o">[</span>foo<span class="o">]</span> in <span class="o">[</span>foobar<span class="o">]</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    mutate <span class="o">{</span> <span class="nv">add_tag</span> <span class="o">=</span>&gt; <span class="s2">&#34;field in field&#34;</span> <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="o">[</span>foo<span class="o">]</span> in <span class="s2">&#34;foo&#34;</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    mutate <span class="o">{</span> <span class="nv">add_tag</span> <span class="o">=</span>&gt; <span class="s2">&#34;field in string&#34;</span> <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="s2">&#34;hello&#34;</span> in <span class="o">[</span>greeting<span class="o">]</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    mutate <span class="o">{</span> <span class="nv">add_tag</span> <span class="o">=</span>&gt; <span class="s2">&#34;string in field&#34;</span> <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="o">[</span>foo<span class="o">]</span> in <span class="o">[</span><span class="s2">&#34;hello&#34;</span>, <span class="s2">&#34;world&#34;</span>, <span class="s2">&#34;foo&#34;</span><span class="o">]</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    mutate <span class="o">{</span> <span class="nv">add_tag</span> <span class="o">=</span>&gt; <span class="s2">&#34;field in list&#34;</span> <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="o">[</span>missing<span class="o">]</span> in <span class="o">[</span>alsomissing<span class="o">]</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    mutate <span class="o">{</span> <span class="nv">add_tag</span> <span class="o">=</span>&gt; <span class="s2">&#34;shouldnotexist&#34;</span> <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> !<span class="o">(</span><span class="s2">&#34;foo&#34;</span> in <span class="o">[</span><span class="s2">&#34;hello&#34;</span>, <span class="s2">&#34;world&#34;</span><span class="o">])</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    mutate <span class="o">{</span> <span class="nv">add_tag</span> <span class="o">=</span>&gt; <span class="s2">&#34;shouldexist&#34;</span> <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>  
</span></span></code></pre></td></tr></table>
</div>
</div><p>在单个条件中指定多个表达式：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span>loglevel<span class="o">]</span> <span class="o">==</span> <span class="s2">&#34;ERROR&#34;</span> and <span class="o">[</span>deployment<span class="o">]</span> <span class="o">==</span> <span class="s2">&#34;production&#34;</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    pagerduty <span class="o">{</span>
</span></span><span class="line"><span class="cl">    ...
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
  </channel>
</rss>

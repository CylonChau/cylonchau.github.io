<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>web middleware on Cylon&#39;s Collection</title>
    <link>https://www.oomkill.com/categories/web-middleware/</link>
    <description>Recent content in web middleware on Cylon&#39;s Collection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 04 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.oomkill.com/categories/web-middleware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nginx中的多路分支 - nginx map</title>
      <link>https://www.oomkill.com/2023/11/ngx-map/</link>
      <pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2023/11/ngx-map/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="引言">引言</h2>
<p>在 NGINX 中常用一种 “比较变量” 的手法，在编程语言中称为 “多路分支” (<em>Case statement</em>)，也就是 nginx map，需要注意的一点是，太低版本 NGINX MAP 中只能使用单变量</p>
<blockquote>
<p>Before version 0.9.0 only a single variable could be specified in the first parameter. <sup><a href="#1">[1]</a></sup></p>
</blockquote>
<p>下面将了解下 nginx map 的具体使用方式</p>
<h2 id="nginx-map使用">nginx map使用</h2>
<p>Nginx 配置主要是声明性的，这同样应用于 MAP 指令，NGINX MAP 是定义在  <code>http{}</code> 级别，最大的特点是<font color="#f8070d" size=3>仅在引用时进行处理</font>，  如果请求未触及使用 NGINX MAP 变量的配置部分，则不会执行该 map 变量查找。换句话来理解，当在上下文 server, <em>Location</em>, <em>if</em> 等中使用结果变量时（指定的不是计算结果，而是在需要时计算该结果的公式），才会被使用，在 NGINX 需要使用该变量之前，NGINX MAP 不会给请求增加任何开销。</p>
<p>NGINX MAP 用于根据另一个变量的值创建一个变量，如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">map $variable_to_check $variable_to_set {
</span></span><span class="line"><span class="cl">    &#34;check_if_variable_matches_me&#34;   &#34;variable_matches_checked_value&#34;;
</span></span><span class="line"><span class="cl">    default                          &#34;no_match&#34;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>在上面的例子中， 变量 <em>$variable_to_set</em> 的被设置的结果为：如果 <em>$variable_to_check</em> 值为 “<strong>check_if_variable_matches_me</strong>”， 那么 <em>$variable_to_set</em> 将被设置为值 “<strong>variable_matches_checked_value</strong>” ， 否则将设置为 “<strong>no_match</strong>”。</p>
<p>上面的就是一个编程语言的分支语句，例如将上面语句转换为 bash shell，那么意思为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$variable_to_check</span><span class="s2">&#34;</span> <span class="o">==</span> <span class="s2">&#34;check_if_variable_matches_me&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nv">variable_to_set</span><span class="o">=</span><span class="s2">&#34;variable_matches_checked_value&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="nv">variable_to_set</span><span class="o">=</span><span class="s2">&#34;no_match&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>当然作为分支语句，是支持多路分支的，他的写法如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">map $thing $useful_variable {
</span></span><span class="line"><span class="cl">    &#34;thing_matches_me&#34;         &#34;thing_matched_1&#34;;
</span></span><span class="line"><span class="cl">    &#34;nope_thing_matches_me&#34;    &#34;thing_matched_2&#34;;
</span></span><span class="line"><span class="cl">    default                    &#34;no_match&#34;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="正则表达式在map中特性">正则表达式在map中特性</h2>
<p>正则表达式 (<em>regular expression</em>） 是一种用于匹配源变量中复杂字符串模式的有用方法，但它会增加解析表达式的开销。默认情况下，NGINX MAP 指令在每个请求处理过程中只执行一次查找，即正则表达式的开销被限制为一次查找。但启用 &ldquo;<em>volatile</em>&rdquo; 参数会关闭变量缓存，这意味着每次使用 NGINX MAP 时都需要执行一次完整查找，从而增加了请求的额外开销，尤其是在高负载情况下，特别是当使用正则表达式时，可能会导致性能下降。</p>
<p>另外 &ldquo;<em>volatile</em>&rdquo; 参数的副作用是关闭了依赖于  &ldquo;<em>volatile</em>&rdquo;  MAP 变量的缓存。如果需要复杂的正则表达式，那么在 MAP 中不要使用  &ldquo;<em>volatile</em>&rdquo;  参数，如果关联的 MAP 变量或任何依赖于该 MAP 的变量在多个地方被引用。这种情况在流量增加并导致查找操作增多时才会变得明显，此时CPU利用率会升高；最重要的是要注意，<font color="#f8070d" size=3>CPU利用率上升的原因可能不明显</font>，因此需要谨慎使用 &ldquo;<em>volatile</em>&rdquo; 参数。</p>
<blockquote>
<p>volatile 在计算机中的术语是 “易失性”，例如IP 地址暂时保存在Web 服务器的 <em>易失性</em> 存储器中；随后将被立即删除</p>
</blockquote>
<h2 id="使用正则表达式检查漏洞接口">使用正则表达式检查漏洞接口</h2>
<p>这里提出一个关于正则表达式的示例 “用于验证某些输入数据” 将其代理到一个有漏洞的后端服务器的 URI 中包含 &ldquo;//&rdquo; 字符，从而绕过了某些安全保护措施，观察到的模式符合以下格式，&quot;//api/product&quot; 或  &ldquo;/api//product&rdquo;。此外，在某些时间点会出现周期性的请求峰值，URI 中包含 &ldquo;%2f&rdquo; 或 &ldquo;%2F&rdquo;，类似这样：&quot;/api%2Fproduct&quot; 或 &ldquo;%2fapi/product&rdquo;。这些模式可以使用带有正则表达式的 MAP 来匹配，并可以在安全规则中使用 MAP 变量。</p>
<p>使用到的匹配模式包含内置变量 <em>$uri</em> （不包含请求参数），这个参数可以用于上面提到的案例来做风险过滤，因为使用 <code>$uri</code> 来构建匹配规则看起来很适合。然而，这里存在一个问题，即 NGINX 可能会在请求处理的执行阶段修改或规范化 <code>$uri</code> 的值，这可能导致匹配规则不会匹配实际发送的 URI。</p>
<blockquote>
<p>规范化编码：NGINX 在规范化 <code>$uri</code> 时可能会解码其中的特殊字符。例如，<code>%2f</code> 可能被解码为 <code>/</code>，这意味着匹配规则很将不会匹配实际的编码。</p>
</blockquote>
<p>这里建议使用 NGINX 变量 <code>$request_uri</code> 来构建匹配器，而不是 <code>$uri</code>，以确保准确匹配请求的 URI，同时保留查询字符串。<code>$request_uri</code> 是一个 NGINX 内置变量，包含了请求的完整 URI，包括查询字符串。与之前提到的 <code>$uri</code> 不同，<code>$request_uri</code> 不会在请求处理的执行阶段修改或规范化，因此匹配内容与原请求保持原始不变。</p>
<p>另外，为了简化处理，可以创建两个不同的 MAP，一个用于匹配实际内容，另一个用于 shun 规则。这种分离方式将允许在其他 MAP 中重复使用包含原始不变 URI 的 <code>$uri_only</code> 变量，如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">map $request_uri $uri_only {
</span></span><span class="line"><span class="cl">    &#34;~^(?&lt;u&gt;[^\?]+)\?(?:.*)?&#34;  $u;
</span></span><span class="line"><span class="cl">    default                    $request_uri;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">map $uri_only $shun_if_client_is_a_baddy {
</span></span><span class="line"><span class="cl">    &#34;~\/\/&#34;                    1;
</span></span><span class="line"><span class="cl">    &#34;~*%2f&#34;                    1;
</span></span><span class="line"><span class="cl">    default                    0;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>在上面示例中，建立了 “分离” 方式的规则，下面是针对这组 map 含义解释：</p>
<p><em><strong>map $request_uri $uri_only</strong></em> 创建了一个 map 将 <code>$request_uri</code> 的值用于匹配和分析</p>
<ul>
<li><code>~</code>：告诉解析器后面的字符串应被解释为正则表达式。</li>
<li><code>^</code>：表示正则表达式将从 <code>$request_uri</code> 的字符串值的开头进行匹配。</li>
<li><code>^(?&lt;u&gt;...)</code>：这里创建了一个 “命名捕获组”，名为 <code>u</code>，它会匹配括号中的表达式，并将匹配的部分分配给 <code>$u</code> 变量。这个捕获组只在映射内部有效，不能在其他地方使用。</li>
<li><code>^(?&lt;u&gt;[^\?]+)</code>：这部分正则表达式使用方括号来定义捕获的字符，匹配的内容是从开头（<code>^</code>）到第一个问号 <code>?</code> 之前的所有字符。这样，它捕获了 <code>$request_uri</code> 的未修改部分，即不包括查询字符串的部分。</li>
<li><code>\?(?:.*)?</code>：这一部分匹配一个问号 <code>?</code>，后面跟着一个可选的未捕获组，包含任意数量的任何字符直到字符串的末尾。尽管这部分正则表达式不是必要的，因为前面已经捕获了整个 URI 的未修改部分，但它被添加为完整性和可能的其他情况。</li>
</ul>
<p><em><strong>map $uri_only $shun_if_client_is_a_baddy</strong></em> ：这个 map，用于将 <code>$uri_only</code> 的值用于匹配和决定是否将客户端标记为不良客户端。以下是有关这行代码的解释：</p>
<ul>
<li><code>~</code>：告诉解析器后面的字符串应被解释为正则表达式，用于匹配 <code>$uri_only</code>。</li>
<li><code>\/\/</code>：这部分正则表达式匹配 <code>$uri_only</code> 中是否包含两个连续的正斜杠。如果匹配成功，将为 <code>$shun_if_client_is_a_baddy</code> 赋值 &ldquo;1&rdquo;，否则为 &ldquo;0&rdquo;。</li>
<li><code>~*</code>：这部分告诉解析器正则表达式应该以不区分大小写的方式进行匹配。</li>
<li><code>%2f</code>：这部分正则表达式匹配 <code>$uri_only</code> 中是否包含字符串 &ldquo;%2f&rdquo;。如果匹配成功，将为 <code>$shun_if_client_is_a_baddy</code> 赋值 &ldquo;1&rdquo;，否则为 &ldquo;0&rdquo;。</li>
</ul>
<h3 id="规则应用">规则应用</h3>
<p>要使用上面 map 生效，可以将其放置在 <code>server{}</code> 上（同级），用于执行上述两个 map 并在请求处理阶段的早期触发响应：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">if ($shun_if_client_is_a_baddy = 1) {
</span></span><span class="line"><span class="cl">    return 403 &#39;You shall not pass!!!&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="比较变量">比较变量</h2>
<p>在 NGINX MAP 应用中经常遇到的示例是使用纯 NGINX 指令来比较两个变量是否相等。而在 nginx location 上下文中，并不推荐使用 if <sup><a href="#2">[2]</a></sup>，更多情况下执行变量比较通常推荐借助脚本语言来处理，例如下面一个 lua 示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">location /compare {
</span></span><span class="line"><span class="cl">    access_by_lua_block {
</span></span><span class="line"><span class="cl">        if ngx.var.variable1 == ngx.var.variable2 then
</span></span><span class="line"><span class="cl">            ngx.say(&#34;Variables are equal&#34;)
</span></span><span class="line"><span class="cl">        else
</span></span><span class="line"><span class="cl">            ngx.say(&#34;Variables are not equal&#34;)
</span></span><span class="line"><span class="cl">        end
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>但使用脚本语言增加了 NGINX 配置的复杂性以及需要内嵌或在引用单独文件中管理的另一段代码，在这种情况下 map 操作比较两个变量的场景是非常有用的。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># if delimeter between two variables is &#39;:&#39;
</span></span><span class="line"><span class="cl">map $thing1:$thing2 $do_things_match {
</span></span><span class="line"><span class="cl">    &#34;~^([^:]+):\1$&#34;         1;
</span></span><span class="line"><span class="cl">    default                 0;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>上面的规则解析如下：</p>
<ol>
<li><code>~</code>：字符告诉解析器后面的字符串应被解释为正则表达式。</li>
<li><code>^</code>：这个符号表示正则表达式将从字符串值的开头进行匹配。</li>
<li><code>^([^:]+)</code>：这部分正则表达式创建了一个无名捕获组，用于捕获从字符串开头（<code>^</code>）到冒号 <code>:</code> 之前的所有字符（不包含冒号）。这个捕获的内容将被分配给一个名为 &ldquo;\1&rdquo; 的后向引用变量。</li>
<li><code>:\1$</code>：这一部分用于将捕获的内容与 <code>$thing2</code> 变量的值进行比较。</li>
</ol>
<p>如果 <code>$thing1</code> 和 <code>$thing2</code> 匹配，则这个表达式将被视为匹配（或为真），并将设置一个新的变量 <code>$do_things_match</code> 的值为 &ldquo;1&rdquo;。如果 <code>$thing1</code> 不匹配 <code>$thing2</code>，则表达式不匹配，并将设置 <code>$do_things_match</code> 的值为 &ldquo;0&rdquo;。</p>
<p>下面是这个示例的一个应用，请求应该具有匹配的查询字符串  $arg_foo 和  X-BAR header</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">map $arg_FOO:$http_x_bar $shun_mismatched_payload {
</span></span><span class="line"><span class="cl">    &#34;~^([^:]+):\1$&#34;         1;
</span></span><span class="line"><span class="cl">    default                 0;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>那么可以在 server{} 段中增加判断</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">if ($shun_mismatched_payload = 1) {
</span></span><span class="line"><span class="cl">    return 403 &#39;You shall not pass!!!&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="真实请求ip的获取">真实请求IP的获取</h2>
<p>例如通常我们需要在日志中打印用户的真实IP，而这个IP隐藏的很深，通常引用了多个字段，例如</p>
<ul>
<li>Remote Address 是nginx与客户端进行TCP连接过程中，获得的客户端真实地址。Remote Address 无法伪造，因为建立 TCP 连接需要三次握手，如果伪造了源 IP，无法建立 TCP 连接，更不会有后面的 HTTP 请求。 一般情况下，在Envoy作为最外层代理时，此IP为真实的IP客户端IP</li>
<li>X-Real-IP 是一个自定义头。X-Real-Ip 通常被 HTTP 代理用来表示与它产生 TCP 连接的设备 IP，这个设备可能是其他代理，也可能是真正的请求端。X-Real-Ip 目前并不属于任何标准，代理和 Web 应用之间可以约定用任何自定义头来传递这个信息。</li>
<li>X-Forwarded-For X-Forwarded-For 是一个扩展头。HTTP/1.1（RFC 2616）协议并没有对它的定义，它最开始是由 Squid  这个缓存代理软件引入，用来表示 HTTP 请求端真实 IP，现在已经成为事实上的标准，被各大 HTTP  代理、负载均衡等转发服务广泛使用，并被写入 RFC 7239（Forwarded HTTP Extension）标准之中。<strong>通常，X-Forwarded-For可被伪造，并且使用CDN会被重写</strong></li>
</ul>
<p>例如，下面从 CDN 获取真实 IP 的示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">map $http_x_connecting_ip $client_vsip {
</span></span><span class="line"><span class="cl">	&#34;&#34; $http_x_real_ip;
</span></span><span class="line"><span class="cl">	~^(?P&lt;firstAddr&gt;[0-9\.]+),?.*$ $fristAddr;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">map $client_vsip $client_ydip {
</span></span><span class="line"><span class="cl">	&#34;&#34; $http_Incap_client_IP;
</span></span><span class="line"><span class="cl">	~^(?P&lt;firstAddr&gt;[0-9\.]+),?.*$ $fristAddr;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">map $client_ydip $client_ip {
</span></span><span class="line"><span class="cl">	&#34;&#34; $http_x_forwarded_for;
</span></span><span class="line"><span class="cl">	~^(?P&lt;firstAddr&gt;[0-9\.]+),?.*$ $fristAddr;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">map $client_ip $clientRealIP {
</span></span><span class="line"><span class="cl">	&#34;&#34; $remote_addr;
</span></span><span class="line"><span class="cl">	~^(?P&lt;firstAddr&gt;[0-9\.]+),?.*$ $fristAddr;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个 NGINX 配置示例中包含了一系列的 <code>map</code> 指令，用于创建变量映射，以根据不同的请求头信息来设置一系列变量的值。这些变量之间形成了一种链式映射，最终将请求的真实 IP 地址存储在 <code>$clientRealIP</code> 变量中。让我解释这些映射的作用：</p>
<ol>
<li>第一个 MAP 指令：
<ul>
<li><code>$http_x_connecting_ip</code> 是输入变量，根据请求中的 <code>X-Connecting-IP</code> 头部的值。</li>
<li><code>$client_vsip</code> 是输出变量，它根据 <code>$http_x_real_ip</code> 或请求头部中的 <code>X-Real-IP</code> 值进行映射。</li>
<li>这个映射检查 <code>$http_x_connecting_ip</code> 的值，如果为空（&quot;&quot;），则将 <code>$http_x_real_ip</code> 的值赋给 <code>$client_vsip</code>，否则根据正则表达式提取 <code>$http_x_connecting_ip</code> 中的 IP 地址，并赋给 <code>$client_vsip</code>。</li>
</ul>
</li>
<li>第二个 MAP  指令：
<ul>
<li><code>$client_vsip</code> 是输入变量，它是前一个映射的输出。</li>
<li><code>$client_ydip</code> 是输出变量，它根据 <code>$http_Incap_client_IP</code> 或 <code>$client_vsip</code> 进行映射。</li>
<li>这个映射检查 <code>$client_vsip</code> 的值，如果为空（&quot;&quot;），则将 <code>$http_Incap_client_IP</code> 的值赋给 <code>$client_ydip</code>，否则根据正则表达式提取 <code>$client_vsip</code> 中的 IP 地址，并赋给 <code>$client_ydip</code>。</li>
</ul>
</li>
<li>第三个 MAP 指令：
<ul>
<li><code>$client_ydip</code> 是输入变量，它是前一个映射的输出。</li>
<li><code>$client_ip</code> 是输出变量，它根据 <code>$http_x_forwarded_for</code> 或 <code>$client_ydip</code> 进行映射。</li>
<li>这个映射检查 <code>$client_ydip</code> 的值，如果为空（&quot;&quot;），则将 <code>$http_x_forwarded_for</code> 的值赋给 <code>$client_ip</code>，否则根据正则表达式提取 <code>$client_ydip</code> 中的 IP 地址，并赋给 <code>$client_ip</code>。</li>
</ul>
</li>
<li>第四个 MAP 指令：
<ul>
<li><code>$client_ip</code> 是输入变量，它是前一个映射的输出。</li>
<li><code>$clientRealIP</code> 是输出变量，它根据 <code>$remote_addr</code> 或 <code>$client_ip</code> 进行映射。</li>
<li>这个映射检查 <code>$client_ip</code> 的值，如果为空（&quot;&quot;），则将 <code>$remote_addr</code> 的值赋给 <code>$clientRealIP</code>，否则根据正则表达式提取 <code>$client_ip</code> 中的 IP 地址，并赋给 <code>$clientRealIP</code>。</li>
</ul>
</li>
</ol>
<p>最后在 location 段中将 <code>$clientRealIP</code> 向后传递</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">proxy_set_header X-Forwarded-For $clientRealIP
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="reference">Reference</h2>
<p><sup id="1">[1]</sup> <a href="http://nginx.org/en/docs/http/ngx_http_map_module.html">Module ngx_http_map_module</a></p>
<p><sup id="2">[2]</sup> <a href="https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/">If is Evil… when used in location context</a></p>
<p><sup id="3">[3]</sup> <a href="https://johnhpatton.medium.com/nginx-map-comparison-regular-express-229120debe46">NGINX Map Comparisons</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>将traefik部署为传统web架构模式</title>
      <link>https://www.oomkill.com/2020/10/traefik-on-physical/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/10/traefik-on-physical/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="traefik概述">traefik概述</h2>
<p>traefik-现代反向代理，也可称为现代边缘路由；traefik原声兼容主流集群，Kubernetes，Docker，AWS等。官方的定位traefik是一个让开发人员将时间花费在系统研发与部署功能上，而非配置和维护。并且traefik官方也提供自己的服务网格解决方案</p>
<p>作为一个 modern edge router ，traefik拥有与envoy相似的特性</p>
<ul>
<li>基于go语言研发，目的是为了简化开发人员的配置和维护</li>
<li>tcp/udp支持</li>
<li>http L7支持</li>
<li>GRPC支持</li>
<li>服务发现和动态配置</li>
<li>front/ edge prory支持</li>
<li>可观测性</li>
<li>流量管理</li>
<li>&hellip;</li>
</ul>
<h2 id="traefik-术语">traefik 术语</h2>
<p>要了解trafik，首先需要先了解一下 有关trafik中的一些术语。</p>
<ul>
<li>EntryPoints 入口点，是可以被下游客户端连接的命名网络位置，类似于envoy 的listener和nginx的listen</li>
<li>services 服务，负载均衡，上游主机接收来自traefik的连接和请求并返回响应。 类似于nginx upstream envoy的clusters</li>
<li>Providers 提供者，提供配置文件的后端，如文件，consul，redis，etcd等，可使traefik自动更新</li>
<li>routers 路由器，分析请求，将下游主机的请求处理转入到services</li>
<li>middlewares: 中间件，在将下游主机的请求转入到services时进行的流量调整</li>
</ul>
<h2 id="traefik部署安装">traefik部署安装</h2>
<p>traefik为go语言开发的，可以直接下载运行即可。此处介绍直接运行二进制程序</p>
<p>后端环境准备,此处为docker运行的两个后端。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">91</span><span class="p">:</span><span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">v1_server</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default_server</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">92</span><span class="p">:</span><span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">v1_server</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default_server</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="traefik配置说明">traefik配置说明</h2>
<p>Traefik中的配置可以引用两种不同的内容：</p>
<ul>
<li>完全动态路由配置（动态配置）</li>
<li>启动时配置（静态配置）</li>
</ul>
<p>静态配置一般定义traefik的endpoints 与providers，这些不经常变动
动态配置一般定义traefik的处理浏览的部分，如 中间件，路由，浏览管理等。</p>
<ul>
<li>traefik1 与 traefik2的配置文件不兼容</li>
</ul>
<p>此处配置主要以file方式讲解。</p>
<p>静态配置部分：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">web</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="p">:</span><span class="m">8081</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">[</span><span class="l">api]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="l">dashboard = true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="l">insecure  = true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">providers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">file</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filename</span><span class="p">:</span><span class="w"> </span><span class="l">./root.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">[</span><span class="l">accessLog]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">filePath = &#34;/root/access.log&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">format = &#34;json&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>动态配置部分</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">http</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">routers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">router0</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rule</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Host(`test.com`)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;service-foo&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">router1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rule</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Path(`/`)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">service</span><span class="p">:</span><span class="w">  </span><span class="s2">&#34;baidu&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">service-foo</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">loadBalancer</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">servers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://10.0.0.4:91/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://10.0.0.4:92/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">baidu</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">loadBalancer</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">servers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="l">http://www.baidu.com/</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20201005000804058-827990836.png" alt=""  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20201005001607577-533981073.png" alt=""  /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy：TLS双向认证</title>
      <link>https://www.oomkill.com/2020/09/envoy-mutual-tls/</link>
      <pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-mutual-tls/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="环境准备">环境准备</h2>
<table>
<thead>
<tr>
<th>主机</th>
<th>角色</th>
<th>数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>front-envoy</td>
<td>front envoy</td>
<td>1</td>
</tr>
<tr>
<td>service envoy</td>
<td>作为内部后端的envoy</td>
<td>2</td>
</tr>
<tr>
<td>end</td>
<td>后端应用程序</td>
<td>2</td>
</tr>
</tbody>
</table>
<p>访问 <code>/</code> front-envoy ==&gt; end * 2
访问 <code>/red/colorful</code> ==&gt; end red 不验证客户端证书 单项tls
访问 <code>/gray/colorful</code> ==&gt; end gray 验证客户端证书  双项tls</p>
<h3 id="docker-compose">docker-compose</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">version: &#39;3&#39;
</span></span><span class="line"><span class="cl">services:
</span></span><span class="line"><span class="cl">  front-envoy:
</span></span><span class="line"><span class="cl">    image: envoyproxy/envoy-alpine:v1.15-latest
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - ENVOY_UID=0
</span></span><span class="line"><span class="cl">    ports:
</span></span><span class="line"><span class="cl">    - 80:80
</span></span><span class="line"><span class="cl">    - 443:443
</span></span><span class="line"><span class="cl">    - 82:9901
</span></span><span class="line"><span class="cl">    volumes:
</span></span><span class="line"><span class="cl">    - ./envoy.yaml:/etc/envoy/envoy.yaml
</span></span><span class="line"><span class="cl">    - ./certs/front-envoy/:/etc/envoy/certs/
</span></span><span class="line"><span class="cl">    - ./certs/CA/:/etc/envoy/ca/
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - front-envoy
</span></span><span class="line"><span class="cl">    depends_on:
</span></span><span class="line"><span class="cl">    - webserver1
</span></span><span class="line"><span class="cl">    - webserver2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  gray-envoy:
</span></span><span class="line"><span class="cl">    image: envoyproxy/envoy-alpine:v1.15-latest
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - ENVOY_UID=0
</span></span><span class="line"><span class="cl">    volumes:
</span></span><span class="line"><span class="cl">    - ./service_gray.yaml:/etc/envoy/envoy.yaml
</span></span><span class="line"><span class="cl">    - ./certs/service_gray/:/etc/envoy/certs/
</span></span><span class="line"><span class="cl">    - ./certs/CA1/:/etc/envoy/ca/
</span></span><span class="line"><span class="cl">    network_mode: &#34;service:webserver1&#34;
</span></span><span class="line"><span class="cl">    depends_on:
</span></span><span class="line"><span class="cl">    - webserver1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  red-envoy:
</span></span><span class="line"><span class="cl">    image: envoyproxy/envoy-alpine:v1.15-latest
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - ENVOY_UID=0
</span></span><span class="line"><span class="cl">    volumes:
</span></span><span class="line"><span class="cl">    - ./service_red.yaml:/etc/envoy/envoy.yaml
</span></span><span class="line"><span class="cl">    - ./certs/service_red/:/etc/envoy/certs/
</span></span><span class="line"><span class="cl">    - ./certs/CA1/:/etc/envoy/ca/
</span></span><span class="line"><span class="cl">    network_mode: &#34;service:webserver2&#34;
</span></span><span class="line"><span class="cl">    depends_on:
</span></span><span class="line"><span class="cl">    - webserver2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  webserver1:
</span></span><span class="line"><span class="cl">    image: cylonchau/envoy-end:latest
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - service_gray
</span></span><span class="line"><span class="cl">        - front_envoy
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - VERSION=v1
</span></span><span class="line"><span class="cl">    - COLORFUL=gray
</span></span><span class="line"><span class="cl">    expose:
</span></span><span class="line"><span class="cl">    - 90
</span></span><span class="line"><span class="cl">  webserver2:
</span></span><span class="line"><span class="cl">    image: cylonchau/envoy-end:latest
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - service_red
</span></span><span class="line"><span class="cl">        - front_envoy
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - VERSION=v1
</span></span><span class="line"><span class="cl">    - COLORFUL=red
</span></span><span class="line"><span class="cl">    expose:
</span></span><span class="line"><span class="cl">    - 90
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">networks:
</span></span><span class="line"><span class="cl">  envoymesh: {}
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="front-envoy">front-envoy</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">admin:
</span></span><span class="line"><span class="cl">  access_log_path: &#34;/dev/null&#34;
</span></span><span class="line"><span class="cl">  address:
</span></span><span class="line"><span class="cl">    socket_address:
</span></span><span class="line"><span class="cl">      address: 0.0.0.0
</span></span><span class="line"><span class="cl">      port_value: 9901
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">static_resources:
</span></span><span class="line"><span class="cl">  secrets:
</span></span><span class="line"><span class="cl">  - name: servers
</span></span><span class="line"><span class="cl">    tls_certificate:
</span></span><span class="line"><span class="cl">      certificate_chain:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/certs/server.crt&#34;
</span></span><span class="line"><span class="cl">      private_key:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/certs/server.key&#34;
</span></span><span class="line"><span class="cl">  - name: clients
</span></span><span class="line"><span class="cl">    tls_certificate:
</span></span><span class="line"><span class="cl">      certificate_chain:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/certs/client.crt&#34;
</span></span><span class="line"><span class="cl">      private_key:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/certs/client.key&#34;
</span></span><span class="line"><span class="cl">  - name: validation
</span></span><span class="line"><span class="cl">    validation_context:
</span></span><span class="line"><span class="cl">      trusted_ca:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/ca/ca.crt&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  listeners:
</span></span><span class="line"><span class="cl">  - name: listener_http
</span></span><span class="line"><span class="cl">    address:
</span></span><span class="line"><span class="cl">      socket_address: { address: 0.0.0.0, port_value: 80 }
</span></span><span class="line"><span class="cl">    filter_chains:
</span></span><span class="line"><span class="cl">    - filters:
</span></span><span class="line"><span class="cl">      - name: envoy.http_connection_manager
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
</span></span><span class="line"><span class="cl">          codec_type: auto
</span></span><span class="line"><span class="cl">          stat_prefix: ingress_http
</span></span><span class="line"><span class="cl">          route_config:
</span></span><span class="line"><span class="cl">            name: local_route
</span></span><span class="line"><span class="cl">            virtual_hosts:
</span></span><span class="line"><span class="cl">            - name: service
</span></span><span class="line"><span class="cl">              domains: [ &#34;*&#34; ]
</span></span><span class="line"><span class="cl">              routes:
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/&#34; }
</span></span><span class="line"><span class="cl">                redirect:
</span></span><span class="line"><span class="cl">                  https_redirect: true
</span></span><span class="line"><span class="cl">                  port_redirect: 443
</span></span><span class="line"><span class="cl">          http_filters:
</span></span><span class="line"><span class="cl">          - name: envoy.router
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  - name: listener_https
</span></span><span class="line"><span class="cl">    address:
</span></span><span class="line"><span class="cl">      socket_address: { address: 0.0.0.0, port_value: 443 }
</span></span><span class="line"><span class="cl">    filter_chains:
</span></span><span class="line"><span class="cl">    - filters:
</span></span><span class="line"><span class="cl">      - name: envoy.http_connection_manager
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
</span></span><span class="line"><span class="cl">          stat_prefix: ingress_https
</span></span><span class="line"><span class="cl">          codec_type: AUTO
</span></span><span class="line"><span class="cl">          route_config:
</span></span><span class="line"><span class="cl">            name: https_route
</span></span><span class="line"><span class="cl">            virtual_hosts:
</span></span><span class="line"><span class="cl">            - name: https_route
</span></span><span class="line"><span class="cl">              domains: [&#34;*&#34;]
</span></span><span class="line"><span class="cl">              routes:
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/gray/colorful&#34; }
</span></span><span class="line"><span class="cl">                route:
</span></span><span class="line"><span class="cl">                  prefix_rewrite: &#34;/colorful&#34;
</span></span><span class="line"><span class="cl">                  cluster: gray                                
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/red/colorful&#34; }
</span></span><span class="line"><span class="cl">                route:
</span></span><span class="line"><span class="cl">                  prefix_rewrite: &#34;/colorful&#34;
</span></span><span class="line"><span class="cl">                  cluster: red
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/&#34; }
</span></span><span class="line"><span class="cl">                route:
</span></span><span class="line"><span class="cl">                  cluster: front_envoy
</span></span><span class="line"><span class="cl">          http_filters:
</span></span><span class="line"><span class="cl">          - name: envoy.router
</span></span><span class="line"><span class="cl">          access_log:
</span></span><span class="line"><span class="cl">          - name: envoy.listener.accesslog
</span></span><span class="line"><span class="cl">            typed_config: 
</span></span><span class="line"><span class="cl">              &#34;@type&#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
</span></span><span class="line"><span class="cl">              path: /dev/stdout
</span></span><span class="line"><span class="cl">              log_format: 
</span></span><span class="line"><span class="cl">                text_format: &#34;[%START_TIME%] \&#34;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&#34; %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&#34;%REQ(X-FORWARDED-FOR)%\&#34; \&#34;%REQ(USER-AGENT)%\&#34; \&#34;%REQ(X-REQUEST-ID)%\&#34; \&#34;%REQ(:AUTHORITY)%\&#34; \&#34;%UPSTREAM_HOST%\&#34;\n&#34;
</span></span><span class="line"><span class="cl">      transport_socket:
</span></span><span class="line"><span class="cl">        name: envoy.transport_sockets.tls
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
</span></span><span class="line"><span class="cl">          common_tls_context:
</span></span><span class="line"><span class="cl">            tls_certificate_sds_secret_configs:
</span></span><span class="line"><span class="cl">            - name: servers
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  clusters:
</span></span><span class="line"><span class="cl">  - name: front_envoy
</span></span><span class="line"><span class="cl">    connect_timeout: 0.25s
</span></span><span class="line"><span class="cl">    type: strict_dns
</span></span><span class="line"><span class="cl">    lb_policy: round_robin
</span></span><span class="line"><span class="cl">    load_assignment:
</span></span><span class="line"><span class="cl">      cluster_name: front_envoy
</span></span><span class="line"><span class="cl">      endpoints:
</span></span><span class="line"><span class="cl">      - lb_endpoints:
</span></span><span class="line"><span class="cl">        - endpoint:
</span></span><span class="line"><span class="cl">            address:
</span></span><span class="line"><span class="cl">              socket_address: { address: front_envoy, port_value: 90 }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  - name: gray
</span></span><span class="line"><span class="cl">    connect_timeout: 0.25s
</span></span><span class="line"><span class="cl">    type: strict_dns
</span></span><span class="line"><span class="cl">    lb_policy: round_robin
</span></span><span class="line"><span class="cl">    load_assignment:
</span></span><span class="line"><span class="cl">      cluster_name: gray
</span></span><span class="line"><span class="cl">      endpoints:
</span></span><span class="line"><span class="cl">      - lb_endpoints:
</span></span><span class="line"><span class="cl">        - endpoint:
</span></span><span class="line"><span class="cl">            address:
</span></span><span class="line"><span class="cl">              socket_address: { address: service_gray, port_value: 443 }
</span></span><span class="line"><span class="cl">    transport_socket:
</span></span><span class="line"><span class="cl">      name: envoy.transport_sockets.tls
</span></span><span class="line"><span class="cl">      typed_config:
</span></span><span class="line"><span class="cl">        &#34;@type&#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
</span></span><span class="line"><span class="cl">        common_tls_context:
</span></span><span class="line"><span class="cl">          tls_certificate_sds_secret_configs:
</span></span><span class="line"><span class="cl">          - name: clients
</span></span><span class="line"><span class="cl">          validation_context_sds_secret_config:
</span></span><span class="line"><span class="cl">            name: validation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  - name: red
</span></span><span class="line"><span class="cl">    connect_timeout: 0.25s
</span></span><span class="line"><span class="cl">    type: strict_dns
</span></span><span class="line"><span class="cl">    lb_policy: round_robin
</span></span><span class="line"><span class="cl">    load_assignment:
</span></span><span class="line"><span class="cl">      cluster_name: red
</span></span><span class="line"><span class="cl">      endpoints:
</span></span><span class="line"><span class="cl">      - lb_endpoints:
</span></span><span class="line"><span class="cl">        - endpoint:
</span></span><span class="line"><span class="cl">            address:
</span></span><span class="line"><span class="cl">              socket_address: { address: service_red, port_value: 443 } 
</span></span><span class="line"><span class="cl">    transport_socket:
</span></span><span class="line"><span class="cl">      name: envoy.transport_sockets.tls
</span></span><span class="line"><span class="cl">      typed_config:
</span></span><span class="line"><span class="cl">        &#34;@type&#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
</span></span><span class="line"><span class="cl">        common_tls_context:
</span></span><span class="line"><span class="cl">          tls_certificate_sds_secret_configs:
</span></span><span class="line"><span class="cl">          - name: clients
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="service-gray">service gray</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">admin:
</span></span><span class="line"><span class="cl">  access_log_path: &#34;/dev/null&#34;
</span></span><span class="line"><span class="cl">  address:
</span></span><span class="line"><span class="cl">    socket_address:
</span></span><span class="line"><span class="cl">      address: 0.0.0.0
</span></span><span class="line"><span class="cl">      port_value: 9901
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">static_resources:
</span></span><span class="line"><span class="cl">  listeners:
</span></span><span class="line"><span class="cl">  - name: listener_https
</span></span><span class="line"><span class="cl">    address:
</span></span><span class="line"><span class="cl">      socket_address: { address: 0.0.0.0, port_value: 443 }
</span></span><span class="line"><span class="cl">    filter_chains:
</span></span><span class="line"><span class="cl">    - filters:
</span></span><span class="line"><span class="cl">      - name: envoy.http_connection_manager
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
</span></span><span class="line"><span class="cl">          stat_prefix: ingress_https
</span></span><span class="line"><span class="cl">          codec_type: AUTO
</span></span><span class="line"><span class="cl">          route_config:
</span></span><span class="line"><span class="cl">            name: https_route
</span></span><span class="line"><span class="cl">            virtual_hosts:
</span></span><span class="line"><span class="cl">            - name: https_route
</span></span><span class="line"><span class="cl">              domains: [&#34;*&#34;]
</span></span><span class="line"><span class="cl">              routes:
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/&#34; }
</span></span><span class="line"><span class="cl">                route:
</span></span><span class="line"><span class="cl">                  cluster: service_gray
</span></span><span class="line"><span class="cl">          http_filters:
</span></span><span class="line"><span class="cl">          - name: envoy.router
</span></span><span class="line"><span class="cl">          access_log:
</span></span><span class="line"><span class="cl">          - name: envoy.listener.accesslog
</span></span><span class="line"><span class="cl">            typed_config: 
</span></span><span class="line"><span class="cl">              &#34;@type&#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
</span></span><span class="line"><span class="cl">              path: /dev/stdout
</span></span><span class="line"><span class="cl">              log_format: 
</span></span><span class="line"><span class="cl">                text_format: &#34;[%START_TIME%] \&#34;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&#34; %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&#34;%REQ(X-FORWARDED-FOR)%\&#34; \&#34;%REQ(USER-AGENT)%\&#34; \&#34;%REQ(X-REQUEST-ID)%\&#34; \&#34;%REQ(:AUTHORITY)%\&#34; \&#34;%UPSTREAM_HOST%\&#34;\n&#34;
</span></span><span class="line"><span class="cl">      transport_socket:
</span></span><span class="line"><span class="cl">        name: envoy.transport_sockets.tls
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
</span></span><span class="line"><span class="cl">          common_tls_context:
</span></span><span class="line"><span class="cl">            tls_certificates:
</span></span><span class="line"><span class="cl">              certificate_chain:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.crt&#34;
</span></span><span class="line"><span class="cl">              private_key:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.key&#34;
</span></span><span class="line"><span class="cl">            validation_context:
</span></span><span class="line"><span class="cl">              trusted_ca:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/ca/ca.crt&#34;    
</span></span><span class="line"><span class="cl">          require_client_certificate: true
</span></span><span class="line"><span class="cl">          
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  clusters:
</span></span><span class="line"><span class="cl">  - name: service_gray
</span></span><span class="line"><span class="cl">    connect_timeout: 0.25s
</span></span><span class="line"><span class="cl">    type: strict_dns
</span></span><span class="line"><span class="cl">    lb_policy: round_robin
</span></span><span class="line"><span class="cl">    load_assignment:
</span></span><span class="line"><span class="cl">      cluster_name: service_gray
</span></span><span class="line"><span class="cl">      endpoints:
</span></span><span class="line"><span class="cl">      - lb_endpoints:
</span></span><span class="line"><span class="cl">        - endpoint:
</span></span><span class="line"><span class="cl">            address:
</span></span><span class="line"><span class="cl">              socket_address: { address: 127.0.0.1, port_value: 90 }
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="service-red">service red</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">admin:
</span></span><span class="line"><span class="cl">  access_log_path: &#34;/dev/null&#34;
</span></span><span class="line"><span class="cl">  address:
</span></span><span class="line"><span class="cl">    socket_address:
</span></span><span class="line"><span class="cl">      address: 0.0.0.0
</span></span><span class="line"><span class="cl">      port_value: 9901
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">static_resources:
</span></span><span class="line"><span class="cl">  listeners:
</span></span><span class="line"><span class="cl">  - name: listener_https
</span></span><span class="line"><span class="cl">    address:
</span></span><span class="line"><span class="cl">      socket_address: { address: 0.0.0.0, port_value: 443 }
</span></span><span class="line"><span class="cl">    filter_chains:
</span></span><span class="line"><span class="cl">    - filters:
</span></span><span class="line"><span class="cl">      - name: envoy.http_connection_manager
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
</span></span><span class="line"><span class="cl">          stat_prefix: ingress_https
</span></span><span class="line"><span class="cl">          codec_type: AUTO
</span></span><span class="line"><span class="cl">          route_config:
</span></span><span class="line"><span class="cl">            name: https_route
</span></span><span class="line"><span class="cl">            virtual_hosts:
</span></span><span class="line"><span class="cl">            - name: https_route
</span></span><span class="line"><span class="cl">              domains: [&#34;*&#34;]
</span></span><span class="line"><span class="cl">              routes:
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/&#34; }
</span></span><span class="line"><span class="cl">                route:
</span></span><span class="line"><span class="cl">                  cluster: service_red
</span></span><span class="line"><span class="cl">          http_filters:
</span></span><span class="line"><span class="cl">          - name: envoy.router
</span></span><span class="line"><span class="cl">          access_log:
</span></span><span class="line"><span class="cl">          - name: envoy.listener.accesslog
</span></span><span class="line"><span class="cl">            typed_config: 
</span></span><span class="line"><span class="cl">              &#34;@type&#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
</span></span><span class="line"><span class="cl">              path: /dev/stdout
</span></span><span class="line"><span class="cl">              log_format: 
</span></span><span class="line"><span class="cl">                text_format: &#34;[%START_TIME%] \&#34;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&#34; %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&#34;%REQ(X-FORWARDED-FOR)%\&#34; \&#34;%REQ(USER-AGENT)%\&#34; \&#34;%REQ(X-REQUEST-ID)%\&#34; \&#34;%REQ(:AUTHORITY)%\&#34; \&#34;%UPSTREAM_HOST%\&#34;\n&#34;
</span></span><span class="line"><span class="cl">      transport_socket:
</span></span><span class="line"><span class="cl">        name: envoy.transport_sockets.tls
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
</span></span><span class="line"><span class="cl">          common_tls_context:
</span></span><span class="line"><span class="cl">            tls_certificates:
</span></span><span class="line"><span class="cl">            - certificate_chain:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.crt&#34;
</span></span><span class="line"><span class="cl">              private_key:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.key&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  clusters:
</span></span><span class="line"><span class="cl">  - name: service_red
</span></span><span class="line"><span class="cl">    connect_timeout: 0.25s
</span></span><span class="line"><span class="cl">    type: strict_dns
</span></span><span class="line"><span class="cl">    lb_policy: round_robin
</span></span><span class="line"><span class="cl">    load_assignment:
</span></span><span class="line"><span class="cl">      cluster_name: service_red
</span></span><span class="line"><span class="cl">      endpoints:
</span></span><span class="line"><span class="cl">      - lb_endpoints:
</span></span><span class="line"><span class="cl">        - endpoint:
</span></span><span class="line"><span class="cl">            address:
</span></span><span class="line"><span class="cl">              socket_address: { address: 127.0.0.1, port_value: 90 }
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置说明">配置说明</h2>
<p>docker-compose</p>
<p><code>network_mode: &quot;service:webserver1&quot;</code> 指定网络类型，使envoy和后端程序运行在一个网络下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  secrets:
</span></span><span class="line"><span class="cl">  - name: servers
</span></span><span class="line"><span class="cl">    tls_certificate:
</span></span><span class="line"><span class="cl">      certificate_chain:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/certs/server.crt&#34;
</span></span><span class="line"><span class="cl">      private_key:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/certs/server.key&#34;
</span></span><span class="line"><span class="cl">  - name: clients
</span></span><span class="line"><span class="cl">    tls_certificate:
</span></span><span class="line"><span class="cl">      certificate_chain:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/certs/client.crt&#34;
</span></span><span class="line"><span class="cl">      private_key:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/certs/client.key&#34;
</span></span><span class="line"><span class="cl">  - name: validation
</span></span><span class="line"><span class="cl">    validation_context:
</span></span><span class="line"><span class="cl">      trusted_ca:
</span></span><span class="line"><span class="cl">        filename: &#34;/etc/envoy/ca/ca.crt&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><p>server</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">      transport_socket:
</span></span><span class="line"><span class="cl">        name: envoy.transport_sockets.tls
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
</span></span><span class="line"><span class="cl">          common_tls_context:
</span></span><span class="line"><span class="cl">            tls_certificates:
</span></span><span class="line"><span class="cl">              certificate_chain:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.crt&#34;
</span></span><span class="line"><span class="cl">              private_key:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.key&#34;
</span></span><span class="line"><span class="cl">            validation_context:    # 验证机制的相关配置
</span></span><span class="line"><span class="cl">              trusted_ca: # 信任的ca证书，未指定时不会验证对端证书
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/ca/ca.crt&#34;   # 这里指定的为根ca
</span></span><span class="line"><span class="cl">          require_client_certificate: true # boolval 设置为ture,Envoy将拒绝没有有效客户端证书的连接。
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="验证结果">验证结果</h2>
<p><code>/gray/colorful</code>后端服务开启了验证客户端ca，访问报错，后端程序并没收到请求，因证书无效，envoy销毁了请求

  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200929231821628-50877692.png" alt=""  />

  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200929231918489-3001705.png" alt=""  /></p>
<p>将根ca设置为可信任后

  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200929232146680-1136391150.png" alt=""  /></p>
<p><code>/red/colorful</code> 没开启验证客户端证书</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200929232026122-1666246149.png" alt=""  /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy开启访问日志 access_log</title>
      <link>https://www.oomkill.com/2020/09/envoy-access-log/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-access-log/</guid>
      <description></description>
      <content:encoded><![CDATA[<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">          access_log:
</span></span><span class="line"><span class="cl">          - name: envoy.listener.accesslog
</span></span><span class="line"><span class="cl">            typed_config: 
</span></span><span class="line"><span class="cl">              &#34;@type&#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
</span></span><span class="line"><span class="cl">              path: /var/log/envoy.log
</span></span><span class="line"><span class="cl">              log_format: 
</span></span><span class="line"><span class="cl">                text_format: &#34;[%START_TIME%] \&#34;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&#34; %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&#34;%REQ(X-FORWARDED-FOR)%\&#34; \&#34;%REQ(USER-AGENT)%\&#34; \&#34;%REQ(X-REQUEST-ID)%\&#34; \&#34;%REQ(:AUTHORITY)%\&#34; \&#34;%UPSTREAM_HOST%\&#34;\n&#34;
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>记录经过envoy代理后获取客户端真实IP</title>
      <link>https://www.oomkill.com/2020/09/envoy-real-ip/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-real-ip/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>在envoy作为前端代理时，用户ip的获取很重要，一般获取ip的方式。都是通过Header中的 <code>X-Forward-For</code>、 <code>X-Real-IP</code>或 <code>Remote addr</code> 等属性获取，但是如果确保Envoy可以获取到的ip是真实的用户ip呢？本篇继续解密！</p>
<h2 id="概念说明">概念说明</h2>
<ul>
<li>
<p>Remote Address
是nginx与客户端进行TCP连接过程中，获得的客户端真实地址。Remote Address 无法伪造，因为建立 TCP 连接需要三次握手，如果伪造了源 IP，无法建立 TCP 连接，更不会有后面的 HTTP 请求。
一般情况下，在Envoy作为最外层代理时，此IP为真实的IP客户端IP</p>
</li>
<li>
<p>X-Real-IP
是一个自定义头。X-Real-Ip 通常被 HTTP 代理用来表示与它产生 TCP 连接的设备 IP，这个设备可能是其他代理，也可能是真正的请求端。X-Real-Ip 目前并不属于任何标准，代理和 Web 应用之间可以约定用任何自定义头来传递这个信息。</p>
</li>
<li>
<p>X-Forwarded-For
X-Forwarded-For 是一个扩展头。HTTP/1.1（RFC 2616）协议并没有对它的定义，它最开始是由 Squid 这个缓存代理软件引入，用来表示 HTTP 请求端真实 IP，现在已经成为事实上的标准，被各大 HTTP 代理、负载均衡等转发服务广泛使用，并被写入 RFC 7239（Forwarded HTTP Extension）标准之中。<strong>通常，X-Forwarded-For可被伪造，并且使用CDN会被重写</strong></p>
</li>
</ul>
<h2 id="envoy中如何获取真实ip">Envoy中如何获取真实IP</h2>
<p>在Envoy中，涉及到客户端IP的配置如下：
use_remote_address： 默认值false，设置为true，使用客户端连接的真实远程地址，false是使用x-forwarded-for
skip_xff_append： 设置为true，则不会将远程地址附加到x-forwarded-for中
request_headers_to_add 添加请求头
request_headers_to_remove 删除一个请求头</p>
<h2 id="实验环境配置准备">实验环境配置准备</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">/dev/null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">9901</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">access_log</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy_http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">access_log</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.listener.accesslog</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">typed_config</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/var/log/envoy.log</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">log_format</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">text_format</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;[%START_TIME%] \&#34;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&#34; %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&#34;%REQ(X-FORWARDED-FOR)%\&#34; \&#34;%REQ(USER-AGENT)%\&#34; \&#34;%REQ(X-REQUEST-ID)%\&#34; \&#34;%REQ(:AUTHORITY)%\&#34; \&#34;%UPSTREAM_HOST%\&#34;\n&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">use_remote_address</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">skip_xff_append</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">xff_num_trusted_hops</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="c">#request_headers_to_remove: &#34;X-Forwarded-For&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">request_headers_to_add</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">header</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;X-Forwarded-For&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="c">#value: &#34;%REQ(REMOTE_ADDR)%&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">append</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">split_traffic</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">request_mirror_policies</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">runtime_fraction</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">default_value</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                        </span><span class="nt">numerator</span><span class="p">:</span><span class="w"> </span><span class="m">10</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                        </span><span class="nt">denominator</span><span class="p">:</span><span class="w"> </span><span class="l">HUNDRED</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">runtime_key</span><span class="p">:</span><span class="w"> </span><span class="l">routing.request_mirror.version</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: version1, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">start: 200, end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: version2, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">start: 200, end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w"> </span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>docker-compose</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">version: &#39;3&#39;
</span></span><span class="line"><span class="cl">services:
</span></span><span class="line"><span class="cl">  envoy:
</span></span><span class="line"><span class="cl">    image: envoyproxy/envoy-alpine:v1.15-latest
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - ENVOY_UID=0
</span></span><span class="line"><span class="cl">    ports:
</span></span><span class="line"><span class="cl">    - 80:80
</span></span><span class="line"><span class="cl">    - 443:443
</span></span><span class="line"><span class="cl">    - 82:9901
</span></span><span class="line"><span class="cl">    volumes:
</span></span><span class="line"><span class="cl">    - ./envoy.yaml:/etc/envoy/envoy.yaml
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - envoy
</span></span><span class="line"><span class="cl">    depends_on:
</span></span><span class="line"><span class="cl">    - webserver1
</span></span><span class="line"><span class="cl">    - webserver2
</span></span><span class="line"><span class="cl">    - webserver3
</span></span><span class="line"><span class="cl">    - webserver4
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  webserver1:
</span></span><span class="line"><span class="cl">    image: cylonchau/envoy-end:latest
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - version1
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - VERSION=v1
</span></span><span class="line"><span class="cl">    - COLORFUL=blue
</span></span><span class="line"><span class="cl">    expose:
</span></span><span class="line"><span class="cl">    - 90
</span></span><span class="line"><span class="cl">  webserver2:
</span></span><span class="line"><span class="cl">    image: cylonchau/envoy-end:latest
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - version1
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - VERSION=v1
</span></span><span class="line"><span class="cl">    - COLORFUL=blue
</span></span><span class="line"><span class="cl">    expose:
</span></span><span class="line"><span class="cl">    - 90
</span></span><span class="line"><span class="cl">  webserver3:
</span></span><span class="line"><span class="cl">    image: cylonchau/envoy-end:latest
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - version2
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - VERSION=v2
</span></span><span class="line"><span class="cl">    - COLORFUL=red
</span></span><span class="line"><span class="cl">    expose:
</span></span><span class="line"><span class="cl">    - 90
</span></span><span class="line"><span class="cl">  webserver4:
</span></span><span class="line"><span class="cl">    image: cylonchau/envoy-end:latest
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - VERSION=v2
</span></span><span class="line"><span class="cl">    - COLORFUL=red
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - version2
</span></span><span class="line"><span class="cl">    expose:
</span></span><span class="line"><span class="cl">    - 90
</span></span><span class="line"><span class="cl">networks:
</span></span><span class="line"><span class="cl">  envoymesh: {}
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="实际使用envoy作为代理时的外在环境">实际使用Envoy作为代理时的外在环境</h2>
<h3 id="环境1客户端直接和envoy通信">环境1：客户端直接和Envoy通信</h3>
<p>当一个正常请求时，此处可以正常获得客户端IP，实际上envoy拿的值是 <code>X-Forwarded-For</code></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200922180551775-1765056509.png" alt=""  /></p>
<p>后端日志</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200922180620492-245978055.png" alt=""  /></p>
<p>在伪造或者重写X-Forwarded-For后实际上是获取的伪造的值。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200922182317467-1041799072.png" alt=""  />

  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200922182341445-154122258.png" alt=""  />

  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200922182328207-435196820.png" alt=""  /></p>
<p>在Envoy直接作为外层代理时，可以使用如下参数，在不管如何伪造，都可以拿到对应的参数。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">name: local_route
</span></span><span class="line"><span class="cl">request_headers_to_remove: &#34;X-Forwarded-For&#34;  # 怕X-Forwarded-For为伪造值，可以删除此值，
</span></span><span class="line"><span class="cl">request_headers_to_add:   # 删除后还需要向后端传递，故还需要添加上此值
</span></span><span class="line"><span class="cl">  header: 
</span></span><span class="line"><span class="cl">    key: &#34;X-Forwarded-For&#34;
</span></span><span class="line"><span class="cl">    value: &#34;%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%&#34;  # 获取 remote_addr，此值无法伪造,为Envoy变量，表示 下游主机真实IP不加端口，即remote_addr 无端口
</span></span><span class="line"><span class="cl">  append: true  # 表面值是追加还是重写
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200922182933283-1362489132.png" alt=""  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200922182921033-1171269277.png" alt=""  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200922182944853-242060954.png" alt=""  /></p>
<p>可以看到envoy获取的为真实的ip并非伪造的请求</p>
<h3 id="环境2envoy前段存在代理无cdn">环境2：Envoy前段存在代理（无CDN）</h3>
<p>此环境下，前端存在代理，如f5、nginx等。这种情况下不能使用remote_addr 这样获取的为前端代理的IP并非真实IP</p>
<p>前端存在f5或nginx，可以在f5中配置irule传递真实的remote_addr，替换为真实的客户端IP，又前端代理重写配置，可自定义值。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">request_headers_to_remove: &#34;X-Forwarded-For&#34;
</span></span><span class="line"><span class="cl">request_headers_to_add:
</span></span><span class="line"><span class="cl">  header: 
</span></span><span class="line"><span class="cl">    key: &#34;X-Forwarded-For&#34;
</span></span><span class="line"><span class="cl">    value: &#34;%REQ(custom_header)%&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="环境3envoy前段存在代理单cdn">环境3：Envoy前段存在代理（单CDN）</h3>
<p>此环境下，前端存在代理，并且使用了CDN，应为每个CDN厂商获取客户真实IP的方式并不一致，这里需要找到cdn厂商找到获取真实IP的方法，在按照步骤2进行。</p>
<p>举例：</p>
<p><a href="https://help.aliyun.com/knowledge_detail/97599.html?spm=5176.13910061.sslink.1.2faf25a5ClWtSu">阿里云cdn获取真实IP方法</a></p>
<p><a href="http://help.yunaq.com/faq/67">加速乐获取真实IP方法</a></p>
<h3 id="环境4envoy前段存在代理多cdn">环境4：Envoy前段存在代理（多CDN）</h3>
<p>由于各CDN的带宽、价格、使用场景等因素，在实际情况下，可能使用多种CDN；如：正常情况下使用cdn加速，遇到攻击时切换安全防御高的CDN。一般仅加速的CDN价格比带防御的要便宜很多。</p>
<p>此处Enovy待更新，后端应用可根据CDN的http头正常获取IP</p>
<h3 id="环境5内部代理">环境5：内部代理</h3>
<p>无特殊需求可无需配置</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy 离群检测</title>
      <link>https://www.oomkill.com/2020/09/outlier-detection/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/outlier-detection/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="outlier-detection">outlier detection</h2>
<p>在异常检测领域中，常常需要决定新观察的点是否属于与现有观察点相同的分布（则它称为inlier），或者被认为是不同的（称为outlier）。离群是异常的数据，但是不一定是错误的数据点。</p>
<p>在Envoy中，离群点检测是动态确定上游集群中是否有某些主机表现不正常，然后将它们从正常的负载均衡集群中删除的过程。outlier detection可以与healthy check同时/独立启用，并构成整个上游运行状况检查解决方案的基础。</p>
<p>此处概念不做过多的说明，具体可以参考官方文档与自行google</p>
<h2 id="监测类型">监测类型</h2>
<ul>
<li>连续的5xx</li>
<li>连续的网关错误</li>
<li>连续的本地来源错误</li>
</ul>
<p>更多介绍参考官方文档 <a href="https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier#arch-overview-outlier-detection">outlier detection</a></p>
<h2 id="离群检测测试">离群检测测试</h2>
<p>说明，此处只能在单机环境测试更多还的参考与实际环境</p>
<h3 id="环境准备">环境准备</h3>
<p>docker-compose 模拟后端5个节点</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">82</span><span class="p">:</span><span class="m">9901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">cylonchau/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">cylonchau/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver3</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">cylonchau/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver4</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">cylonchau/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver5</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">cylonchau/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>envoy 配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">admin:
</span></span><span class="line"><span class="cl">  access_log_path: /dev/null
</span></span><span class="line"><span class="cl">  address:
</span></span><span class="line"><span class="cl">    socket_address: { address: 0.0.0.0, port_value: 9901 }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">static_resources:
</span></span><span class="line"><span class="cl">  listeners:
</span></span><span class="line"><span class="cl">  - name: listener_0
</span></span><span class="line"><span class="cl">    address:
</span></span><span class="line"><span class="cl">      socket_address: { address: 0.0.0.0, port_value: 80 }
</span></span><span class="line"><span class="cl">    filter_chains:
</span></span><span class="line"><span class="cl">    - filters:
</span></span><span class="line"><span class="cl">      - name: envoy_http_connection_manager
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
</span></span><span class="line"><span class="cl">          stat_prefix: ingress_http
</span></span><span class="line"><span class="cl">          codec_type: AUTO
</span></span><span class="line"><span class="cl">          route_config:
</span></span><span class="line"><span class="cl">            name: local_route
</span></span><span class="line"><span class="cl">            virtual_hosts:
</span></span><span class="line"><span class="cl">            - name: local_service
</span></span><span class="line"><span class="cl">              domains: [ &#34;*&#34; ]
</span></span><span class="line"><span class="cl">              routes:
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/&#34; }
</span></span><span class="line"><span class="cl">                route: { cluster: local_service }
</span></span><span class="line"><span class="cl">          http_filters:
</span></span><span class="line"><span class="cl">          - name: envoy.filters.http.router
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  clusters:
</span></span><span class="line"><span class="cl">  - name: local_service
</span></span><span class="line"><span class="cl">    connect_timeout: 0.25s
</span></span><span class="line"><span class="cl">    type: STRICT_DNS
</span></span><span class="line"><span class="cl">    lb_policy: ROUND_ROBIN
</span></span><span class="line"><span class="cl">    load_assignment:
</span></span><span class="line"><span class="cl">      cluster_name: local_service
</span></span><span class="line"><span class="cl">      endpoints:
</span></span><span class="line"><span class="cl">      - lb_endpoints:
</span></span><span class="line"><span class="cl">        - endpoint:
</span></span><span class="line"><span class="cl">            address:
</span></span><span class="line"><span class="cl">              socket_address: { address: webservice, port_value: 90 }
</span></span><span class="line"><span class="cl">    health_checks:
</span></span><span class="line"><span class="cl">      timeout: 3s
</span></span><span class="line"><span class="cl">      interval: 90s
</span></span><span class="line"><span class="cl">      unhealthy_threshold: 5
</span></span><span class="line"><span class="cl">      healthy_threshold: 5
</span></span><span class="line"><span class="cl">      no_traffic_interval: 240s
</span></span><span class="line"><span class="cl">      http_health_check:
</span></span><span class="line"><span class="cl">        path: &#34;/ping&#34;
</span></span><span class="line"><span class="cl">        expected_statuses:
</span></span><span class="line"><span class="cl">          start: 200
</span></span><span class="line"><span class="cl">          end: 201
</span></span><span class="line"><span class="cl">    outlier_detection:
</span></span><span class="line"><span class="cl">      consecutive_5xx: 2
</span></span><span class="line"><span class="cl">      base_ejection_time: 30s
</span></span><span class="line"><span class="cl">      max_ejection_percent: 40
</span></span><span class="line"><span class="cl">      interval: 20s
</span></span><span class="line"><span class="cl">      success_rate_minimum_hosts: 5
</span></span><span class="line"><span class="cl">      success_rate_request_volume: 10
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="配置说明">配置说明</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">    outlier_detection:
</span></span><span class="line"><span class="cl">      consecutive_5xx: 2 # 连续的5xx错误数量
</span></span><span class="line"><span class="cl">      base_ejection_time: 30s # 弹出主机的基准时间。实际时间等于基本时间乘以主机弹出的次数
</span></span><span class="line"><span class="cl">      max_ejection_percent: 40 # 可弹出主机集群的最大比例，默认值为10% ，此处为40% 即集群中5个节点的2个节点
</span></span><span class="line"><span class="cl">      interval: 20s # 间隔时间
</span></span><span class="line"><span class="cl">      success_rate_minimum_hosts: 5 # 集群中最小主机数量
</span></span><span class="line"><span class="cl">      success_rate_request_volume: 10 # 在一个时间间隔内中收集请求检测的最小数量
</span></span></code></pre></td></tr></table>
</div>
</div><p>此处为了效果，将主动检测状态时间增加，主机弹出时间增加</p>
<h3 id="路由">路由</h3>
<p><code>/502bad</code> 模拟一个502的错误</p>
<h3 id="运行结果">运行结果</h3>
<p>模拟一些5xx请求和200请求</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"> workers
</span></span><span class="line"><span class="cl">envoy_1       | [2020-09-13 06:10:01.093][1][warning][main] [source/server/server.cc:537] there is no configured limit to the number of allowed active connections. Set a limit via the runtime key overload.global_downstream_max_connections
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 06:10:08 | 200 |      63.272?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver5_1  | [GIN] 2020/09/13 - 06:10:10 | 200 |      46.732?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 06:10:11 | 200 |       45.43?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver3_1  | [GIN] 2020/09/13 - 06:10:13 | 502 |      43.858?s |      172.22.0.7 | GET      &#34;/502bad&#34;
</span></span><span class="line"><span class="cl">webserver4_1  | [GIN] 2020/09/13 - 06:10:14 | 502 |      47.486?s |      172.22.0.7 | GET      &#34;/502bad&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 06:10:15 | 200 |      15.691?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver5_1  | [GIN] 2020/09/13 - 06:10:16 | 200 |      14.719?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 06:10:16 | 200 |      15.758?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver3_1  | [GIN] 2020/09/13 - 06:10:17 | 502 |      15.697?s |      172.22.0.7 | GET      &#34;/502bad&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 06:10:17 | 502 |      14.002?s |      172.22.0.7 | GET      &#34;/502bad&#34;
</span></span><span class="line"><span class="cl">webserver5_1  | [GIN] 2020/09/13 - 06:10:17 | 502 |      14.913?s |      172.22.0.7 | GET      &#34;/502bad&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 06:10:18 | 502 |      14.911?s |      172.22.0.7 | GET      &#34;/502bad&#34;
</span></span><span class="line"><span class="cl">webserver4_1  | [GIN] 2020/09/13 - 06:10:18 | 502 |      30.429?s |      172.22.0.7 | GET      &#34;/502bad&#34;
</span></span><span class="line"><span class="cl">webserver5_1  | [GIN] 2020/09/13 - 06:10:19 | 200 |      14.377?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 06:10:19 | 200 |      14.861?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 06:10:19 | 200 |      18.924?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver5_1  | [GIN] 2020/09/13 - 06:10:19 | 200 |      15.899?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 06:10:19 | 200 |      24.849?s |      172.22.0.7 | GET      &#34;/&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><p>集群已弹出 20%的节点，健康检查结果为 <code>failed_outlier_check</code></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200914235411002-544771064.png" alt=""  /></p>
<p>请求已分配到其余三台节点</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200914235621322-160379589.png" alt=""  /></p>
<p>30秒后，弹出主机已回复正常</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200914235653755-867098697.png" alt=""  /></p>
<p>再次模拟请求</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200915000115981-2035284795.png" alt=""  /></p>
<p>30秒后，如在时间间隔内，无新增请求，节点依旧为 <code>failed_outlier_check</code>，有新增请求时恢复。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200914235821842-1144423541.png" alt=""  /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy的主动健康监测</title>
      <link>https://www.oomkill.com/2020/09/initiative-health-check/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/initiative-health-check/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="实验文件">实验文件</h2>
<p>docker-compose</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">HEALTHY=ok</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">82</span><span class="p">:</span><span class="m">9901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./certs:/etc/envoy/certs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">cylonchau/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">HEALTHY=ok</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">cylonchau/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>envoy配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">/dev/null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">9901</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy_http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">ingress_http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">local_service }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: webservice, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">1s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">10s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/ping&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="路由">路由</h2>
<p><code>/ping</code> 健康监测的路由
<code>/ping/ok</code> 手动将节点设置为有效节点
<code>/ping/fail</code> 手动将节点设置为失效</p>
<h2 id="测试结论">测试结论</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ curl -s 127.0.0.1:82/clusters|grep health
</span></span><span class="line"><span class="cl">local_service::172.22.0.2:90::health_flags::healthy
</span></span><span class="line"><span class="cl">local_service::172.22.0.3:90::health_flags::healthy
</span></span></code></pre></td></tr></table>
</div>
</div><p>当在集群启动时，所有节点默认为健康状态，在没有流量进入时，默认的间隔时间为1分钟。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200914174011726-808147398.png" alt=""  /></p>
<p>当有外部流量进入后，在结束上个默认间隔1分钟之后，会成为配置文件设置的默认10s</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200914174331897-2009755713.png" alt=""  /></p>
<p>手动设置一个节点为不健康状态，</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200914174503071-1127904264.png" alt=""  /></p>
<p>日志中可以看出，在手动设置为失效时，请求是不会到达后端失效节点，并且第一次请求时间明显长，在设置为成功时，后端节点判定为健康是在4次健康监测而非正常请求</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:00:48 | 200 |     110.706µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:00:48 | 200 |       47.29µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:00:49 | 200 |      14.909µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:01:18 | 200 |       58.53µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:01:19 | 200 |      15.988µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:01:42 | 200 |      20.844µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:01:42 | 200 |      12.247µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:01:52 | 200 |      38.892µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:01:52 | 200 |      32.254µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:01:54 | 200 |      33.689µs |             ::1 | GET      &#34;/ping/fail&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:01:59 | 200 |       82.86µs |             ::1 | GET      &#34;/ping/fail&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:02 | 200 |     155.202µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:02:02 | 502 |       26.73µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:07 | 200 |      19.193µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:08 | 200 |      14.651µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:09 | 200 |      15.101µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:09 | 200 |      15.294µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:10 | 200 |       26.45µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:10 | 200 |      17.679µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:11 | 200 |      14.703µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:11 | 200 |      14.546µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:02:12 | 502 |        8.37µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:12 | 200 |      14.214µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:02:22 | 502 |       8.998µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:22 | 200 |      13.489µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:02:30 | 200 |     119.326µs |             ::1 | GET      &#34;/ping/ok&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:32 | 200 |       8.864µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:02:32 | 200 |      14.679µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:38 | 200 |      14.781µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:39 | 200 |      15.452µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:39 | 200 |      14.825µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:40 | 200 |      14.784µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:40 | 200 |      14.788µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:41 | 200 |      72.985µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:02:42 | 200 |       8.523µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:42 | 200 |      14.497µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:42 | 200 |      15.611µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:47 | 200 |      46.065µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:47 | 200 |      19.455µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:47 | 200 |      15.079µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:48 | 200 |      22.208µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:02:52 | 200 |      39.693µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:02:52 | 200 |      32.376µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:02 | 200 |      19.476µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:03:02 | 200 |      11.041µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:03:12 | 200 |      14.292µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:12 | 200 |       8.215µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:22 | 200 |      16.145µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:03:22 | 200 |      11.455µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:29 | 200 |       15.02µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:03:30 | 200 |      34.405µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:30 | 200 |      14.647µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:03:30 | 200 |      15.039µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:31 | 200 |      16.706µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:03:31 | 200 |      15.667µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:31 | 200 |      15.025µs |      172.22.0.4 | GET      &#34;/&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:32 | 200 |      15.085µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:03:32 | 200 |      13.446µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver2_1  | [GIN] 2020/09/13 - 02:03:42 | 200 |      14.702µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span><span class="line"><span class="cl">webserver1_1  | [GIN] 2020/09/13 - 02:03:42 | 200 |       9.262µs |      172.22.0.4 | GET      &#34;/ping&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><p>无外部流量时的请求间隔设置 <a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/health_check.proto#envoy-v3-api-msg-config-core-v3-healthcheck-httphealthcheck">官方参考</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">no_traffic_interval
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy V3APi 开启 TLS</title>
      <link>https://www.oomkill.com/2020/09/envoy-v3-api-tls/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-v3-api-tls/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="方案架构">方案架构</h2>
<p>本次实例与官方Envoy front_proxy Example相似，首先会有一个Envoy单独运行。ingress的工作是给其他地方提供一个入口。来自外部的传入连接请求到这里，前端代理将会决定他们在内部的转发路径。

  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200913112723390-116429988.png" alt=""  /></p>
<p>图源自Envoy官网文档 <a href="https://www.envoyproxy.io/docs/envoy/latest/start/sandboxes/front_proxy">front_proxy</a></p>
<h2 id="生成证书">生成证书</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">openssl req -nodes -new -x509 -keyout certs/server.key -out certs/server.crt -days 365 -subj &#34;/C=CN/ST=Guangdong/L=Guangzhou/O=studyenvoy/OU=studyenvoy/CN=*.studyenvoy.cn&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="envoy配置说明">envoy配置说明</h2>
<p>v3 api中envoy去掉了<code>tls_context</code>的配置，配置tls首先需要熟悉envoy的如下两个术语</p>
<ul>
<li>Downstream：下游主机连接到 Envoy，发送请求并或获得响应。</li>
<li>Upstream：上游主机获取来自 Envoy 的链接请求和响应。</li>
</ul>
<p>本次使用的是ingress的代理，需要配置的即为 <code>Downstream</code></p>
<p>v3api中使用的是<code>transport_socket</code>，transport_socket为 <code>listeners</code> 当中某一个 <code>filter_chains</code> 中上线文中的配置。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200913110632755-1017048487.png" alt=""  />
<code>transport_socket</code> 官方说明为：
(config.core.v3.TransportSocket) Optional custom transport socket implementation to use for downstream connections. To setup TLS, set a transport socket with name tls and DownstreamTlsContext in the typed_config. If no transport socket configuration is specified, new connections will be set up with plaintext.</p>
<p>查看官网的<a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/transport_socket/transport_socket">transport_socket配置说明</a></p>
<p>这里使用的类型为DownstreamTlsContext</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200913111110762-649402692.png" alt=""  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200913111621651-669424319.png" alt=""  /></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"> transport_socket: # 设置tls
</span></span><span class="line"><span class="cl">        name: envoy.transport_sockets.tls # 定义名称，不能为空
</span></span><span class="line"><span class="cl">        typed_config: # 实现配置的类型
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
</span></span><span class="line"><span class="cl">          common_tls_context: # 设置tls上下文
</span></span><span class="line"><span class="cl">            tls_certificates：
</span></span><span class="line"><span class="cl">              certificate_chain： # 公钥设置 必须设置为，filename，inline_bytes
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.crt&#34;
</span></span><span class="line"><span class="cl">              private_key: # 私钥设置 必须设置为，filename，inline_bytes
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.key&#34;         
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="准备envoy和后端服务运行环境">准备envoy和后端服务运行环境</h2>
<h3 id="envoy配置文件">envoy配置文件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">admin:
</span></span><span class="line"><span class="cl">  access_log_path: /dev/null
</span></span><span class="line"><span class="cl">  address:
</span></span><span class="line"><span class="cl">    socket_address: { address: 0.0.0.0, port_value: 9901 }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">static_resources:
</span></span><span class="line"><span class="cl">  listeners:
</span></span><span class="line"><span class="cl">  - name: listeners_http
</span></span><span class="line"><span class="cl">    address:
</span></span><span class="line"><span class="cl">      socket_address: { address: 0.0.0.0, port_value: 80 }
</span></span><span class="line"><span class="cl">    filter_chains:
</span></span><span class="line"><span class="cl">    - filters:
</span></span><span class="line"><span class="cl">      - name: envoy.http_connenttion_manager
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
</span></span><span class="line"><span class="cl">          stat_prefix: ingress_http
</span></span><span class="line"><span class="cl">          codec_type: AUTO
</span></span><span class="line"><span class="cl">          route_config:
</span></span><span class="line"><span class="cl">            name: local_route
</span></span><span class="line"><span class="cl">            virtual_hosts:
</span></span><span class="line"><span class="cl">            - name: local_service
</span></span><span class="line"><span class="cl">              domains: [ &#34;*&#34; ]
</span></span><span class="line"><span class="cl">              routes:
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/&#34; }
</span></span><span class="line"><span class="cl">                redirect:
</span></span><span class="line"><span class="cl">                  path_redirect: &#34;/&#34;
</span></span><span class="line"><span class="cl">                  https_redirect: true
</span></span><span class="line"><span class="cl">          http_filters:
</span></span><span class="line"><span class="cl">          - name: envoy.router
</span></span><span class="line"><span class="cl">  - name: listener_https
</span></span><span class="line"><span class="cl">    address:
</span></span><span class="line"><span class="cl">      socket_address: { address: 0.0.0.0, port_value: 443 }
</span></span><span class="line"><span class="cl">    filter_chains:
</span></span><span class="line"><span class="cl">    - filters:
</span></span><span class="line"><span class="cl">      - name: envoy.http_connection_manager
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
</span></span><span class="line"><span class="cl">          stat_prefix: ingress_http
</span></span><span class="line"><span class="cl">          codec_type: AUTO
</span></span><span class="line"><span class="cl">          route_config:
</span></span><span class="line"><span class="cl">            name: local_route
</span></span><span class="line"><span class="cl">            virtual_hosts:
</span></span><span class="line"><span class="cl">            - name: local_service
</span></span><span class="line"><span class="cl">              domains: [ &#34;*&#34; ]
</span></span><span class="line"><span class="cl">              routes:
</span></span><span class="line"><span class="cl">              - match: { prefix: &#34;/&#34; }
</span></span><span class="line"><span class="cl">                route: { cluster: local_service }
</span></span><span class="line"><span class="cl">          http_filters:
</span></span><span class="line"><span class="cl">          - name: envoy.router
</span></span><span class="line"><span class="cl">      transport_socket:
</span></span><span class="line"><span class="cl">        name: envoy.transport_sockets.tls
</span></span><span class="line"><span class="cl">        typed_config:
</span></span><span class="line"><span class="cl">          &#34;@type&#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
</span></span><span class="line"><span class="cl">          common_tls_context:
</span></span><span class="line"><span class="cl">            tls_certificates:
</span></span><span class="line"><span class="cl">              certificate_chain:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.crt&#34;
</span></span><span class="line"><span class="cl">              private_key:
</span></span><span class="line"><span class="cl">                filename: &#34;/etc/envoy/certs/server.key&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  clusters:
</span></span><span class="line"><span class="cl">  - name: local_service
</span></span><span class="line"><span class="cl">    connect_timeout: 0.25s
</span></span><span class="line"><span class="cl">    type: STRICT_DNS
</span></span><span class="line"><span class="cl">    lb_policy: ROUND_ROBIN
</span></span><span class="line"><span class="cl">    load_assignment:
</span></span><span class="line"><span class="cl">      cluster_name: local_service
</span></span><span class="line"><span class="cl">      endpoints:
</span></span><span class="line"><span class="cl">      - lb_endpoints:
</span></span><span class="line"><span class="cl">        - endpoint:
</span></span><span class="line"><span class="cl">            address:
</span></span><span class="line"><span class="cl">              socket_address: { address: webservice, port_value: 90 }
</span></span></code></pre></td></tr></table>
</div>
</div><p>docker-compose文件示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">version: &#39;3&#39;
</span></span><span class="line"><span class="cl">services:
</span></span><span class="line"><span class="cl">  envoy:
</span></span><span class="line"><span class="cl">    image: envoyproxy/envoy-alpine:v1.15-latest
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - ENVOY_UID=0
</span></span><span class="line"><span class="cl">    ports:
</span></span><span class="line"><span class="cl">    - 80:80
</span></span><span class="line"><span class="cl">    - 443:443
</span></span><span class="line"><span class="cl">    - 82:9901
</span></span><span class="line"><span class="cl">    volumes:
</span></span><span class="line"><span class="cl">    - ./envoy.yaml:/etc/envoy/envoy.yaml
</span></span><span class="line"><span class="cl">    - ./certs:/etc/envoy/certs
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - envoy
</span></span><span class="line"><span class="cl">    depends_on:
</span></span><span class="line"><span class="cl">    - webserver
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  webserver:
</span></span><span class="line"><span class="cl">    image: cylonchau/envoy-end:latest
</span></span><span class="line"><span class="cl">    environment: 
</span></span><span class="line"><span class="cl">    - COLORFUL=blue
</span></span><span class="line"><span class="cl">    networks:
</span></span><span class="line"><span class="cl">      envoymesh:
</span></span><span class="line"><span class="cl">        aliases:
</span></span><span class="line"><span class="cl">        - myservice
</span></span><span class="line"><span class="cl">        - webservice
</span></span><span class="line"><span class="cl">    expose:
</span></span><span class="line"><span class="cl">    - 90
</span></span><span class="line"><span class="cl">     
</span></span><span class="line"><span class="cl">networks:
</span></span><span class="line"><span class="cl">  envoymesh: {}
</span></span></code></pre></td></tr></table>
</div>
</div><p>容器启动正常</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200913112045636-1039144144.png" alt=""  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200913112211614-785514675.png" alt=""  /></p>
<p>证书使用者也为生成证书的信息一致</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/1380340-20200913112436873-1139571567.png" alt=""  /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy TLS 配置</title>
      <link>https://www.oomkill.com/2020/09/envoy-tls-configuration/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-tls-configuration/</guid>
      <description></description>
      <content:encoded><![CDATA[<p><a href="https://www.envoyproxy.io/docs/envoy/latest/start/sandboxes/front_proxy">official front proxy</a></p>
<p>在一个Services Mash内部中，都会存在一到多个微服务，为了将南北向流量统一引入网格内部管理，通常存在单独运行的envoy实例。</p>
<p>Envoy的listener支持面向下游客户端一侧的TLS会话，并可选地支持验正客户端证书；</p>
<p>listener中用到的数字证书可于配置中静态提供，也可借助于SDS动态获取;</p>
<p><code>tls_context</code> 是 <code>listeners</code> 当中某一个 <code>filter_chains</code> 中上线文中的配置，<code>tls_context</code> 配置在哪个 listeners当中就隶属于哪个listeners。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="l">..</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">tls_context</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">common_tls_context</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 常规证书相关设置；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">tls_params</span><span class="p">:</span><span class="w"> </span>{}<span class="w">       </span><span class="c"># TLS协议版本，加密套件等；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">tls_certifcates</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">  </span><span class="c"># 用到的证书和私钥文件；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">certifcate_chain</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">filename</span><span class="p">:</span><span class="w">        </span><span class="c"># 证书文件路径;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">private_key</span><span class="p">:</span><span class="w"> </span>{}<span class="w">    </span><span class="c"># 私钥;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">filename</span><span class="p">:</span><span class="w">        </span><span class="c"># 私钥文件路径;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span>{}<span class="w">       </span><span class="c"># 私钥口令；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">filename</span><span class="p">:</span><span class="w">        </span><span class="c"># 口令文件路径；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">tls_certifcate_sds_secret_configs</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># 要基于SDS API获取TLS会话的相关信息时的配置；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">require_client_certifcate</span><span class="p">:</span><span class="w"> </span><span class="c"># 是否验证客户端证书；</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>例如，下面示例将前面的Ingress示例中的Envoy配置为通过TLS提供服务，并将所有基于http协议的请求重定向至https；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">/dev/null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">9901</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listeners_http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.http_connenttion_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">ingress_http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">redirect</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">path_redirect</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">https_redirect</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_https</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">443</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">ingress_http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">local_service }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">transport_socket</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.transport_sockets.tls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">common_tls_context</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">tls_certificates</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">certificate_chain</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">filename</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/etc/envoy/certs/server.crt&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">private_key</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">filename</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/etc/envoy/certs/server.key&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: webservice, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>将自定义配置组织于专用目录（例如ingres.htps_proxy/）下的envoy.yaml文件中，并创建Dockerfile文件构建自定义镜像；</p>
<ul>
<li>生成测试使用的数字证书；</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkdir -p certs
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">openssl req -nodes -new -x509 -keyout certs/server.key -out certs/server.crt -days 3650 -subj &#39;/CN=ik8s.io/O=MageEdu LTD./C=CN&#39;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">openssl req -nodes -new -key certs/server.key -out certs/server.crt -days 365 -subj &#34;/C=CN/ST=Guangdong/L=Guangzhou/O=xdevops/OU=xdevops/CN=*.xdevops.cn&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><p>docker-compose文件示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">82</span><span class="p">:</span><span class="m">9901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./certs:/etc/envoy/certs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy部署</title>
      <link>https://www.oomkill.com/2020/09/envoy-deployment/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-deployment/</guid>
      <description></description>
      <content:encoded><![CDATA[<h3 id="常用的构建方法">常用的构建方法</h3>
<p><a href="https://skyao.io/learning-envoy/">https://skyao.io/learning-envoy/</a></p>
<ul>
<li>
<p>手动配置构建环境，手动构建Envoy。</p>
</li>
<li>
<p>使用Envoy提供的预制于Docker中的构建环境进行手动构建二进制Envoy</p>
</li>
<li>
<p>使用Envoy提供的预制于Docker中的构建环境进行手动构建二进制Envoy，并直接将Envoy程序打包成Docker镜像</p>
</li>
<li>
<p>提供Bootstrap配置文件，存在使用xDS的动态资源时，还需要基于文件或管理服务器向其提供必须的配置信息</p>
<ul>
<li>也可使用Envoy的配置生成器生成示例性配置</li>
</ul>
</li>
<li>
<p>基于Bootstrap配置文件启动Envoy实例</p>
<ul>
<li>直接启动二进制Envoy</li>
<li>于Kubernetes平台基于Sidecar的形式运行Envoy，或运行单独的Envoy Pod（Edge Proxy）</li>
</ul>
<h3 id="启动envoy">启动Envoy</h3>
</li>
</ul>
<p>启动Envoy时，需要通过（<code>-c</code> 选项为其指定初始配置文件以提供引导配置（Bootstrap configuration），这也是使用v2APl的必然要求；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">envoy -c  &lt;path to config&gt;.{json,yaml,pb,pb_text}
</span></span></code></pre></td></tr></table>
</div>
</div><p>扩展名代表了配置信息的组织格式；</p>
<p>引导配置是Envoy配置信息的基点，用于承载Envoy的初始配置，它可能包括静态资源和动态资源的定义</p>
<ul>
<li>
<p>静态资源（static_resources）于启动直接加载</p>
</li>
<li>
<p>动态资源（dynamic_resources）则需要通过配置的xDS服务获取并生成</p>
</li>
</ul>
<p>通常，<code>Listener</code> 和 <code>Cluster</code> 是Envoy得以运行的基础，而二者的配置可以全部为静态格式，也可以混合使用动态及静态方式提供，或者全部配置为动态；</p>
<p>一个yaml格式纯静态的基础配置框架类似如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">linteners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="listener-简易静态配置">Listener 简易静态配置</h3>
<p>侦听器主要用于定义Envoy监听的用于接收Down streams请求的套接字、用于处理请求时调用的过滤器链及相关的其它配置属性;目前envoy仅支持tcp的协议</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: ..., port_value: ..., protocol</span><span class="p">:</span><span class="w"> </span><span class="l">...}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>L4过滤器echo主要用于演示网络过滤器APl的功能，它会回显接收到的所有数据至下游的请求者；在配置文件中调用时其名称为 <code>envoy.echo</code> ；</p>
<p>下面是一个最简单的静态侦听器配置示例：</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/echo_filter">echo文档</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="m">0.0.0.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">port_value</span><span class="p">:</span><span class="w"> </span><span class="m">15001</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.echo</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20220506225303515.png" alt="image-20220506225303515"  /></p>
<h3 id="cluster-静态配置">Cluster 静态配置</h3>
<p>通常，集群代表了一组提供相同服务的上游服务器（端点）的组合，它可由用户静态配置，也能够通过CDS动态获取；</p>
<p>集群需要在“预热”环节完成之后方能转为可用状态，这意味着集群管理器通过DNS解析或EDS服务完成端点初始化，以及健康状态检测成功之后才可用；</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto">cluster 官方参数</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 集群的唯一名称，且为提供alt_stat_name时会被用于统计信息中</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">alt_state_name</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 统计信息中使用集群带名称。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 用于解析集群（生成集群端点）时使用的服务发现类型，可用值有 STATIC STRJCT_DNS LOGICAL_DNS GRIGINAL_DST和EDS等</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">.. </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 负载均衡算法，支持 ROUND_ROBIN LEAST_REQUEST RING_HASH RANDOM MAGLEV CLUSTER_PROVIDED</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 为 STATIC STRJCT_DNS LOGICAL_DNS 类型的集群指定成员获取方式，EDS类型继承要使用eds_cluster_config字段配置。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">loda_assignment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluser_name</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 集群名称</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">endpoints</span><span class="p">:</span><span class="w"> </span><span class="c">#端点列表</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">locality</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c">#表示上游主机所处的位置，通常以 region、none等进行标识。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">lb_endpoints</span><span class="p">:</span><span class="w"> </span><span class="c"># 属于指定位置的端点列表</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">endpoint_name</span><span class="p">:</span><span class="w"> </span><span class="c">#端点的名称</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">endpoint</span><span class="p">:</span><span class="w"> </span><span class="c"># 端点的定义</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span><span class="c">#端点地址标识</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">port_value</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">portocol</span><span class="p">:</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>静态Cluster的各端点可以在配置中直接给出，也可借助DNS服务进行动态发现；</p>
<p>下面的示例直接给出了两个端点地址</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">test_cluster</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.25</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STATIC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">test_cluster</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 10.0.0.1, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 10.0.0.2, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="filter">filter</h3>
<h4 id="tcp_proxy">tcp_proxy</h4>
<p><a href="https://www.envoyproxy.io/docs/envoy/v1.15.0/api-v2/config/filter/network/tcp_proxy/v2/tcp_proxy.proto">官方文档</a></p>
<p>TCP代理过滤器在下游客户端及上游集群之间执行1:1网络连接代理</p>
<ul>
<li>它可以单独用作隧道替换，也可以同其他过滤器（如MongoDB过滤器或速率限制过滤器）结合使用；</li>
<li>TCP代理过滤器严格执行由全局资源管理于为每个上游集群的全局资源管理器设定的连接限制
<ul>
<li>TCP代理过滤器检查上游集群的资源管理器是否可以在不超过该集群的最大连接数的情况下创建连接；</li>
</ul>
</li>
<li>TCP代理过滤器可直接将请求路由至指定的集群，也能够在多个目标集群间基于权重进行调度转发；</li>
</ul>
<p>配置示例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address:0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.tcp_proxy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">tcp_01</span><span class="w"> </span><span class="c"># 统计数据的前缀</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">test_cluster</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>下面的示例基于TCP代理将下游用户（本机）请求代理至外部的（egress）两个web服务器</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.tcp_proxy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">tcp_01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">test_tcp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">test_tcp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">5s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STATIC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">test_tcp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 127.0.0.1, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl">version: <span class="s1">&#39;3&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>services:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>  envoy:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    image: envoyproxy/envoy-alpine:v1.15-latest<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    ports: <span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    - 81:80<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    environment: <span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    - <span class="nv">ENVOY_UID</span><span class="o">=</span><span class="m">0</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    volumes:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    - ./envoy.yaml:/etc/envoy/envoy.yaml<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    network_mode: <span class="s2">&#34;service:mainserver&#34;</span> <span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    depends_on:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    - mainserver<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>  mainserver:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    image: sealloong/envoy-end:latest<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    networks:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>      envoymesh:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>        aliases:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>        - webserver<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>        - httpserver<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>        - envoy_end<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>networks:<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>  envoymesh: <span class="o">{}</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="http_connection_manager">http_connection_manager</h4>
<p><code>http_connection_manager</code> 通过引入L7过滤器链实现了对http协议的操纵，其中router过滤器用于配置路由转发；</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto">官方文档</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: ..., port_value</span><span class="p">:</span><span class="w"> </span><span class="l">...., protocol:... }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">condec_type</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 链接管理器使用的编解码器类型，可用值有 AUTO HTTP1 HTTP2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 统计信息中使用的易读性的信息前缀。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">route_config</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 静态路由配置，动态配置应该使用rds字段进行指定。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="c"># 路由配置的名称</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w"> </span><span class="c"># 虚拟主机的路基名称，用于构成路由表</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 虚拟主机的逻辑名称，用于统计信息，与路由无关</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># 虚拟主机匹配的域名列表，支持 * 通配符，匹配搜索次序为精确匹配、前缀匹配、后缀匹配及完全匹配。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">routes</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># 路由列表，按照顺序搜索，第一个匹配到的路由信息。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">http_filters</span><span class="p">:</span><span class="w"> </span><span class="c"># 定义http过滤器链</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.router</span><span class="w"> </span><span class="c"># 调用过滤器为envoy.router</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>处理请求时，Envoy首先根据下游客户端请求的 <code>host</code> 来搜索虚拟主机列表中各 <code>virtual_host</code> 中的<code>domains</code> 列表中的定义，第一个匹配到的 <code>Domain</code> 的定义所属的 <code>virtual_host</code> 即可处理请求的虚拟主机;</p>
<p>而后搜索当前虚拟生机中的 <code>routes</code> 列表中的路由列表中各路由条目的 <code>match</code> 的定义，第一个匹配到的 <code>match</code> 后的路由机制（route.redirect或direct_response）即生效；</p>
<p><code>route_config.virtual_hosts.routes</code> 配置的路由信息用于将下游的客户端请求路由至合适的上游集群中某Server上；</p>
<ul>
<li>其路由方式是将url匹配match字段的定义
<ul>
<li><code>match</code> 字段可通过  <code>prefix</code>（前级）、<code>path</code>（路径）或 <code>regex</code>（正则表达式）三者之一来表示匹配模式；</li>
</ul>
</li>
<li>与match相关的请求将由 <code>route</code> 、<code>redirect</code> 或 <code>direct_response</code> 三个字段其中之一完成路由；</li>
<li>由route定义的路由目标必须是 <code>cluster</code>（上游集群名称）、<code>cluster_header</code>（根据请求标头中的 <code>cluster_header</code> 的值确定目标集群）或 <code>weighted_clusters</code>（路由目标有多个集群，每个集群拥有一定的权重）其中之一；</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">routes</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">...    </span><span class="w"> </span><span class="c"># 路由条目的名称</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 请求的URL的前缀</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">route</span><span class="p">:</span><span class="w">        </span><span class="c"># 路由条目</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluster</span><span class="p">:</span><span class="w">    </span><span class="c"># 目标下游集群。</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h5 id="egress代理配置示例">Egress代理配置示例</h5>
<p>下面是一个egree类型的Envoy配置示例，定义了两个virtual_host，不过，发往第二个virtual_host的请求将被重定向至第一个。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">egress_http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">study_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">web_service_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*.ik8s.io&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;ik8s.io&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">web_cluster_1 }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">web_service_2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*.k8scast.cn&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;k8scast.cn&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">redirect</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">host_redirect</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;www.ik8s.io&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">web_cluster_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">web_cluster_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: myservice, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">web_cluster_2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">web_cluster_2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: webserver2, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">81</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=red</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><strong>测试结果</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">$ curl -H <span class="s1">&#39;Host: www.ik8s.io&#39;</span> 127.0.0.1:81/ping
</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;message&#34;</span>:<span class="s2">&#34;pong&#34;</span><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ curl -H <span class="s1">&#39;Host: www.ik8s.io&#39;</span> 127.0.0.1:81/colorful
</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;message&#34;</span>:<span class="s2">&#34;hello with red.&#34;</span><span class="o">}</span>$ 
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="ingress-配置示例">ingress 配置示例</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy_http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">ingress_http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">local_service }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STATIC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 127.0.0.1, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;service:webserver&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=red</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy管理</title>
      <link>https://www.oomkill.com/2020/09/envoy-administartion/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-administartion/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>envoy内建了一个管理接口，它支持查询和修改操作，甚至有可能暴露私有数据（例如统计数据、集群名称和证书信息等）因此非常有必要精心编排期访问控制机制，以避免非授权访问。</p>
<p><code>administration interface</code> 属于 <code>bootstrap</code> 配置文件中的==顶级配置字段==使用。</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/v1.15.0/api-v3/admin/admin">administration interface offical document</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 管理接口的访问日志文件路径，无须记录访问日志使用/dev/null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profile_path</span><span class="p">:</span><span class="w"> </span><span class="l">...  </span><span class="w"> </span><span class="c"># cpu_profile的输出路径，默认为/var/log/envoy/envoy.prof;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w">   </span><span class="c"># 监听的套接字</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">prot_value</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>下面是一个简单的配置示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">/tmp/admin_access.log</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 127.0.0.1, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">9901</span><span class="w"> </span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>admin接口内置了多个 <code>/path</code> ，不同的path可能会分别接受不同的GET或POST请求</p>
<ul>
<li>GET <code>/help</code> ：<font color="#f8070d;" size=2>打印所有可用选项；</font></li>
<li><code>/</code> : Admin home page</li>
<li><code>/certs</code> : <font color="#f8070d;" size=2>GET 列出在的所有TLS相关的信息；</font></li>
<li><code>/clusters</code> : upstream cluster status <font color="#f8070d;" size=2>GET，格外支持使用 <code>/clusters?format=json</code> ；</font></li>
<li><code>/config_dump</code> : dump current Envoy configs (experimental) <font color="#f8070d;" size=2>GET，打印Envoy 加载的各类配置信息；</font></li>
<li><code>/contention</code> : dump current Envoy mutex contention stats (if enabled) <font color="#f8070d;" size=2>GET 互斥跟踪；</font></li>
<li><code>/cpuprofiler</code> : enable/disable the CPU profiler POST <font color="#f8070d;" size=2>启用/禁用cupprofiler。</font></li>
<li><code>/drain_listeners</code> : drain listeners</li>
<li><code>/healthcheck/fail</code> : cause the server to fail health checks <font color="#f8070d;" size=2>POST 强制设定HTTP健康状态检查为失败；</font></li>
<li><code>/healthcheck/ok</code> : cause the server to pass health checks <font color="#f8070d;" size=2>POST 强制设定HTTP健康状态检查为成功；</font></li>
<li><code>/heapprofiler</code> : enable/disable the heap profiler <font color="#f8070d;" size=2>POST 启用或禁用heapprofiler；</font></li>
<li><code>/help</code> : print out list of admin commands</li>
<li><code>/hot_restart_version</code> : print the hot restart compatibility version <font color="#f8070d;" size=2>GET 热重启相关信息；</font></li>
<li><code>/listeners</code> : print listener info <font color="#f8070d;" size=2>GET 列出所有侦听器，支持使用 <code>GET /listeners?format=json</code> </font></li>
<li><code>/logging</code> : query/change logging levels <font color="#f8070d;" size=2>POST，弃用或禁用不同子组件上的不同日志记录级别；</font></li>
<li><code>/memory</code> : print current allocation/heap usage <font color="#f8070d;" size=2>POST，打印当前内在分配信息，以字节为单位；；</font></li>
<li><code>/quitquitquit</code> : exit the server <font color="#f8070d;" size=2>POST，干净退出服务器；</font></li>
<li><code>/ready</code> : print server state, return 200 if LIVE, otherwise return 503</li>
<li><code>/reopen_logs</code> : reopen access logs</li>
<li><code>/reset_counters</code> : reset all counters to zero <font color="#f8070d;" size=2>POST，重置所有计数器；</font></li>
<li><code>/runtime</code> : print runtime values <font color="#f8070d;" size=2>GET，以json格式输出所有运行时相关值；</font></li>
<li><code>/runtime_modify</code> : modify runtime values <font color="#f8070d;" size=2>POST <code>/runtime_modify?k1=v1&amp;k2=v2</code> 添加或修改在查询参数中传递的运行时值；</font></li>
<li><code>/server_info</code> : print server version/status information  <font color="#f8070d;" size=2>GET，打印当前Envoy Server相关信息；</font></li>
<li><code>/stats</code> : print server stats <font color="#f8070d;" size=2>按需输出统计数据，如：<code>GET /stats?filter=reger</code>，另外还支持json和promotheus两种格式输出；</font></li>
<li><code>/stats/prometheus</code> : print server stats in prometheus format</li>
<li><code>/stats/recentlookups</code> : Show recent stat-name lookups</li>
<li><code>/stats/recentlookups/clear</code> : clear list of stat-name lookups and counter</li>
<li><code>/stats/recentlookups/enable</code> : enable recording of reset stat-name lookup names</li>
</ul>
<p><strong>集群统计信息中主机状态的说明</strong></p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>cx_total</td>
<td>Counter</td>
<td style="text-align:left">Total connecions</td>
</tr>
<tr>
<td>cx_active</td>
<td>Gauge</td>
<td style="text-align:left">Total active coinnections</td>
</tr>
<tr>
<td>cx_connect_fail</td>
<td>Counter</td>
<td style="text-align:left">Total connection failures</td>
</tr>
<tr>
<td>rq_total</td>
<td>Counter</td>
<td style="text-align:left">Total requests</td>
</tr>
<tr>
<td>rq_timeout</td>
<td>Counter</td>
<td style="text-align:left">Total timed out requests</td>
</tr>
<tr>
<td>rq_success</td>
<td>Counter</td>
<td style="text-align:left">Total requests with non-5xx responses</td>
</tr>
<tr>
<td>rq_error</td>
<td>Counter</td>
<td style="text-align:left">Total requests with 5xx responses</td>
</tr>
<tr>
<td>rq_active</td>
<td>Gauge</td>
<td style="text-align:left">Total active requests</td>
</tr>
<tr>
<td>healthy</td>
<td>String</td>
<td style="text-align:left">The health status of the host. See below</td>
</tr>
<tr>
<td>weight</td>
<td>Integer</td>
<td style="text-align:left">Load balancing weight(1-100)</td>
</tr>
<tr>
<td>zone</td>
<td>String</td>
<td style="text-align:left">Service zone</td>
</tr>
<tr>
<td>canary</td>
<td>Boolean</td>
<td style="text-align:left">Whether the host is a canary</td>
</tr>
<tr>
<td>success_rate</td>
<td>Double</td>
<td style="text-align:left">Request success rate (0-100). -1 if there was not enough request volume in the interval to calculate it</td>
</tr>
</tbody>
</table>
<p>示例总结</p>
<ul>
<li>GET <code>/clusters</code> ：列出所有已配置的集群，包括每个集群中发现的所有上游主机以及每个主机的统计信息；支持输出为json格式；
<ul>
<li>集群管理器信息：<code>version_info</code> string，无CDS时，则显示为 <code>version_info::static</code></li>
<li>集群相关的信息：断路器、异常点检测和用于表示是否通过CDS添加的标识 <code>add_via_api</code></li>
<li>每个主机的统计信息：包括总连接数、活动连接数、总请求数和主机的健康状态等；不健康的原因通常有以下三种：
<ul>
<li>√ filed_activehc：未通过主动健康状态检测；</li>
<li>√ failed_edshelth：被EDS标记为不健康；</li>
<li>√ failed_outlier_check：未通过异常检测机制的检查；</li>
</ul>
</li>
</ul>
</li>
<li>GET <code>/listeners</code> ：列出所有已配置的侦听器，包括侦听器的名称以及监听的地址；支持输出为json格式；</li>
<li>POST <code>/reset_counters</code> ：将所有计数器重围为0；不过，它只会影响Server本地的输出，对于已经发送到外部存储系统的统计数据无效；</li>
<li>GET <code>/config_dump</code> ：以json格式打印当前从Envoy的各种组件加载的配置信息；</li>
<li>GET <code>/ready</code> ：获取Server就绪与否的状态，LIVE状态为200，否则为503；</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy基础</title>
      <link>https://www.oomkill.com/2020/09/envoy-fundamental/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-fundamental/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>服务网格的基本功能</p>
<ul>
<li>控制服务间通信：熔断、重试、超时、故障注入、负载均衡和故障转移等。</li>
<li>服务发现：通过专用的服务总监发现服务端点。</li>
<li>可观测：指标数据采集、监控、分布式日志记录和分布式追踪。</li>
<li>安全性：TLS/SSL通信和秘钥管理。</li>
<li>身份认证和授权检查：身份认证，以及基于黑白名单或RBAC的访问控制功能。</li>
<li>部署：对容器技术的原生支持，例如Docker和Kubernetes等。</li>
<li>服务间的通信协议：HTTP1.1 HTTP2.0和gRPC等。</li>
<li>健康状态监测：监测上游服务的健康状态。</li>
<li>&hellip;.</li>
</ul>
<p>服务网格的部署模式有两种：主机共享代理和Sidecar容器</p>
<ul>
<li>主机共享代理
<ul>
<li>适用于同一主机存在许多容器的场景，并且还可以利用连接池来提高吞吐量。</li>
<li>带一个代理进程故障将终止其所在主机上的整个容器队列，受影响的不仅仅是单个服务。</li>
<li>实现方式中，常见的是允许为Kubernetes之上的 <code>DaemonSet</code>。</li>
</ul>
</li>
<li>Sidecar容器
<ul>
<li>代理进程注入每个Pod定义以与住容器一同运行。</li>
<li>Sidecar进程应该尽可能轻量且功能完善。</li>
<li>实现方案：Linkerd、Envoy和Conduit。</li>
</ul>
</li>
</ul>
<h2 id="what-is-enovy">What IS Enovy</h2>
<p>Enovy是工作与OSI模型的7层代理</p>
<p>在实现上，数据平面的主流解决方案有Linkerd、Nginx、Envoy、HAProxy和Traefik等，而控制平面的实现主要有Istio、Nelson和SmartStack等几种口Linkerd
●由Buoyant公司于2016年率先创建的开源高性能网络代理程序（数据平面），是业界第一款Service Mesh产品，引领并促进了相关技术的快速发展
·Linkerd使用Namerd提供控制平面，实现中心化管理和存储路由规则、服务发现配置、支持运行时动态路由等功能</p>
<blockquote>
<p><strong>Envoy</strong></p>
</blockquote>
<p>核心功能在于数据平面，于2016年由Lyft公司创建并开源，目标是成为通用的数据平面</p>
<p>云原生应用，既可用作前端代理，亦可实现Service Mesh中的服务间通信</p>
<p>Envoy常被用于实现APIGateway（如Ambassador）以及Kubernetes的Ingress Controller（例如gloo等），不过，基于Envoy实现的Service Mesh产品Istio有着更广泛的用户基础</p>
<p>Istio
·相比前两者来说，lstio发布时间稍晚，它于2017年5月方才面世，但却是目前最火热的Service Mesh解决方案，得到了Google、IBM、Lyt及Redhat等公司的大力推广及支持
·目前仅支持部署在Kubernetes之上，其数据平而由Envoy实现</p>
<p>envoy适用于现代大型面向服务架构的动态组织应用程序的7层代理应用程序，其典型特性：</p>
<ul>
<li>运行在架构进程之外</li>
<li>支持3/4层过滤器</li>
<li>支持HTTP协议7层过滤器</li>
<li>支持HTTP协议7层高级路由功能</li>
</ul>
<p></p>
<p>envoy在现代服务体系架构当中的适用位置既可以为一组服务提供代理，作为整个服务统一的api网关来进行接入，同时也可以对每一个微服务单独实现作为代理，此时需要以sidecar的形式运行在应用程序前端。进而与最前端的apigateway组织成所谓的服务网格（Sevice Mesh）。而在每一个Envoy实例内部都要接受请求。这个请求可能是来自互联网或服务网格之外的客户端，称之为南北流量；也可能是来自网格当中的其他服务的请求，称之为东西流量。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200827181417724.png" alt="image-20200827181417724"  /></p>
<p>在Envoy当中类似于Nginx或者haproxy的功能术语：</p>
<ul>
<li><strong><code>listeners</code></strong> ：面向客户端一侧提供监听并接受客户端请求的组件。类似于nginx的server或haproxy的frontend 。</li>
<li><strong><code>cluster</code></strong>：面向后端测，将多个被代理的实例分成组，统一进行负载均衡调度的组。</li>
<li><strong><code>cluster definltions</code></strong>：cluster的归类。</li>
<li><code>filter chains</code>：过滤器链，可以将多个链以流水线方式依次进行处理。</li>
</ul>
<p>面向客户端提供服务/监听的套接字，lintener内部包含一到多个filter组成<code>filter chains</code>，称之为过滤器链。过滤器是lintener内部的子组件。envoy支持4层过滤器和7层过滤器。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200827182244618.png" alt="image-20200827182244618"  /></p>
<p>envoy 术语</p>
<p><strong>主机（Host）</strong>：能够进行网络通信的实体（如手机，服务器等上的应用程序）。在这个文档中，主机是一个逻辑网络应用程序。一个物理硬件可能有多个主机上运行，只要他们可以独立寻址。</p>
<p><strong>下游（Downstream）</strong>：下游主机连接到Envoy，发送请求并接收响应。</p>
<p><strong>上游（Upstream）</strong>：上游主机接收来自Envoy的连接和请求并返回响应。</p>
<ul>
<li><strong>监听器（Listener）</strong>：侦听器是可以被下游客户端连接的命名网络位置（例如，端口，unix域套接字等）。Envoy公开一个或多个下游主机连接的侦听器。
<ul>
<li>filters chains，过滤器链L4/L7</li>
<li>route：完成对客户请求进行分类</li>
</ul>
</li>
</ul>
<p><strong>群集（Cluster）</strong>：群集是指Envoy连接到的一组逻辑上相似的上游主机。Envoy通过服务发现发现一个集群的成员。它可以通过主动健康检查来确定集群成员的健康度，从而Envoy通过负载均衡策略将请求路由到相应的集群成员。</p>
<p><strong>网格（Mesh）</strong>：协调一致以提供一致的网络拓扑的一组主机。在本文档中，“Envoy mesh”是一组Envoy代理，它们构成了由多种不同服务和应用程序平台组成的分布式系统的消息传递基础。</p>
<p><strong>运行时配置（Runtime configuration）</strong>：与Envoy一起部署的外置实时配置系统。可以更改配置设置，可以无需重启Envoy或更改主要配置。</p>
<h2 id="enovy的部署类型">enovy的部署类型</h2>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200828113756518.png" alt="image-20200828113756518"  /></p>
<p>仅用于service到service之间的通讯，对应的Enovy工作为</p>
<ul>
<li>egress listener</li>
<li>ingress listener</li>
<li>optional exteral service egress listeners</li>
</ul>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200828114252599.png" alt="image-20200828114252599"  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200828115046632.png" alt="image-20200828115046632"  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200828120238768.png" alt="image-20200828120238768"  /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy健康状态监测</title>
      <link>https://www.oomkill.com/2020/09/envoy-health-check/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-health-check/</guid>
      <description></description>
      <content:encoded><![CDATA[<h3 id="官方文档">官方文档</h3>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/health_check.proto">healthy_check</a></p>
<p>Envoy的服务发现并未采用完全一致的机制，而是假设主机以最终一致的方式加入或离开网格，它结合主动健康状态检查机制来判定集群的健康状态；</p>
<ul>
<li>健康与否的决策机制以完全分布式的方式进行，因此可以很好地应对网络分区；</li>
<li>为集群启用主机健康状态检查机制后，Envoy基于如下方式判定是否路由请求到一个主机；</li>
<li>发现失败，单健康检查正常，此时，无法添加新主机，但现有主机将继续正常运行。</li>
</ul>
<table>
<thead>
<tr>
<th>Discovery Status</th>
<th>Health Check OK</th>
<th>Health Check Failed</th>
</tr>
</thead>
<tbody>
<tr>
<td>Discovered</td>
<td>Route</td>
<td>Dont&rsquo;t Route</td>
</tr>
<tr>
<td>Absent</td>
<td>Route</td>
<td>Don&rsquo;t Route / Delete</td>
</tr>
</tbody>
</table>
<h3 id="故障处理机制">故障处理机制</h3>
<p>Envoy提供了一系列开箱即用的故障处理机制：</p>
<ul>
<li>超时（timeout）</li>
<li>有限次数的重试，并支持可变的重试延迟</li>
<li>主动健康检查与异常探测</li>
<li>连接池</li>
<li>断路器</li>
</ul>
<p>所有这些特性，都可以在运行时动态配置；结合流量管理机制，用户可为每个服务/版本定制所需的故障恢复机制；</p>
<h3 id="健康状态监测">健康状态监测</h3>
<p>健康状态检测用于确保代理服务器不会将下游客户端的请求代理至工作异常的上游主机；</p>
<p>Envoy支持两种类型的健康状态检测，二者均基于集群进行定义：</p>
<p><strong>主动检测</strong>（Active Health Checking）：Envoy周期性地发送探测报文至上游主机，并根据其响应判断其健康状态；Envoy目前支持三种类型的主动检测：</p>
<ul>
<li>HTTP：向上游主机发送HTTP请求报文</li>
<li>L3/L4：向上游主机发送L3/L4请求报文，基于响应的结果判定其健康状态，或仅通过连接状态进行判定；</li>
<li>Redis：向上游的redis服务器发送Redis PING；</li>
</ul>
<p><strong>被动检测</strong>（Passive Health Checking）：Envoy通过异常检测（Outlier Detection）机制进行被动模式的健康状态检测；</p>
<p>目前，仅htp router、tcp proxy和redis proxy三个过滤器支持异常值检测；</p>
<p>Envoy支持以下类型的异常检测：</p>
<ul>
<li>连续5XX：意指所有类型的错误，非htp router过滤器生成的错误也会在内部映射为5xx错误代码；</li>
<li>连续网关故障：连续5XX的子集，单纯用于http的502、503或504错误，即网关故障；</li>
<li>连续的本地原因故障：Envoy无法连接到上游主机或与上游主机的通信被反复中断；</li>
<li>成功率：主机的聚合成功率数据阀值；</li>
</ul>
<h4 id="主动健康状态监测">主动健康状态监测</h4>
<p>集群的主机健康状态检测机制需要显式定义，否则，发现的所有上游主机即被视为可用；</p>
<p>定义语法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">..</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">health_check_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">port_value</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 自定义健康状态监测是使用的端口。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 超时时长</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 时间间隔</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">initial_jitter</span><span class="p">:</span><span class="w"> </span><span class="l">... </span><span class="w"> </span><span class="c"># 初始监测时间点散开量，以毫秒为单位</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">interval_jitter</span><span class="p">:</span><span class="w"> </span><span class="l">.. </span><span class="w"> </span><span class="c"># 间隔监测时间点散开量，以毫秒为单位</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 将主机标记为不建行状态监测阈值，即至少多少次不健康的监测后才将其标记为不可用</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">healty_threshold</span><span class="p">:</span><span class="w"> </span><span class="l">...   </span><span class="w"> </span><span class="c"># 将主机标位健康状态的监测阈值，单初始监测成功一次视为健康</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">http_helth_check</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> 	 </span><span class="c"># HTTP类型的监测，包括此种类型在内的一下四种检测类型必须设置一种。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">tcp_health_check</span><span class="p">:</span><span class="w"> </span>{}<span class="w">     </span><span class="c"># TCP类型的监测。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">grpc_health_check</span><span class="p">:</span><span class="w"> </span>{}<span class="w">	</span><span class="c"># GRPC专用的监测</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">custom_health_check</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 自定义监测</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">reuse_connection</span><span class="p">:</span><span class="w"> </span><span class="l">...  </span><span class="w"> </span><span class="c"># 布尔型值，是否在多次监测之间重用连接，默认值true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">no_traffic_interval</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 定义未曾调度任何流量值集群时，其端点健康监测时间间隔，一旦其接受流量即转为正常的时间间隔</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">unhealthy_interval</span><span class="p">:</span><span class="w"> </span><span class="l">... </span><span class="w"> </span><span class="c"># 标记为 unhealthy 状态的端点的健康监测时间间隔，一但重新标记为 “health”，即转为正常时间间隔。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">unhealthy_edge_interval</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 端点刚被标记为 unhealthy 状态时的健康监测时间间隔，随后转为unhealthy_interval的定义。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">healthy_edge_interval</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c">#  端点刚被标记为 healthy 状态时的健康监测时间间隔，随后即转为interval的定义。</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h5 id="主动健康监测tcp">主动健康监测:TCP</h5>
<p>tcp类型监测</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EDS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">eds_cluster_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">eds_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">api_config_source</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">api_type</span><span class="p">:</span><span class="w"> </span><span class="l">GRPC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">grpc_services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">envoy_grpc</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">xds_cluster</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">5s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">10s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">healthy_threshod</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">tcp_health_check</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>空负载的tcp检测意味着仅通过连接状态判定其检测结果;</p>
<p>非空负载的cp检测可以使用send和receive来分别指定请求负荷及于响应报文中期望模糊匹配的结果;</p>
<h5 id="主动健康监测http">主动健康监测:HTTP</h5>
<p>http类型的检测可以自定义使用的 <code>path</code>、<code>host</code>和期望的响应码等，并能够在必要时修改（添加/删除）请求报文的标头</p>
<p>具体配置语法如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">healthy_checks</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;host&#34;: </span><span class="l">..</span><span class="w"> </span><span class="c"># 检测时使用的主机头，默认为空，此时使用集群名称。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;path&#34;: </span><span class="l">..</span><span class="w"> </span><span class="c"># 检测时使用的路径，例如 /healthz。必选参数</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;server_name&#34;: </span><span class="c"># 用于验证监测目标集群的服务名称参数，可选；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;request_headers_to_add&#34;: </span><span class="p">[]</span><span class="w"> </span><span class="c"># 想监测报文添加自定义标头列表；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;request_headers_to_add&#34;: </span><span class="p">[]</span><span class="w"> </span><span class="c"># 从监测报文中移除标头列表。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;use_http2&#34;: </span><span class="c"># 是否使用http2协议</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;expected_statuses&#34;: </span><span class="p">[]</span><span class="w"> </span><span class="c"># 期望的响应码列表</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>配置示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EDS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">eds_cluster_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="l">eds_config：</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">api_config_source</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">api_type</span><span class="p">:</span><span class="w"> </span><span class="l">GRPC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">grpc_services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">envoy_grpc</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">xds_cluster</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">healthy_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">5s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">10s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 默认为空值，并且自动使用集群为其值；</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 监测针对的路径，例如/healthz;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 期望的响应码，默认200</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">HEALTHY=ok</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">82</span><span class="p">:</span><span class="m">9901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./certs:/etc/envoy/certs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">HEALTHY=ok</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy_http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">ingress_http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">local_service }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">local_service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: webservice, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">1s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">2s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="异常主机驱逐机制">异常主机驱逐机制</h3>
<p>确定主机异常一&gt;若尚未驱逐主机，且已驱逐的数量低于允许的阀值，则已经驱逐主机一&gt;主机处于驱逐状态一定时长一&gt;超出时长后自动恢复服务。</p>
<p>异常探测通过outlier_dection字段定义在集群上下文中</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/outlier_detection.proto"></a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">outlier_detection</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">consecutive_5xx</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 因连续5xx错误而弹出主机之前，允许出现的连续5xx相应或本地原始错误数量，默认5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="c"># 弹射分析臊面之间的时间间隔，默认为 10000ms或10s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">base_ejection_time</span><span class="p">:</span><span class="w"> </span><span class="c"># 主机被弹出的基准时长，实际时长=基准时长*主机已弹出的次数；默认为30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">max_ejection_percent</span><span class="p">:</span><span class="w"> </span><span class="c"># 因一场探测而允许弹出的上游集群中的主机数量百分比，默认为10%，无论如何至少弹出一个主机。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enforcing_consecutive_5xx</span><span class="p">:</span><span class="w"> </span><span class="c"># 基于连续的5xx检查到主机异常时主机将被弹出的几率，可用于禁止弹出或缓慢弹出。默认100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">success_rate_minimum_hosts</span><span class="p">:</span><span class="w"> </span><span class="c"># 对集群启动成功率异常监测的最少主机数。默认5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">success_rate_stdev_volume</span><span class="p">:</span><span class="w"> </span><span class="c"># 在监测的一次时间间各种，必须收集的请求总数的最小值，默认100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">success_rate_stdev_factor</span><span class="p">:</span><span class="w"> </span><span class="c"># 用确定成功率异常值弹出的弹射阈值的因子： 弹射阈值=均值-(因子*平均成功率标准差)；不过，此处设置的值需要除以1000以得到因子，例如使用1.3 时需要将该参数值设置为1300。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">consecutive_gateway_failure</span><span class="p">:</span><span class="w"> </span><span class="c"># 因连续网关故障而天厨主机的最少连续故障数，默认5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enforcing_consecutive_gateway_failure</span><span class="p">:</span><span class="w"> </span><span class="c"># 基于连续网关故障检测时而弹出主机的几率的百分比，默认0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">split_external_local_origin_error</span><span class="p">:</span><span class="w"> </span><span class="c"># 是否区分本地原因而导致的故障和外部故障，默认为false，设置为true时，一下三项生效：</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">consective_local_origin_failure</span><span class="p">:</span><span class="w"> </span><span class="c"># 本地原因故障而弹出主机的最少故障次数，默认5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enforcing_consecutive_local_ogrgin_failure</span><span class="p">:</span><span class="w"> </span><span class="c"># 基于连续的本地故障检测到异常状态而弹出主机的几率百分比。默认100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#    enforcing_local_origin_success_rate: # 基于本地故障检测地成功率统计检测到异常状态而弹出主机的几率，默认100</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>同主动健康检查一样，异常检测也要配置在集群级别；下面的示例用于配置在返回3个连续5xx错误时将主机弹出30秒;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">consecutive_5xx</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">base_ejection_time</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;30s&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在新服务上启用异常检测时应该从不太严格的规则集开始，以便仅弹出具有网关连接错误的主机（HTTP503），并且仅在10%的时间内弹出它们;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">consecutive_gateway_failure</span><span class="p">:</span><span class="w"> </span><span class="m">3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">base_ejection_time</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;30s&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">enforcing_consecutive_gateway_failure</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;10&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>同时，高流量、稳定的服务可以使用统计信息来弹出频繁异常容的主机；下面的配置示例将弹出错误率低于群集平均值1个标准差的任何端点，统计信息每10秒进行一次评估，并且算法不会针对任何在10秒内少于500个请求的主机运行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;10s&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">base_ejection_time</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;30s&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">success_rate_minimum_hosts</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;10&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">success_rate_request_volume</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;500&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">success_rate_stdev_factor</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1000&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="离群值检测http">离群值检测:HTTP</h3>
<p>docker-compose</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">82</span><span class="p">:</span><span class="m">9901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver3</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver4</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver5</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">myservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">webservice</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>envoy流量管理</title>
      <link>https://www.oomkill.com/2020/09/envoy-traffic-management/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-traffic-management/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="灰度发布">灰度发布</h2>
<h3 id="概述">概述</h3>
<p>新版本上线时，无论是出于产品稳定性还是用户接受程度等方面因素的考虑，直接以新代旧都充满风险；于是，通行做法是新老版本同时在线，且一开始仅分出较小比例的流量至新版本，待确认新版本没问题后再逐级加大流量切换。</p>
<p>灰度发布是迭代的软件产品在生产环境安全上线的一种重要手段，对于Envoy来说，灰度发布仅是流量治理的一种典型应用；以下是几种常见的场景口金丝雀发布</p>
<pre><code>- 蓝绿发布
- A/B测试
- 流量镜像
</code></pre>
<h3 id="灰度策略">灰度策略</h3>
<p>需要在生产环境发布一个新的待上线版本时，需要事先添加一个灰度版本，而后将原有的生产环境的默认版本的流量引流一部分至此灰度版本，配置的引流机制即为灰度策略，经过评估稳定后，即可配置此灰度版本接管所有流量，并下线老版本。</p>
<p>常用的策略类型大体可分为<font color="#0215cd" size=3> <strong>“基于请求内容发布”</strong></font>和<font color="#0215cd" size=3><strong>“基于流量比例发布”</strong></font>两种类型</p>
<p><font color="#f8070d" size=2><strong>基于请求内容发布</strong>：</font>配置相应的请求内容规则，满足相应规则服务流量会路由到灰度版本；例如对于http请求，通过匹配特定的Cookie标头值完成引流</p>
<p>Cookie内容：</p>
<ul>
<li>
<p>完全匹配：当且仅当表达式完全符合此情况时，流量才会走到这个版本；</p>
</li>
<li>
<p>正则匹配：此处需要您使用正则表达式来匹配相应的规则；</p>
</li>
</ul>
<p>自定义Header：</p>
<ul>
<li>
<p>完全匹配：当且仅当表达式完全符合此情况时，流量才会走到这个版本；</p>
</li>
<li>
<p>正则匹配：此处需要您使用正则表达式来匹配相应的规则；可以自定义请求头的key和value，value支持完全匹配和正则匹配；</p>
</li>
</ul>
<p><font color="#f8070d" size=2><strong>基于流量比例发布</strong>：</font>对灰度版本配置期望的流量权重，将服务流量以指定权重比例引流到灰度版本；例如10%的流量分配为新版本，90%的流量保持在老版本。这种灰度策略也可以称为AB测试；</p>
<p><font color="#0215cd" size=2><strong>注：所有版本的权重之和为100；</strong></font></p>
<h3 id="灰度发布的实现方式">灰度发布的实现方式</h3>
<p><font color="#f8070d" size=3><strong>基于负载均衡器进行灰度发布</strong></font></p>
<p>在服务入口的支持流量策略的负载均衡器上配置流量分布机制</p>
<p>仅支持对入口服务进行灰度，无法支撑后端服务需求</p>
<p><font color="#f8070d" size=3><strong>基于Kubernetes进行灰度发布</strong></font></p>
<p>根据新旧版本应用所在的Pod数量比例进行流量分配，不断滚动更新旧版本Pod到新版本（先增后减、先减后增、又增又减）；服务入口通常是Service或Ingress。</p>
<p><font color="#f8070d" size=3><strong>基于服务网格进行灰度发布</strong></font></p>
<p>对于Envoy或lstio来说，灰度发布仅是流量治理机制的一种典型应用。通过控制平面，将流量配置策略分发至对目标服务的请求发起方的envoy sidecar上即可。</p>
<p>支持基于请求内容的流量分配机制，例如浏览器类型、cookie等。</p>
<p>服务访问入口通常是一个单独部署的Envoy Gateway。</p>
<h3 id="envoy中流量转移">Envoy中流量转移</h3>
<p>新版本上线时，为兼顾到产品的稳定性及用户的接受程度，让新老版本同时在线，将流量按需要分派至不同的版本；</p>
<ul>
<li>蓝绿发布</li>
<li>A/B测试</li>
<li>金丝雀发布</li>
<li>流量镜像</li>
<li>&hellip;.</li>
</ul>
<p>HTTP路由器能够将流量按比例分成两个或多个上游集群中虚拟主机中的路由，从而产生两种常见用例：</p>
<ul>
<li>
<p>版本升级：路由时将流量逐渐从一个集群迁移至另一个集群，实现灰度发布；</p>
</li>
<li>
<p>通过在路由中定义路由相关流量的百分比进行；</p>
</li>
</ul>
<p>A/B测试或多变量测试：同时测试多个相同的服务，路由的流量必须在相同服务的不同版本的集群之间分配；通过在路由中使用基于权重的集群路由完成；另外，匹配条件中，结合指定标头或也能够完成基于内容的流量管理；</p>
<p>流量迁移是指，通过在路由中配置运行时对象选择特定路由以及相应集群的概率的变动，从而实现将虚拟主机中特定路由的流量逐渐从一个集群迁移到另一个集群。</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-routematch"><strong>runtime_fraction</strong></a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">prefix|path|regex</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">runtime_faction:	   </span><span class="w"> </span><span class="c"># 额外匹配指定的运行时键值，每次评估匹配路径时，必须低于此字段指示的百分比，支持渐进式修改。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default_value</span><span class="p">:</span><span class="w">      </span><span class="c"># 运行时键值不可用时，则使用此默认值。 </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">numerator</span><span class="p">:</span><span class="w">        </span><span class="c"># 指定分子，默认0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">denominator</span><span class="p">:</span><span class="w">      </span><span class="c"># 指定分母，小于分母时，最终百分比为1， 分母可使用 HUNDRED（默认） TEN_THOUSAND和MILLION，</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">runtime_key</span><span class="p">:</span><span class="w"> </span><span class="l">routing.traffic_shift.KEY</span><span class="w"> </span><span class="c"># 要使用运行时的建，值需要用户自行定义。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">app_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix|path|regex</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">app_v2</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Envoy基于首次匹配以<font color="#f8070d" size=2>短路机制 </font>工作，若相应的路由存在runtime_fraction对象，则根据其值（或默认值）另外匹配百分比之外的其它请求；这意味着上述示例中，如果两个路由条目match条件一样，则 <code>runtime_fraction</code> 对象定义的百分比之外的流量将由第二个路由条目精确捕获。</p>
<p>用户可以通过不断地修改 <code>runtime_fraction</code> 对象的值完成流量迁移；<font color="#f8070d" size=3><code>curl envoy_administration_api:9901/runtime_modify?k1=v1&amp;k2=v2</code></font></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">/dev/null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">9901</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy_http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">base_domain</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">runtime_fraction</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">default_value</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">numerator</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">denominator</span><span class="p">:</span><span class="w"> </span><span class="l">HUNDRED</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">runtime_key</span><span class="p">:</span><span class="w"> </span><span class="l">routing.traffic_shift.sv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">app_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="l">/ }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">app_v1 }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">app_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">app_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: version1, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">app_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">app_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: version2, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>docker-compose</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">82</span><span class="p">:</span><span class="m">9901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">version1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">version1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver3</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">version2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=red</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver4</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=red</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">version2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>测试使用的脚本</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nb">declare</span> -i <span class="nv">v1</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="nb">declare</span> -i <span class="nv">v2</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="nb">declare</span> -r <span class="nv">inverval</span><span class="o">=</span><span class="s2">&#34;0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">declare</span> -i <span class="nv">count</span><span class="o">=</span><span class="nv">$2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">declare</span> -i <span class="nv">i</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="o">[</span> <span class="si">${</span><span class="nv">i</span><span class="si">}</span> -lt <span class="si">${</span><span class="nv">count</span><span class="si">}</span> <span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> curl -s http://<span class="nv">$1</span>/version <span class="p">|</span> grep <span class="s2">&#34;version£ºv2&#34;</span> <span class="p">&amp;</span>&gt; /dev/null<span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">		<span class="nb">let</span> v2++
</span></span><span class="line"><span class="cl">	<span class="k">else</span>
</span></span><span class="line"><span class="cl">		<span class="nb">let</span> v1++
</span></span><span class="line"><span class="cl">	<span class="k">fi</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> -e <span class="s2">&#34;\033[31m[Version1:v2]\033[0m==</span><span class="si">${</span><span class="nv">v1</span><span class="si">}</span><span class="s2">:</span><span class="si">${</span><span class="nv">v2</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">	sleep <span class="nv">$inverval</span>
</span></span><span class="line"><span class="cl">	<span class="nb">let</span> i++
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="envoy-流量分割-traffic-split">Envoy 流量分割 traffic split</h3>
<p>HTTP router过滤器支持在一个路由中指定多个上游具有权重属性的集群，而后将流量基于权重调度至此些集群其中之一。</p>
<p>分配给每个集群的权重也可以使用运行时参数进行调整；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">routes</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">weight_clusters</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># 与当前路由关联的一个或多个集群，required</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">.. </span><span class="w"> </span><span class="c"># 集群的名称，是指定已存在cluster的名称，非自定义标志。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">weight</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 集群权重，取值范围为0~total_weight </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">metadata_match</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 子集负载均衡器使用的端点元数据匹配条件，可选参数，仅用于上游及群众具有此字段中设置的元数据匹配的元数据端点以进行流量分配。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">total_weight</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w"> </span><span class="c"># 总权重值，默认100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">runtime_key_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w"> </span><span class="c"># 可选参数，用于设定键前缀，从而每个集群以 runtime_key_prefix+.cluster[i].name 为其键名，名能够运行时键值的方式为每个集群提供权重，其中，cluster[i].name表示列表中第i个集群</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="流量分流配置示例">流量分流配置示例</h4>
<p>假设存在某微服务应用，其v1和v2两个版本分别对应于appv1和appv2两个集群；</p>
<p>初始权重比例为appv1承载100%，而appv2不承载任何请求；随后可通过运行时参数，将所有流量切往appv2；</p>
<p>各自的权重比例可通过运行时参数动态调整：<font color="#f8070d" size=2><code>curl -XPOST http://host:admin_port/runtime_modify?routing.traffic_split.prefix.k1=0&amp;routing.traffic_splic.prefix.k2=100</code></font></p>
<p>与 <code>taffic_shift</code> 不同，<code>Traffic splitting</code> 只需要单个路由条目。 路由中的 <code>weighted_clusters</code> 配置块可用于指定多个上游群集以及指示将发送到每个上游群集的流量<strong>百分比</strong>的权重。</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/traffic_splitting.html?highlight=traffic_shift#">配置示例</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">/dev/null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">9901</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy_http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">split_traffic</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">weighted_clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">total_weight</span><span class="p">:</span><span class="w"> </span><span class="m">100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">runtime_key_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">routing.traffic_split.version</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">weight</span><span class="p">:</span><span class="w"> </span><span class="m">100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">weight</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">     
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: version1, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: version2, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>docker-compose</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">82</span><span class="p">:</span><span class="m">9901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">version1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">version1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver3</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">version2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=red</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver4</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=red</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">version2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="envoy-影子镜像-shadow-mirroring">Envoy 影子镜像 Shadow mirroring</h3>
<p><strong>关于影子镜像</strong></p>
<p>流量镜像，也称为流量复制或影子镜像</p>
<p>流量镜像功能通常用于在生产环境进行测试，通过将生产流量镜像拷贝到测试集群或者新版本集群，实现新版本接近真实环境的测试，旨在有效地降低新版本上线的风险；</p>
<p>流量镜像可用于以下场景</p>
<ul>
<li>验证新版本：实时对比镜像流量与生产流量的输出结果，完成新版本目标验证</li>
<li>测试：用生产实例的真实流量进行模拟测试</li>
<li>隔离测试数据库：与数据处理相关的业务，可使用空的数据存储并加载测试数据，针对该数据进行镜像流量操作，实现测试数据的隔离</li>
</ul>
<p>假设我们要配置以下设置，其中25％的流量被影子镜像到另一个上游，可通过访问 <code>myservice-test.mycompany.com</code>。</p>
<p></p>
<p>将流量转发至一个集群（主集群）的同时再转发到另一个集群（影子集群）</p>
<p>无须等待影子集群返回响应。</p>
<p>支持收集影子集群的常规统计信息，常用于测试具有实际生产流量的服务，而不会以任何方式影响最终客户。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="nt">cluster|weighted_cluster</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="l">..</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="nt">request_mirror_policies</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">trace_sampled</span><span class="p">:</span><span class="w"> </span><span class="c"># 确定是否应采样跟踪范围。默认为true。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">runtime_faction</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="nt">default_value</span><span class="p">:</span><span class="w">  </span><span class="c"># 运行时key不可用时，则使用此默认值，。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="nt">numerator</span><span class="p">:</span><span class="w">    </span><span class="c"># 指定分子，默认0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="nt">denominator</span><span class="p">:</span><span class="w">  </span><span class="c"># 指定坟墓，小鱼分子时，最终百分比为1，分母可固定使用HUNDRED TEN_RHOUSAND MILLION</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="nt">runtime_key</span><span class="p">:</span><span class="w"> </span><span class="l">routing.request_mirror.Key</span><span class="w"> </span><span class="c"># 运行时键，值需自行定义</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>默认情况下，路由器会镜像所有请求；也可使用如下两个参数配置转发的流量比例</p>
<pre><code>- `runtime_key` ：运行时键，用于明确定义向影子集群转发的流量的百分比，取值范围为0-10000，每个数字表示0.01%的请求比例；定义了此键却未指定其值时，默认为0；此参数即将废弃，并下面的参数所取代；
- `runtime_fraction`：转发的流量比例小于N/D，优先级高于单独指定的前一个参数runtime_key;
- `runtime_key` 定义运行时进行动态调整：&lt;font color=&quot;#f8070d&quot; size=2&gt;`curl -XPOST http://host:admin_port/runtime_modify?routing.request_mirror.version=100` &lt;/font&gt;
</code></pre>
<p>envoy.yaml</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">/dev/null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">9901</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy_http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">split_traffic</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">request_mirror_policies</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">runtime_fraction</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">default_value</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                        </span><span class="nt">numerator</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                        </span><span class="nt">denominator</span><span class="p">:</span><span class="w"> </span><span class="l">HUNDRED</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">runtime_key</span><span class="p">:</span><span class="w"> </span><span class="l">routing.request_mirror.version</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: version1, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">version_v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: version2, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://blog.markvincze.com/shadow-mirroring-with-envoy/">参考</a></p>
<h2 id="金丝雀发布-canary-deployment">金丝雀发布 Canary Deployment</h2>
<p>金丝雀部署通过在生产环境运行的服务中引一部分实际流量对一个新版本进行测试，测试新版本的性能和表现，然后从这部分的新版本中快速获取用户反馈</p>
<p>特点：通过在线上运行的服务中，新加入少量的新版本的服务，然后从这少量的新版本中快速获得反馈，根据反馈决定最后的交付形态</p>
<h2 id="蓝绿部署-blue-green-deployment">蓝绿部署 Blue-Green Deployment</h2>
<p>蓝绿发布提供了一种零宕机的部署方式，不停用老版本的同时部署新版本进行测试，确认没问题后将流量切到新版本。特点：</p>
<pre><code>- 在保留旧版本的同时部署新版本，将两个版本同时在线，新版本和旧版本互相热备。
- 通过切换路由权重（weight）的方式（非0即100）实现应用的不同版本上线或者下线，如果有问题可以快速地回滚到老版本。
</code></pre>
<h2 id="ab测试-ab-testing">AB测试 A/B Testing</h2>
<p>从本质上讲，AB测试是一种实验，通过向用户随机显示页面的两个或多个变体，并使用统计分析来确定哪种变体对于给定的转化目标效果更好；</p>
<ul>
<li>
<p>A/B测试可用于测试各种营销元素，例如设计/视觉元素、导航、表单和宣传用语等；</p>
</li>
<li>
<p>A/B测试可以用于测试、比较和分析几乎所有内容</p>
</li>
</ul>
<p>最常用于网站以及移动应用程序；将Web或App界面或流程的两个或多个版本，在同一时间维度，分别让两个或多个属性或组成成分相同（相似）的访客群组访问，收集各群组的用户体验数据和业务数据，最后分析评估出最好版本以正式采用</p>
<p>主要用于转换率优化，一般在线业务会定期通过A/B测试来优化其目标网页并提高ROI</p>
<p>A/B测试需要同时在线上部署A和B两个对等版本同时接收用户流量，按一定的目标选择策略将一部分用户导向A版本，让另一部分用户使用B版本；分别收集两部分用户的反馈，并根据分析结果确定最终使用的版本；</p>
<p>A/B测试中分流的设计直接决定了测试结果是否有效</p>
<p>AB测试是对线上生产环境的测试，在对改进版本所产生效果的好坏不能十分确定时对测试版本的导入流量通常不宜过大，尤其对于那些影响范围较大的改版（如主流程页面的重大调整），影响用户决策的新产品上线和其他具有风险性的功能上线通常采用先从小流量测试开始，然后逐步放大测试流量的方法。但是，测试版本的流量如果太小又可能造成随机结果的引入，试验结果失去统计意义</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Envoy路由管理</title>
      <link>https://www.oomkill.com/2020/09/envoy-router-management/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/envoy-router-management/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="http-链接管理">HTTP 链接管理</h2>
<p>envoy处理用户请求逻辑</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200919165020447.png" alt="image-20200919165020447"  /></p>
<p>① 用户请求报文到达七层过滤器链处理机制后，首先根据请求HTTP报文中的 <code>Host</code> 首部来完成虚拟主机的选择；② 由此虚拟机主机内部的 <strong><code>Route</code></strong> 表项进行处理。③ 后由 <code>match</code> 进行匹配; <code>Match</code> 是与请求URL的 <code>PATH</code> 组成部分或请求报文的标头部分 <code>header</code> 。④ 最后才可到达 <code>Route</code> 进行 <code>direct_response</code> 、<code>redirect</code> 等。</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_routing">官方手册</a></p>
<p>Envoy通过内置的L4过滤器HTTP连接管理器将原始字节转换为HTTP应用层协议级别的消息和事件，例如接收到的标头和主体等，以及处理所有HTTP连接和请求共有的功能，包括访问日志、生成和跟踪请求ID，请求/响应头处理、路由表管理和统计信息等；</p>
<ul>
<li>支持HTTP/1.1、WebSockets和HTTP/2，但不支持SPDY;</li>
<li>关联的路由表可静态配置，亦可经由 <code>xDS API</code> 中的 <code>RDS</code> 动态生成；</li>
<li>内建重试插件，可用于配置重试行为;
<ul>
<li>Host Predicates</li>
<li>Priority Predicates</li>
</ul>
</li>
</ul>
<p>内建支持302重定向，它可以捕获302重定向响应，合成新请求后将其发送到新的路由匹配（match）所指定的上游端点，并将收到的响应作为对原始请求的响应返回客户端</p>
<p>支持适用于HTTP连接及其组成流（constituent streams）的多种可配置超时机制</p>
<ul>
<li>连接级别：空闲超时和排空超时（GOAWAY）；</li>
<li>流级别：空闲超时、每路由相关的上游端点超时和每路由相关的 <code>gRPC</code> 最大超时时长；</li>
<li>基于自定义集群的动态转发代理；</li>
</ul>
<p>HTTP协议相关的功能通过各HTTP过滤器实现，这些过滤器大体可分为编码器、解码器和编/解码器三类；</p>
<p>router <code>envoy.router</code> 是最常的过滤器之一，它基于路由表完成请求的转发或重定向，以及处理重试操作和生成统计信息等；</p>
<h3 id="http-路由">HTTP 路由</h3>
<p>Envoy基于HTTP router过滤器基于路由表完成多种高级路由机制，例如:</p>
<ul>
<li>将域名映射到虚拟主机；</li>
<li>path的前级 <code>prefix</code> 匹配、精确匹配或正则表达式匹配；</li>
<li>虚拟主机级别的TLS重定向；</li>
<li>path级别的 <code>path/host</code> 重定向；</li>
<li><strong><code>direct_response</code></strong> ，由Envoy直接生成响应报文 ；</li>
<li>显式 <code>host rewrite</code>；</li>
<li><code>prefix rewrite</code>；</li>
<li>基于HTTP标头或路由配置的<strong>请求重试</strong>与<strong>请求超时</strong>；</li>
<li>基于运行时参数的流量迁移；</li>
<li>基于权重或百分比的跨集群流量分割；</li>
<li>基于任意标头匹配路由规则；</li>
<li>基于优先级的路由；</li>
<li>基于hash策略的路由；</li>
</ul>
<h4 id="路由配置和虚拟主机">路由配置和虚拟主机</h4>
<p>路由配置中的顶级元素是虚拟主机</p>
<p>每个虚拟主机都有一个逻辑名称以及一组域名，请求报文中的主机头将根据此处的域名进行路由；单个侦听器可以服务于多个顶级域。</p>
<p>基于域名选择虚拟主机后，将基于配置的路由机制完成请求路由或进行重定向；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;name&#34;</span> <span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;domains&#34;</span> <span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;routes&#34;</span> <span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;require_tls&#34;</span> <span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;virtual_clusters&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;rate_limits&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;request_headers_to_add&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;request_headers_to_remote&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;response_headers_to_add&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;response_headers_to_remove&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;cors&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;pre_filter_config&#34;</span><span class="p">:</span> <span class="s2">&#34;{}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;typed_per_filter_config&#34;</span><span class="p">:</span> <span class="s2">&#34;{}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;include_request_attempt_count&#34;</span><span class="p">:</span>  <span class="s2">&#34;..&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;retry_policy&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hedge_policy&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>虚拟主机级别的路由策略用于为相关的路由属性提供默认配置，用户也可在路由配置上自定义用到的路由属性，例如<strong>限流</strong>、<strong>CORS</strong>和<strong>重试</strong>机制等；</p>
<h4 id="route及配置框架">Route及配置框架</h4>
<p>Envoy匹配路由时，它基于如下工作过程进行：</p>
<ul>
<li>
<p><strong>Host</strong>；检测HTTP请求的host标头或；authority，并将其同路由配置中定义的虚拟主机作匹配检查；</p>
<ul>
<li><strong>将域名映射到虚拟主机</strong>
<ul>
<li>将请求报文中的host标头值依次与路由表中定义的各Virtualhost的domain属性值进行比较，并与第一次匹配时终止搜索</li>
<li>Domain search order
<ul>
<li><strong>Exact domain names</strong>: <code>www.ilinux.io</code>.</li>
<li><strong>Suffix domain wildcards</strong>: <code>*.ilinux.io</code> or <code>*-envoy.ilinux.io</code>.</li>
<li><strong>Prefix domain wildcards</strong>: <code>ilinux.*</code> or  <code>ilinux-*</code>.</li>
<li><strong>Special wildcard</strong> <code>*</code> matching any domain.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>Match</strong>；在匹配到的虚拟主机配置中按顺序检查虚拟主机中的每个路由条目中的匹配条件，直到第一个匹配的为止（<strong>短路</strong>）；</p>
<ul>
<li>基于 <code>prefix</code> <code>path</code> <code>regex</code> 三者其中任何一个进行URL匹配。</li>
<li>可根据 <code>headers</code> 和 <code>query_parameters</code> 完成报文额外匹配。</li>
<li>匹配得到的报文可有三种路由机制：
<ul>
<li>redirect</li>
<li>direct_response</li>
<li>route</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>route</strong>；如果定义了虚拟集群，按顺序检查虚拟主机中的每个虚拟集群，直到第一个匹配的为止；</p>
<ul>
<li>支持 <code>cluster</code> 、<code>weighted_cluster</code> <code>cluster_header</code> 三者之一定义目标路由。</li>
</ul>
</li>
<li>
<p>转发期间可根据 <code>prefix_rewrite</code> 和 <code>host_rewrite</code> 完成URL重写。</p>
<ul>
<li>可额外配置流量管理机制，例如：<code>timeout</code> <code>retry_policy</code> <code>cors</code> <code>request_mirror_policy</code> <code>rate_limits</code> 等</li>
</ul>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">listeners:
</span></span><span class="line"><span class="cl">- name:
</span></span><span class="line"><span class="cl">  address: {...}
</span></span><span class="line"><span class="cl">  filter_chians: []
</span></span><span class="line"><span class="cl">  - filters:
</span></span><span class="line"><span class="cl">    - name: envoy.http_connection_manager
</span></span><span class="line"><span class="cl">      config:
</span></span><span class="line"><span class="cl">      ...
</span></span><span class="line"><span class="cl">        route_config:
</span></span><span class="line"><span class="cl">          name: ...
</span></span><span class="line"><span class="cl">          virutal_hosts: []
</span></span><span class="line"><span class="cl">          - name: 
</span></span><span class="line"><span class="cl">            domains: [] # 虚拟主机的域名，路由匹配时，将请求报文中的host标头值与此处列表项进行匹配检测
</span></span><span class="line"><span class="cl">            routes: [] # 路由条目，匹配到当前虚拟主机的请求中的path匹配检测将针对各route中有match定义条件进行;
</span></span><span class="line"><span class="cl">            - name: ...
</span></span><span class="line"><span class="cl">              match: {...}
</span></span><span class="line"><span class="cl">                prefix|path|regex: ... # 记录路径前缀、路由或正则表达式三者之一定义匹配条件；
</span></span><span class="line"><span class="cl">              route: {...}
</span></span><span class="line"><span class="cl">                cluster|cluster_header|weighted_cluster: .. # 基于集群、请求报文中的集群标头或加权集群（流量分割）定义路由目标；
</span></span><span class="line"><span class="cl">            virtual_clusters: [] # 为此虚拟主机定义的用于收集统计信息的虚拟集群列表；
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>路由配置框架</strong></p>
</blockquote>
<p>符合匹配条件的请求要由如下三种方式之一处理</p>
<ul>
<li><strong>route</strong>：路由到指定位置。</li>
<li><strong>redirect</strong>：重定向到指定位置。</li>
<li><strong>direct_response</strong>：直接以给定的内容进行响应。</li>
</ul>
<p>路由中也可按需在请求及响应报文中添加或删除响应标头</p>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-route">config.route.v3.Route</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;match&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;route&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;redirect&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;direct_response&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;metadata&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;decorator&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;typed_per_filter_config&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;request_headers_to_add&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;request_headers_to_remove&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;response_headers_to_add&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;response_headers_to_remove&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;tracing&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;per_request_buffer_limit_bytes&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>RouteMatch</strong></p>
</blockquote>
<p>匹配条件是定义的检测机制，用于过滤出符合条件的请求并对其作出所需的处理，例如路由、重定向或直接响应等；</p>
<p>必须要定义**<code>prefix</code>** 、<strong><code>path</code></strong> 和 <strong><code>regex</code></strong> 三种匹配条件中的一种形式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;prefix&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span> 			<span class="err">/*</span> <span class="err">path前缀匹配条件</span> <span class="err">*/</span>  
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;path&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span> 			<span class="err">/*</span> <span class="err">path精确匹配条件</span> <span class="err">*/</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;safe_regex&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span> 	<span class="err">/*</span> <span class="err">整个path（不包含query子串）必须制定的正则表达式匹配</span> <span class="err">*/</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;connect_matcher&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;case_sensitive&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;runtime_fraction&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;headers&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;query_parameters&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;grpc&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;tls_context&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>除了必须设置上述三者其中之一外，还可额外完成如下限定</p>
<ul>
<li>区分字符大小写（case_sensitive）</li>
<li>匹配指定的运行键值表示的比例进行 <font color="#f8070d" size=2><strong>流量迁移</strong></font> <code>runtime_fraction</code>；
<ul>
<li>不断地修改运行时键值完成流量迁移</li>
</ul>
</li>
<li><font color="#f8070d" size=2>基于标头的路由：</font>匹配指定的一组标头（headers）；</li>
<li><font color="#f8070d" size=2>基于参数的路由：</font>匹配指定的一组URL查询参数（query_parameters）；</li>
<li>仅匹配grpc流量（grpc）；</li>
</ul>
<blockquote>
<p><strong>Route.HeaderMatcher</strong></p>
</blockquote>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-headermatcher">config.route.v3.HeaderMatcher</a></p>
<p>指定的路由需要额外匹配指定的一组标头</p>
<p>路由器将根据路由配置中的所有指定标头检查请求的标头</p>
<p>若路由中指定的所有标头都存在于请求中且具有相同值，则匹配</p>
<p>若配置中未指定标头值，则基于标头的存在性进行判断</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;exact_match&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;safe_regex_match&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;range_match&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;present_match&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;prefix_match&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>  <span class="err">/*</span> <span class="err">默认配置，即根据制定标头的存在性进行判断</span> <span class="err">*/</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;suffix_match&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;contains_match&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;invert_match&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span>   <span class="err">/*</span> <span class="err">布尔型值，用于制定是否为上面的匹配条件取反</span> <span class="err">*/</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>标头及其值的上述检查机制仅能定义一个：</p>
<ul>
<li>exact_match：精确值匹配</li>
<li>regex-match：整个值与正则表达式匹配</li>
<li>range_mtch：值范围匹配</li>
<li>present_match：标头存在性匹配</li>
<li>prefix_match：值前缀匹配</li>
<li>sufix_match：值后缀匹配</li>
<li>invert_match：将匹配结果取反，默认为==false==</li>
</ul>
<blockquote>
<p><strong>route.QueryParameterMatcher</strong></p>
</blockquote>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-queryparametermatcher">route.QueryParameterMatcher</a></p>
<p>指定的路由需要额外匹配的一组URL查询参数</p>
<p>路由器将根据路由配置中指定的所有查询参数检查路径头中的查询字符串</p>
<ul>
<li>
<p>查询参数匹配将请求的URL中查询字符串视为以 <font color="#f8070d" size=3><strong><code>&amp;</code></strong></font> 符号分隔的 <font color="#f8070d" size=3><code>key</code></font> 或 <font color="#f8070d" size=3><code>key=value</code></font> 元素列表</p>
</li>
<li>
<p>若存在指定的查询参数，则所有参数都必须与URL中的查询字符串匹配</p>
</li>
<li>
<p>匹配条件指定为 <code>string_match</code> 或 <code>present_match</code> 其中之一。</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;string_match&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>  <span class="err">/*</span> <span class="err">指定查询参数值是否应与字符串匹配。</span> <span class="err">*/</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;present_match&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span>    <span class="err">/*</span> <span class="err">指定是否应存在查询参数。</span> <span class="err">*/</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="路由目标">路由目标</h3>
<h4 id="路由目标重定向redirect">路由目标：重定向（redirect）</h4>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-redirectaction">config.route.v3.RedirectAction</a></p>
<p>为请求响应一个301应答，从而将请求从一个URL永久重定向至另一个URL</p>
<p><strong>Envoy支持如下重定向行为</strong>:</p>
<ul>
<li>
<p>协议重定向：https redirect或scheme_redirect二者只能使用其一；</p>
</li>
<li>
<p>主机重定向：host_redirect口端口重定向：port_redirect</p>
</li>
<li>
<p>路径重定向：path_redirect口路径前级重定向：prefix_redirect</p>
</li>
<li>
<p>重设响应码：response_code，默认为301；</p>
</li>
<li>
<p>strip_query：是否在重定向期间删除URL中的查询参数，默认为false；</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;https_redirect&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;scheme_redirect&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;host_redirect&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;port_redirect&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;path_redirect&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;prefix_rewrite&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;response_code&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;strip_query&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="路由目标直接相应请求direct_response">路由目标：直接相应请求（direct_response）</h4>
<p><a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-directresponseaction">config.route.v3.DirectResponseAction</a></p>
<p>Envoy可以直接相应请求，而不将请求代理至上游主机</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;status&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;body&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>响应码可由status直接给出</li>
<li>响应正文可省略，默认为空；需要指定时应该由body通过如下三种方式之一给出数据源:
<ul>
<li>filename: 本地文件数据源</li>
<li>inline_bytes: 配置中给出内嵌的byte类型 （unsigned char）</li>
<li>inline_string：配置中内嵌的字符串。</li>
</ul>
</li>
</ul>
<h4 id="路由目标路由到指定集群route">路由目标：路由到指定集群（route）</h4>
<p>匹配到的流量可路由至如下三种目标之一</p>
<ul>
<li>cluster：指定的上游集群；</li>
<li>cluster_header：在请求标头中设置cluster_header的值指定的上游集群；</li>
<li>weighted_clusters：基于权重将请求路由至多个上游集群，进行流量分割；</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cluster&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>  <span class="err">/*</span> <span class="err">路由到的目标集群</span> <span class="err">*/</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cluster_header&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;weighted_clusters&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>   <span class="err">/*</span> <span class="err">将流量路由并按权重分配到多个上游集群</span> <span class="err">*/</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cluster_not_found_response_code&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;metadata_match&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;prefix_rewrite&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;regex_rewrite&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;host_rewrite_literal&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;auto_host_rewrite&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;host_rewrite_header&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;host_rewrite_path_regex&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;timeout&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;idle_timeout&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;retry_policy&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;request_mirror_policies&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;priority&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;rate_limits&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;include_vh_rate_limits&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;hash_policy&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cors&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;max_grpc_timeout&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;grpc_timeout_offset&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;upgrade_configs&#34;</span><span class="p">:</span> <span class="p">[],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;internal_redirect_policy&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;internal_redirect_action&#34;</span><span class="p">:</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;max_internal_redirects&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;hedge_policy&#34;</span><span class="p">:</span> <span class="s2">&#34;{...}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="常用路由策略">常用路由策略</h3>
<p><strong>基础路由配置</strong></p>
<ul>
<li>
<p>在match中简单通过 <font color="#f8070d" size=3><code>prefix</code></font> 、<font color="#f8070d" size=3><code>path</code></font> 或 <font color="#f8070d" size=3><code>regex</code></font> 指定匹配条件；</p>
</li>
<li>
<p>将匹配到的请求进行重定向、直接响应或路由到指定目标集群</p>
</li>
</ul>
<p><strong>高级路由策略</strong></p>
<ul>
<li>
<p>在match中通过 <font color="#f8070d" size=3><code>prefix</code></font>、<font color="#f8070d" size=3><code>path</code></font> 或 <font color="#f8070d" size=3><code>regex</code></font> 指定匹配条件，并使用高级匹配机制;</p>
</li>
<li>
<p>结合 <font color="#f8070d" size=3><code>runtime_fraction</code></font> 按比例切割流量;</p>
</li>
<li>
<p>结合 <font color="#f8070d" size=3><code>headers</code></font> 按指定的标头路由，例如基于cookie进行，将其值分组后路由到不同目标；</p>
</li>
<li>
<p>结合 <font color="#f8070d" size=3><code>query_parameters</code></font> 按指定的参数路由，例如基于参数group进行，将其值分组后路由到不同的目标；</p>
<hr>
<p><strong>提示</strong>：可灵活组合多种条件构建复杂的匹配机制</p>
<hr>
</li>
</ul>
<p><strong>复杂路由目标</strong></p>
<ul>
<li>
<p>结合请求报文标头中cluster header的值进行定向路由</p>
</li>
<li>
<p><font color="#f8070d" size=3><code>weighted_clusters</code></font>：将请求根据目标集群权重进行流量分割</p>
</li>
<li>
<p>配置<font color="#f8070d" size=2>高级路由属性</font>，例如重试、超时、CORS、限途等；</p>
</li>
</ul>
<h3 id="配置示例">配置示例</h3>
<p>示例用于演示match的基本匹配机制及不同的路由方式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/service/color&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">color</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">regex</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;^/service/.*color$&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">redirect</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">path_redirect</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/service/color&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/service/version&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">direct_response</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">status</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">boby</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">inline_string</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;this page is envoy reponsed&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">webserver</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>示例用于演示基于标头和查询参数的匹配；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">environment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">exact_match</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;2&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">query_parmeters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;user&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">string_match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;root&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">default</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>docker-compose文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">82</span><span class="p">:</span><span class="m">9901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">service_gray</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">front_envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=gray</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">webserver2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">sealloong/envoy-end:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">service_red</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">front_envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">COLORFUL=blue</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">expose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">service_gray</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">envoyproxy/envoy-alpine:v1.15-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ENVOY_UID=0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">./envoy.yaml:/etc/envoy/envoy.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">aliases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">envoy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">webserver2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">envoymesh</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>envoy.yaml</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">admin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_log_path</span><span class="p">:</span><span class="w"> </span><span class="l">/dev/null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">9901</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">static_resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">listener_0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: 0.0.0.0, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy_http_connection_manager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">stat_prefix</span><span class="p">:</span><span class="w"> </span><span class="l">ingress_http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">codec_type</span><span class="p">:</span><span class="w"> </span><span class="l">AUTO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">route_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">local_route</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">virtual_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">base_domain</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;studyenvoy.eu&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;*.studyenvoy.eu&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;*studyenvoy.*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/service/colorful&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix_rewrite</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/colorful&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">color</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">safe_regex</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">google_re2</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">regex</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;^/service/.*colorful$&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">redirect</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">path_redirect</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/service/colorful&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/service/version&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">direct_response</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">status</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">body</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">inline_string</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;this page is envoy reponsed&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">default }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;base_parameter&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">routes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;version&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">exact_match</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;v2&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;v2&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">query_parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;user&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nt">string_match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                      </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;root&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;default&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">match</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">route</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">cluster</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">http_filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">envoy.filters.http.router</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">default</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">default</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: default_server, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">color</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">color</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: color_server, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: v2_server, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">connect_timeout</span><span class="p">:</span><span class="w"> </span><span class="m">0.</span><span class="l">25s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">STRICT_DNS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb_policy</span><span class="p">:</span><span class="w"> </span><span class="l">ROUND_ROBIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">load_assignment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cluster_name</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lb_endpoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">endpoint</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">address</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">socket_address</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">address: v1_server, port_value</span><span class="p">:</span><span class="w"> </span><span class="m">90</span><span class="w"> </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">health_checks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timeout</span><span class="p">:</span><span class="w"> </span><span class="l">3s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="l">30s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unhealthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">healthy_threshold</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">http_health_check</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/ping</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">expected_statuses</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">start</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">end</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>服务网格安全体系</title>
      <link>https://www.oomkill.com/2020/09/service-mesh-security/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2020/09/service-mesh-security/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="服务网格安全框架--microservice-security-basics">服务网格安全框架  Microservice Security Basics</h2>
<h3 id="零信任安全--什么是零信任网络">零信任安全 | 什么是零信任网络？</h3>
<p>零信任是一种安全模型，其基础是维护严格的访问控制并且默认不信任任何人，即便是已在网络边界内的人。<a href="https://www.cloudflare.com/zh-cn/learning/security/glossary/what-is-zero-trust/">零信任安全</a></p>
<h3 id="iaaa-identification-and-authentication-authorization-and-accountability">IAAA (Identification and Authentication, Authorization and Accountability</h3>
<p><font color="#f8070d" size=3><strong>Identification</strong></font>: 必须支持多个身份和属性</p>
<ul>
<li>Your name, username, ID number, employee number, SSN etc.</li>
<li>“I am Thor”.</li>
</ul>
<p><font color="#f8070d" size=3><strong>Authentication</strong></font>: 必须支持多种认证方式以及委托认证方式</p>
<p><font color="#f8070d" size=3><strong>Authorization</strong></font>: 对于单个请求的授权可以在请求路径中的多个点确认</p>
<p><font color="#f8070d" size=3><strong>Accountability</strong></font>: 从API中捕获相关安全数据或元数据</p>
<h2 id="服务网格常见安全解决方案">服务网格常见安全解决方案</h2>
<h3 id="网络级别控制-network-level-contros">网络级别控制 Network Level Contros</h3>
<ul>
<li>
<p>local isolation 主机隔离</p>
</li>
<li>
<p>Network segementation 网络分割</p>
<ul>
<li>意味着新人底层的服务器及网络设施，信任隔离机制及实现过程且信任网段内的所有组件；</li>
</ul>
</li>
<li>
<p>SSL/TLS</p>
<ul>
<li>mTLS、spiffe/spire</li>
</ul>
</li>
</ul>
<h3 id="应用级别控制-network-level-contros">应用级别控制 Network Level Contros</h3>
<ul>
<li>传统网络令牌认证  Traditional Web Tokens
<ul>
<li>API-oriented Tokens
<ul>
<li><a href="https://dzone.com/articles/security-best-practices-for-managing-api-access-to">OAuth 2.0</a></li>
<li>OpenID Connect</li>
<li>JWT</li>
</ul>
</li>
<li>TokenTypes
<ul>
<li>Opaque tokens</li>
<li>Transparent tokens</li>
</ul>
</li>
</ul>
</li>
<li>基于cookie的会话 cookie based sessions</li>
<li>SAML Security Assertion Markup Language 一种基于XML开源标准的数据格式，它在当事方之间交换身份验证和授权数据，尤其是在身份提供者和服务提供者之间交换。</li>
</ul>
<h2 id="envoy的身份认证机制">Envoy的身份认证机制</h2>
<h3 id="传输认证">传输认证</h3>
<p>传输认证：即服务组件的认证，它基于双向TLS实现传输认证（即mTLS），包括双向认证、信道安全和证书自动管理；每个服务都需要有其用于服务间双向认证的标识，以实现此种认证机制；</p>
<h3 id="用户认证">用户认证</h3>
<p>用户认证：也称为终端用户认证，用于认证请求的最终用户或者设备；Envoy通过JWT（JSON Web Token）实现此类认证需求，以保护服务端的资源；</p>
<ul>
<li>客户端基于HTTP标头向服务端发送JWT</li>
<li>服务端验证签名</li>
<li><code>envoy.filters.http.jwt_authn</code>过滤器</li>
</ul>
<p>Envoy支持在侦听器中实现TLS终止以及与上游集群建立连接时的TLS始发</p>
<ul>
<li>TLS终止定义于Listener中，而与上游集群的连接始发定义于Cluster中；</li>
<li>在底层使用BoringSSL作为SSL库；</li>
<li>DownstreamTIsContexts支持多个TLS证书（多个证书需要属于同一类型，RSA或ECDSA），但UpstreamTIsContexts目前仅支持单个证书</li>
<li>支持执行标准边缘代理任务，以及启动与具有高级TLS要求的外部服务（TLS1.2，SNl等）的连接；</li>
</ul>
<p>仅在验证上下文指定一个或多个受信任的证书颁发机构后才会启用上下游的证书验证功能；</p>
<p>/etc/sl/certs/ca-certificates.crt（Debian/Ubuntu/Gentoo等）</p>
<p>/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem（CentOS/RHEL7）</p>
<p>/etc/pki/tls/certs/ca-bundle.crt（Fedora/RHEL6）</p>
<p>/etc/sl/ca-bundle.pem（OpenSUSE）</p>
<p>/usr/local/etc/ssl/cert.pem（FreeBSD）</p>
<p>/etc/sl/cert.pem（OpenBSD）</p>
<h2 id="envoy-配置数字证书">Envoy 配置数字证书</h2>
<p>配置时，可以通过静态资源格式指定使用的TLS证书，也可以通过SDS动态获取TLS证书；</p>
<p>SDS可以简化证书管理</p>
<ul>
<li>各实例的证书可由SDS统一推送；</li>
<li>证书过期后，SDS推送新证书至Envoy实例可立即生效而无需重启或重新部署；</li>
</ul>
<p>获取到所需要的证书之后侦听器方能就绪；不过，若因同SDS服务器的连接失败或收到其错误响应而无法获取证书，则侦听器会打开端口，但会重置连接请求；</p>
<p>Envoy同SDS服务器之间的通信必须使用安全连接；</p>
<p>SDS服务器需要实现gRPC服务SecretDiscoveryService，它遵循与其他xDS相同的协议；</p>
<h3 id="设定数字证书的方式">设定数字证书的方式</h3>
<p>静态格式的Secret定义在static_resources上下文，并由listener或cluster在tls_context通过指定文件路径引用，也可不予事先定义，而由listener或cluster直接在tls_context中定义；</p>
<p>而通过SDS提供证书时，需要配置好SDS集群，并由listener或cluster在ts_context中通过sds_config引用；</p>
<p>定义Secret时，通常有定义数字证书（服务端或客户端）、票证密钥和证书校验机制三种类型，但每个定义仅能指定为其中一种类型；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">  </span><span class="nt">secrets</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># 静态定义指定的secret列表，定义时，以下三种方式任选其一</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w">  </span><span class="c"># 用于引用此 secret的唯一标识</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">tls_certificate</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 数字证书</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">certificate_chain</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># tls证书链</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">filename</span><span class="p">:</span><span class="w"> </span><span class="c"># 保存证书信息的文件，也可使用inline_bytes inline_string </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">private_key</span><span class="p">:</span><span class="w"> </span><span class="c"># TLS私钥</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="c"># 私钥信息的加解密密钥，未指定时需要私钥文件处于未加密状态</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">session_ticket_keys</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 定义用于加密和解密tls会话票证的密钥</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">keys</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># 密钥列表，未指定时将使用内生成和管理的秘钥</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">filename</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">inline_string</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">validation_context</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 对等证书验证机制的相关配置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">trust_ca</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 信任的ca证书，未指定时不会验证对端证书</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">crl</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 可选的PEM格式的证书吊销列表，如果指定，Envoy将验证此CRL是否未撤销所提供的对等证书</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">verify_certificate_spki</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># base64的SHA-256哈希码，用于验证DER编码证书的公钥是与列表项之一匹配</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">verify_certificate_hash</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># base64的SHA-256哈希码，用于验证DER编码证书是否与列表项之一匹配</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">allow_expired_certificate</span><span class="p">:</span><span class="w"> </span><span class="c"># 布尔值，如果指定，Envoy将不会拒绝过期的证书。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">match_subject_alt_names</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># subject备用名称匹配器的可选列表。envoy将验证所提供证书的“使用者备用名称”是否与指定的匹配项之一匹配。</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>在listener和cluster中引用证书</strong></p>
</blockquote>
<h4 id="downstreamtiscontext">DownstreamTIsContext</h4>
<p>定义在listener中，它支持三种定义格式</p>
<ul>
<li>
<p>直接在listener的tls_context中通过tls_certificates参数定义；</p>
</li>
<li>
<p>在 <code>static_resource</code> 上下文定义  <code>secret</code>，而后在listener的ts_context中直接通过 <code>tls_certificate_sds_secret_configs</code> 参数引用；</p>
</li>
<li>
<p>直接在listener的tls_context中通过ts_certificate_sds_secret_configs参数的sds_config指定通过SDS APl获取；</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">listeners</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">..</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">..</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">filter_chains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">filters</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="l">..</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">transport_socket</span><span class="p">:</span><span class="w"> </span><span class="c"># 当前过滤器链中的tls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">common_tls_context</span><span class="p">:</span><span class="w"> </span><span class="c"># 当前过滤器的tls上下文</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">tls_params</span><span class="p">:</span><span class="w"> </span>{}<span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">tls_certificates</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">  </span><span class="c"># tls证书列表 </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">certificate_chain</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">filename</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="nt">inline_string</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">private_key</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">tls_certificate_sds_secret_configs</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># secret的唯一标识符，可以fqdn UUID SPKI或sha256格式</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">sds_config</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># xds api源</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">validation_context</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># How to validate peer certificates.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">validation_context_sds_secret_config</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">require_client_certificate</span><span class="p">:</span><span class="w"> </span><span class="c"># boolval ture,Envoy将拒绝没有有效客户端证书的连接。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">session_ticket_keys</span><span class="p">:</span><span class="w"> </span><span class="c"># tls会话票据相关设置</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="upstreamtis">UpstreamTIs</h4>
<p>定义在<code>cluster</code>中，与集群中的主机通信时使用，它同样支持类似listener的 <code>tls_context</code> 一样的三种定义格式；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">clusters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">transport_socket</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">typed_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;@type&#34;: </span><span class="l">type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">common_tls_context</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">tls_params</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># tls协议版本和密码套件等</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">tls_certificates</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">  </span><span class="c"># tls证书列表</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">certificate_chain</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 证书链</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">filename</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">private_key</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># tls密钥</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">filename</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">tls_certificate_sds_secret_configs</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w"> </span><span class="c"># 通过静态资源中定义的secret或SDS获取secret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="c"># secret唯一标识，可以FQDN | UUID | SPKI | sha256 仅指定name时，表示加载static_resources中的secret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">sds_config</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># xds api 配置源</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">validation_context_sds_secret_config</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c">#通过sds获取验证上下文</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">name</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">sds_config</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">allow_renegotiation</span><span class="p">:</span><span class="w"> </span><span class="l">boolVal</span><span class="w"> </span><span class="c"># 如果为true，则将允许服务器启动的TLS重新协商。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">max_session_keys</span><span class="p">:</span><span class="w"> </span>{}<span class="w"> </span><span class="c"># 为了恢复会话而存储的最大会话密钥数, 默认值为1，将此值设置为0将禁用会话恢复</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="静态tls配置实例">静态TLS配置实例</h2>
<p>下面的示例中定义了三个secrets</p>
<ul>
<li>server_cert：服务器端证书，同下游客户端通信时使用，由listener调用</li>
<li>client_cert：客户端证书，与上游端点通信时使用，由cluster调用</li>
<li>valication_context：校验客户端对等证书的配置，由listener调用以校验请求方的证书</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>tomcat使用</title>
      <link>https://www.oomkill.com/2018/06/tomcat/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2018/06/tomcat/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="tomcat介绍">tomcat介绍</h2>
<p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，它早期的名称为catalina，后来由Apache、Sun 和其他一些公司及个人共同开发而成，并更名为Tomcat。</p>
<h3 id="java体系结构">java体系结构</h3>
<ol>
<li>java程序设计语言（编程）</li>
<li>java类文件格式</li>
<li>java api</li>
<li>java vm</li>
</ol>
<p>java 纯面向对象语言</p>
<p>obj：以指令为中心，围绕指令组织数据</p>
<p>面向对象：以数据为中心，围绕数据组织指令</p>
<p>Tomcat核心组件：</p>
<ul>
<li>Catalina：servlet container在tomcat中用于实现servlet代码的被称作Catalina</li>
<li>Coyote：一个http连接器，能够接受http请求并相应http请求的web服务器</li>
<li>jasper：JSP Engine jsp翻译器</li>
</ul>
<h3 id="tomcat组成部分">Tomcat组成部分</h3>
<p>Tomcat支持Servlet和JSP1的规范，它由一组嵌套的层次和组件组成，一般可分为以下四类：</p>
<ul>
<li>顶级组件：位于配置层次的顶级，并且彼此间有着严格的对应关系；</li>
<li>连接器：连接客户端（可以是浏览器或Web服务器）请求至Servlet容器，</li>
<li>容器：包含一组其它组件；</li>
<li>被嵌套的组件：位于一个容器当中，但不能包含其它组件；</li>
</ul>
<h3 id="tomcat常见组件">tomcat常见组件</h3>
<h4 id="服务器server">服务器(server)</h4>
<p>服务器(server)顶级组件：Tomcat的一个实例，通常一个JVM只能包含一个Tomcat实例；因此，一台物理服务器上可以在启动多个JVM的情况下在每一个JVM中启动一个Tomcat实例，每个实例分属于一个独立的管理端口。这是一个顶级组件。</p>
<h5 id="server相关属性">server相关属性</h5>
<p>className：用于实现此Server容器的完全限定类的名称，默认为 <code>org.apache.cataliana.core.StandardServer</code>;</p>
<p>port：接收shutdown指令的端口，默认仅允许通过本机访问，默认为8005</p>
<p>shutdown：发往此Server用于实现关闭tomcat实例的命令字符串，默认为SHUTDOWN</p>
<h4 id="服务service">服务(service)</h4>
<p>Service主要用于关联一个引擎和此引擎相关的连接器，每个连接器通过一个特定的端口和协议接收入站请求将其转发至关联的引擎进行处理，因此，Service要包含一个引擎（Engine）、一个或多个连接器（Connector）。
定义一个名为Catalina的Service，此名字也会产生相关的日志信息时记录在日志文件当中。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Service</span> <span class="na">name=</span><span class="s">&#34;Catalina&#34;</span><span class="nt">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="service相关属性">Service相关属性</h5>
<p>className：用于实现service的类名，一般都是 <code>org.apache.catalina.core.StandardService</code></p>
<p>name：此服务的名称，默认为Catalina。</p>
<h4 id="连接器connectors">连接器(connectors)</h4>
<p>分析并接收用户请求，并把它转换成本地jsp文件代码的请求。负责连接客户端（可以是浏览器或Web服务器）请求至Servlet容器内的Web应用程序，通常指的是接收客户发来请求的位置及服务器端分配的端口。<font style="background:#fee904;" size=3> 默认端口通常是HTTP协议的8080</font>，管理员也可以根据自己的需要改变此端口。一个引擎可以配置多个连接器，但这些连接器必须使用<font style="background:#fee904;" size=3>不同的端口</font>。默认的连接器是基于HTTP/1.1的Coyote。同时，Tomcat也支持AJP、JServ和JK2连接器。</p>
<p><strong>进入Tomcat的请求可以根据Tomcat的工作模式分为如下两类</strong>：</p>
<p>Tomcat作为应用程序服务器：请求来自于前端的web服务器，这可能是Apache IIS Nginx。</p>
<p>Tomcat作为独立服务器：请求来自与web浏览器。</p>
<p>Tomcat应该考虑工作情形并为相应情形下的请求分别定义好需要的连接器才能正确接收来自于客户端的请求，一个引擎可以有一个或多个连接器，以适应多种请求方式。</p>
<p>定义连接器可以使用多种属性，有些属性也只是适用于某种特定的连接器类型，</p>
<p><em><strong>一般来说，常见于server.xml中的连接器类型通常有4种</strong>：</em></p>
<ol>
<li>HTTP连接器</li>
<li>SSL连接器</li>
<li>AJP 1.3连接器</li>
<li>proxy连接器</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Connector</span> <span class="na">port=</span><span class="s">&#34;8080&#34;</span> <span class="na">protocol=</span><span class="s">&#34;HTTP/1.1&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">maxThreads=</span><span class="s">&#34;150&#34;</span> <span class="na">connectionTimeout=</span><span class="s">&#34;20000&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">redirecPort=</span><span class="s">&#34;8443&#34;</span> <span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="connector常见属性">Connector常见属性</h5>
<p>定义连接器时可以配置的属性非常多，单通常定义HTTP连接器时必须定义的属性只有<font style="background:#fee904;" size=3>port</font>，定义AJP连接器时必须定义的属性只有<font style="background:#fee904;" size=3>protocol</font>，<font style="background:#fee904;" size=3>默认的协议为HTTP</font>。</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>address</td>
<td>指定连接器监听的地址，默认为所有地址，即0.0.0.0。</td>
</tr>
<tr>
<td>maxThread</td>
<td>支持的最大（线程）并发连接数，默认为200。</td>
</tr>
<tr>
<td>port</td>
<td>监听的端口，默认为0。</td>
</tr>
<tr>
<td>protocol</td>
<td>连接器使用的协议，默认为HTTP/1.1，定义AJP协议时通常为AJP/1.3。</td>
</tr>
<tr>
<td>redirectPort</td>
<td>如果某种连接器支持的协议是HTTP，当接收客户端发来的HTTPS请求时，则转发至此属性定义的端口。</td>
</tr>
<tr>
<td>connectionTimeout</td>
<td>等待客户端发送请求的超时时间.单位为毫秒，默认为60000，即1分钟。</td>
</tr>
<tr>
<td>enableLookups</td>
<td>是否通过request.getRemoteHost()进行DNS直询以获取客户端的主机名；默认为true。</td>
</tr>
<tr>
<td>acceptCount</td>
<td>设置等待队列的最大长度：通常在tomcat所有处理线程均处于繁忙时，新发来的请求将被放置于等待队列中。</td>
</tr>
<tr>
<td>minSpareThreads</td>
<td>最小空闲进程</td>
</tr>
</tbody>
</table>
<p><strong>下面是定义了多个属性的SSL简介器</strong>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Connector</span> <span class="na">port=</span><span class="s">&#34;8443&#34;</span> 
</span></span><span class="line"><span class="cl"> 	<span class="na">maxThread=</span><span class="s">&#34;150&#34;</span> <span class="na">minSpareThreads=</span><span class="s">&#34;25&#34;</span> <span class="na">maxSpareThreads=</span><span class="s">&#34;75&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">enableLookups=</span><span class="s">&#34;false&#34;</span> <span class="na">acceptCount=</span><span class="s">&#34;100&#34;</span> <span class="na">debug=</span><span class="s">&#34;0&#34;</span> <span class="na">scheme=</span><span class="s">&#34;https&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">secure=</span><span class="s">&#34;true&#34;</span> 
</span></span><span class="line"><span class="cl"> 	<span class="na">clientAuth=</span><span class="s">&#34;false&#34;</span> <span class="na">sslProtocol=</span><span class="s">&#34;TLS&#34;</span> <span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="引擎engine">引擎(Engine)</h4>
<p>引擎是指处理请求的Servlet引擎组件，即Catalina Servlet引擎，它从HTTPconnector接收请求并响应请求。它检查每一个请求的HTTP首部信息以辨别此请求应该发往哪个host或context，并将请求处理后的结果返回的相应的客户端。严格意义上来说，容器不必非得通过引擎来实现，它也可以是只是一个容器。如果Tomcat被配置成为独立服务器，默认引擎就是已经定义好的引擎。而如果Tomcat被配置为Apache Web服务器的提供Servlet功能的后端，默认引擎将被忽略，因为Web服务器自身就能确定将用户请求发往何处。一个引擎可以包含多个host组件。</p>
<h5 id="engine组件">Engine组件:</h5>
<p>Engine是Servlet处理器的一个实例，即servlet引擎，默认为为定义在server.xml中的Catalina。 Engine需要的defaultHost属性来为其定义一个接收所有发往非明确定义虚拟主机的请求host组件。如前面示例中定义的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Engine</span> <span class="na">name=</span><span class="s">&#39;Catalina&#39;</span> <span class="na">defaultHost=</span><span class="s">&#39;localhost&#39;</span><span class="nt">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Engine容器中可以包含Realm、Host、Listener和Valve子容器</p>
<h5 id="engine常用属性">engine常用属性</h5>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">defaultHost</td>
<td style="text-align:left">Tomcat支持基于FQDN的虚拟主机，这些虚拟主机可以在Engine容器中定义多个不同的Host组件来实现；单如果此引擎的连接器收到一个发往非明确定义虚拟主机的请求时则需要将此请求发往一个默认的虚拟主机进行处理，因此，在Engine中定义的多个虚拟主机的主机名称至少要有一个根defaultHost定义的书记名称同名。</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">Engine组件的名称，用于日志和错误信息记录时区别不同的引擎。</td>
</tr>
<tr>
<td style="text-align:left">jvmroute</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>tomcat由众多组件组成，这些组件分别用于实现不同的功能。</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;server&gt;</span>
</span></span><span class="line"><span class="cl"> 	<span class="nt">&lt;service&gt;</span>
</span></span><span class="line"><span class="cl"> 		<span class="nt">&lt;connector</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"> 		<span class="nt">&lt;connector</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"> 		...
</span></span><span class="line"><span class="cl"> 		<span class="nt">&lt;engine&gt;</span>
</span></span><span class="line"><span class="cl">  			<span class="nt">&lt;host&gt;</span>
</span></span><span class="line"><span class="cl"> 		 		<span class="nt">&lt;context</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"> 			..
</span></span><span class="line"><span class="cl"> 			<span class="nt">&lt;/host&gt;</span>
</span></span><span class="line"><span class="cl"> 			..
</span></span><span class="line"><span class="cl"> 		<span class="nt">&lt;/engine&gt;</span>
</span></span><span class="line"><span class="cl"> 	<span class="nt">&lt;/service&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/server&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="主机host">主机(Host)</h4>
<p>主机组件类似于Apache中的 <font style="background:#fee904;" size=3>虚拟主机</font>，但在Tomcat中只支持基于FQDN的“虚拟主机”。一个引擎至少要包含一个主机组件。
位于Engine容器中，用于接收请求并进行相应处理的主机或虚拟主机</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Host</span> <span class="na">name=</span><span class="s">&#39;localhsot&#39;</span> <span class="na">appBase=</span><span class="s">&#39;webapps&#39;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">unpackWARs=</span><span class="s">&#39;true&#39;</span> <span class="na">autoDeploy=</span><span class="s">&#39;true&#39;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">xmlValidation=</span><span class="s">&#39;false&#39;</span> <span class="na">xmlNamespaceAware=</span><span class="s">&#39;false&#39;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Host&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="常用属性">常用属性</h5>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">appBase</td>
<td style="text-align:left">此host的webapps目录，即存放非归档的web应用程序的目录或归档后的WAR文件的目录路径。可以位用基于$CATALINA_HOME的相对路径。</td>
</tr>
<tr>
<td style="text-align:left">autoDeploy</td>
<td style="text-align:left">在Tomcat处于运行状态时放置于appBase目录中的应用程序文件是否自动进行deploy，默认认为true。</td>
</tr>
<tr>
<td style="text-align:left">unpackWars</td>
<td style="text-align:left">在启用此webapp时是否对WAR格式的归的文件先进行展开，默认为true。</td>
</tr>
</tbody>
</table>
<h5 id="虚拟主机定义示例">虚拟主机定义示例</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"> <span class="nt">&lt;Engine</span> <span class="na">name=</span><span class="s">&#39;Catalina&#39;</span> <span class="na">defaultHost=</span><span class="s">&#39;localhost&#39;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">  	<span class="nt">&lt;Host</span> <span class="na">name=</span><span class="s">&#39;localhost&#39;</span> <span class="na">appBase=</span><span class="s">&#39;webapps&#39;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"> 		<span class="nt">&lt;Context</span> <span class="na">path=</span><span class="s">&#39;&#39;</span> <span class="na">docBase=</span><span class="s">&#39;ROOT&#39;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"> 		<span class="nt">&lt;Context</span> <span class="na">path=</span><span class="s">&#39;&#39;</span> <span class="na">docBase=</span><span class="s">&#39;/web/www&#39;</span> <span class="na">reloadable=</span><span class="s">&#39;true&#39;</span> <span class="na">crossContext=</span><span class="s">&#39;true&#39;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"> 	<span class="nt">&lt;/Host&gt;</span>
</span></span><span class="line"><span class="cl"> <span class="nt">&lt;/Engine&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="主机别名定义">主机别名定义</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"> 	<span class="nt">&lt;Host</span> <span class="na">name=</span><span class="s">&#39;localhost&#39;</span> <span class="na">appBase=</span><span class="s">&#39;webapps&#39;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"> 	 	<span class="nt">&lt;Alias&gt;</span>web.com<span class="nt">&lt;/Alias&gt;</span>
</span></span><span class="line"><span class="cl"> 	<span class="nt">&lt;/Host&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="上下文context">上下文(Context)</h4>
<p>Context组件是  最内层次的组件，它表示Web应用程序本身。配置一个Context最主要的是指定Web应用程序的根目录，以便Servlet容器能够将用户请求发往正确的位置。Context组件也可包含自定义的错误页，以实现在用户访问发生错误时提供友好的提示信息。
context在某些意义上类似于apache中的路径别名，一个Context定义用于表示tomcat实例中的一个Web应用程序。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Context</span> <span class="na">path=</span><span class="s">&#34;/web/bbs&#34;</span> <span class="na">docBase=</span><span class="s">&#34;/data/web&#34;</span> <span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在tomcat6中每一个context定义也可以使用一个单独的XML文件进行，其文件的目录为<code>$CATALINA_HOME/conf/&lt;engine name&gt;/&lt;host name&gt;</code>，可以用于Context中的XML元素有Loader，Manager，Realm，Resources、WatchedResource。</p>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">docBase</td>
<td style="text-align:left">相应的web应用程序的存放位置。也可以使用相对路径，起始路径为此Context所属Host中appBase定义的路径。切记，docBase的路径名不能与相应host中appBase中定义的路径名有包含关系。如：如果appBase为deploy，而docBase决不能为deploy-bbs之类的名字。</td>
</tr>
<tr>
<td style="text-align:left">path</td>
<td style="text-align:left">相对与web服务器根路径而言的URI，如果为空&rsquo;&rsquo;，则表示为此webapp的根路径，如果context定义在一个单独的xml文件中，此属性不需要定义。</td>
</tr>
<tr>
<td style="text-align:left">reloadable</td>
<td style="text-align:left">是够允许重新加载此context相关的web应用程序的类，默认为false</td>
</tr>
</tbody>
</table>
<h2 id="被嵌套类nested组件">被嵌套类(nested)组件</h2>
<p>这类组件通常包含于容器类组件中以提供具有管理功能的服务，它们不能包含其它组件，但有些却可以由不同层次的容器各自配置。</p>
<h4 id="阀门valve">阀门(Valve)</h4>
<p>用来拦截请求并在将其转至目标之前进行某种处理操作，类似于Servlet规范中定义的过滤器。Valve可以定义在任何容器类的组件中。Valve常被用来记录客户端请求、客户端IP地址和服务器等信息，这种处理技术通常被称作请求转储(request dumping)。请求转储valve记录请求客户端请求数据包中的HTTP首部信息和cookie信息文件中，响应转储valve则记录响应数据包首部信息和cookie信息至文件中。</p>
<p>Valve（阀门）类似于过滤器，用来拦截请求并在将其转至目标之前进行某种处理操作；它可以工作于Engine和Host/Context之间、Host和Context之间以及Context和Web应用程序的某资源之间。
Valve常被用来记录客户端请求、客户端IP地址和服务器等信息，这种处理技术通常被称作请求转储(request dumping)。请求转储valve记录请求客户端请求数据包中的HTTP首部信息和cookie信息文件中，响应转储valve则记录响应数据包首部信息和cookie信息至文件中。</p>
<p>一个容器内可以建立多个Valve，而且Valve定义的次序也决定了它们生效的次序。不同类型的Value具有不同的处理能力，Tomcat中实现了多种不同的Valve：</p>
<ul>
<li>AccessLogValve：访问日志Valve。</li>
<li>ExtendedAccessValve：扩展功能的访问日志Valve。</li>
<li>JDBCAccessLogValve：通过JDBC将访问日志信息发送到数据库中。</li>
<li>RequestDumperValve：请求转储Valve。</li>
<li>RemoteAddrValve：基于远程地址的访问控制。</li>
<li>RemoteHostValve：基于远程主机名称的访问控制。</li>
<li>SemaphoreValve：用于控制Tomcat主机上任何容器上的并发访问数量。</li>
<li>JvmRouteBinderValve：在配置多个tomcat为以Apache通过mod_proxy或mod_jk作为前段的集群架构中，当期望停止某节点时，可以通过此valve将用记请求定向至备用节点，使用civalve必须使</li>
<li>JvmRouteSessionIDBinderListener。</li>
<li>ReplicationValve：专用于Tomcat集群架构中，可以在某个请求的session信息发生更改时触发session数据在各节点间进行复制。</li>
<li>SingleSignOn：将两个或多个需要对用户进行认证webapp在认证用户时连接在一起，即一次认证即可访问所有连接在一起的webapp。</li>
<li>ClusterSingleSingOn：对SingleSignOn的扩展，专用于Tomcat集群当中，需要结合ClusterSingleSignOnListener进行工作。</li>
<li>RemoteHostValve和RemoteAddrValve可以分别用来实现基于主机名称和基于IP地址的访问控制，控制本身可以通过allow或deny来进行定义，这有点类似与Apache httpd的访问控制功能：如下面的valve则实现了仅允许本机访问/probe。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Context</span> <span class="na">path=</span><span class="s">&#39;/porbe&#39;</span> <span class="na">docBase=</span><span class="s">&#39;probe&#39;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Valve</span> <span class="na">className=</span><span class="s">&#39;org.apache.catalina.valves.RemoteAddrValve&#39;</span> 
</span></span><span class="line"><span class="cl"> 	<span class="na">allow=</span><span class="s">&#34;127\.0\.0\.1&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Context&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="常用相关属性说明">常用相关属性说明</h5>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">className</td>
<td style="text-align:left">相关的java实现的类名，相应于分别应该为org.apache.catalina.valves.RemoteAddrValve</td>
</tr>
<tr>
<td style="text-align:left">allow</td>
<td style="text-align:left">以逗号分开的允许访问的IP地址列表，支持正则表达式，因此。点号“.”用于IP地址时需要转义，仅定义allow项时，非明企鹅allow的地址均被deny。</td>
</tr>
<tr>
<td style="text-align:left">deny</td>
<td style="text-align:left">以逗号分开的禁止访问的IP地址列表，支持正则表达式。</td>
</tr>
</tbody>
</table>
<h4 id="日志记录器logger">日志记录器(Logger)</h4>
<p>用于记录组件内部的状态信息，可被用于除Context之外的任何容器中。日志记录的功能可被继承，因此，一个引擎级别的Logger将会记录引擎内部所有组件相关的信息，除非某内部组件定义了自己的Logger组件。</p>
<h4 id="领域realm">领域(Realm)</h4>
<p>Realm（领域）表示分配给这些用户的用户名，密码和角色（类似于Unix组）的&quot;数据库&quot;。一个Realm（领域）表示一个安全上下文，它是一个授权访问某个给定Context的用户列表和某用户所允许切换的角色相关定义的列表。因此Realm就像是一个用户和组相关的数据库。定义Realm是唯一必须要提供的是classname，它是Realm的国歌 LockOutRealm：提供锁定功能，以便在给定时间段内出现过多的失败认证尝试时提供用户锁定机制；</p>
<ul>
<li>JAASRealm：基于Java Authintication and Authorization Service实现用户认证。</li>
<li>JDBCRealm：通过JDBC访问某关系型数据库表实现用户认证。</li>
<li>JNDIRealm：基于JNDI使用目录服务实现认证信息的获取。</li>
<li>MemoryRealm：超找tomcat-user.xml文件实现用户信息的获取。</li>
<li>UserDatabaseRealm：基于UserDatabase文件(通常是tomcat-user.xml)实现用户认证，它实现是一</li>
<li>完全可更新和持久有效的MemoryRealm，因此能够跟标准的MemoryRealm兼容；它通过JNDI实现；
使用JDBC方式获取用户认证信息的配置</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Ream</span> <span class="na">className=</span><span class="s">&#34;org.apache.catalina.realm.UserDatabaseRealm&#34;</span> <span class="na">resourceName=</span><span class="s">&#34;UserDatabase&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">&lt;!-- 使用UserDatabase的配置 --&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Ream</span> <span class="na">className=</span><span class="s">&#34;org.apache.catalina.realm.UserDatabaseRealm&#34;</span> <span class="na">debug=</span><span class="s">&#34;99&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">driverName=</span><span class="s">&#34;org.gjt.mm.mysql.Driver&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">connectionUrl=</span><span class="s">&#34;jdbc:mysql//localhost/authority&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">userTable=</span><span class="s">&#34;test&#34;</span> <span class="na">userNameCol=</span><span class="s">&#34;user_name&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">userCredCol=</span><span class="s">&#34;user_pass&#34;</span>
</span></span><span class="line"><span class="cl"> 	<span class="na">userRoleTable=</span><span class="s">&#34;user_roles&#34;</span> <span class="na">roleNameCol=</span><span class="s">&#34;role_name&#34;</span> <span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="tomcat的运行模式">tomcat的运行模式</h3>
<h4 id="standalone">standalone</h4>
<p>通过内置的web server(http connector)来接受客户端请求；</p>
<h4 id="proxy">proxy</h4>
<p>由专门的web server服务客户端的http请求；</p>
<p>in-process：不属于同一主机；</p>
<p>network：不属于不同主机</p>
<p>每一次访问jsp文件时，jsp文件会被编译成字节码存放到磁盘，下次访问时直接加载字节码不会再访问了。</p>
<p>server.xml：主配置文件</p>
<p>context.xml：每个webapp都可以有专用的配置文件，这些配置文件通常位于webapp应用程序目录下的WEB-INF目录中，用于定义会话管理器、JDBC等：conf/context.xml是为各webapp提供默认部署相关的配置；</p>
<p>tomcat-user.xml用户认证的账号和密码配置文件。</p>
<p>catalina.policy：当使用-security选项启动tomcat实例时，会读取此配置文件来实现其安全运行策略；</p>
<p>catalina.properties：java属性的定义文件，用于设定类加载器路径等，以及一些JVM性能相关的调优参数；</p>
<p>logging.properties：日志相关的配置信息；</p>
<h4 id="tomcat连接器架构">Tomcat连接器架构</h4>
<p>基于Apache做为Tomcat前端的架构来讲，Apache通过mod_jk、mod_jk2或mod_proxy模块与后端的Tomcat进行数据交换。而对Tomcat来说，每个Web容器实例都有一个Java语言开发的连接器模块组件，在Tomcat6中，这个连接器是org.apache.catalina.Connector类。这个类的构造器可以构造两种类别的连接器：HTTP/1.1负责响应基于HTTP/HTTPS协议的请求，AJP/1.3负责响应基于AJP的请求。但可以简单地通过在server.xml配置文件中实现连接器的创建，但创建时所使用的类根据系统是支持APR(Apache Portable Runtime)而有所不同。</p>
<p>APR是附加在提供了通用和标准API的操作系统之上一个通讯层的本地库的集合，它能够为使用了APR的应用程序在与Apache通信时提供较好伸缩能力时带去平衡效用。</p>
<p>同时，需要说明的是，mod_jk2模块目前已经不再被支持了，mod_jk模块目前还apache被支持，但其项目活跃度已经大大降低。因此，目前更常用 的方式是使用mod_proxy模块。</p>
<p><em><strong>如果支持APR</strong>：</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">HTTP/1.1：org.apache.cotote.http11.Http11AprProtocol
</span></span><span class="line"><span class="cl">AJP/1.3：org.apache.coyote.ajp.AjpAprProtocol
</span></span></code></pre></td></tr></table>
</div>
</div><p><em><strong>如果不支持APR</strong>：</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">HTTP/1.1: org.apache.coyote.http11.Http11Protocol
</span></span><span class="line"><span class="cl">AJP/1.3: org.apache.jk.server.JkCoyoteHandler
</span></span></code></pre></td></tr></table>
</div>
</div><p><em><strong>连接器协议</strong>：</em></p>
<p>Tomcat的Web服务器连接器支持两种协议：AJP和HTTP，它们均定义了以二进制格式在Web服务器和Tomcat之间进行数据传输，并提供相应的控制命令。</p>
<p>AJP(Apache JServ Protocol)协议：目前正在使用的AJP协议的版本是通过JK和JK2连接器提供支持的AJP13，它基于二进制的格式在Web服务器和Tomcat之间传输数据，而此前的版本AJP10和AJP11则使用文本格式传输数据。</p>
<p>HTTP协议：诚如其名称所表示，其是使用HTTP或HTTPS协议在Web服务器和Tomcat之间建立通信，此时，Tomcat就是一个完全功能的HTTP服务器，它需要监听在某端口上以接收来自于商前服务器的请求。</p>
<h2 id="下载安装tomcat">下载安装tomcat</h2>
<p><em><strong>Tomcat的官方站点</strong></em></p>
<p><a href="http://tomcat.apache.org/">http://tomcat.apache.org/</a></p>
<p>要安装Tomcat，首先需要安装JDK。</p>
<p><em><strong>jdk下载地址</strong></em></p>
<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>
<p><em><strong>加载环境变量</strong></em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat &gt;/etc/profile.d/java.sh <span class="s">&lt;&lt;EOF
</span></span></span><span class="line"><span class="cl"><span class="s">JAVA_HOME=/app/jdk
</span></span></span><span class="line"><span class="cl"><span class="s">export PATH=$JAVA_HOME/bin:$PATH
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><em><strong>查看java版本</strong></em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ java -version
</span></span><span class="line"><span class="cl">java version &#34;1.8.0_144&#34;
</span></span><span class="line"><span class="cl">Java(TM) SE Runtime Environment (build 1.8.0_144-b01)
</span></span><span class="line"><span class="cl">Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="yum安装jdk">yum安装jdk</h3>
<p>此方法不需要对path设置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">yum install java-1.8.0-openjdk* -y
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="部署tomcat">部署tomcat</h3>
<p>官方网站：http://tomcat.apache.org/</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730221049053.png" alt="image-20200730221049053"  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/405b37ee.png" alt="405b37ee"  /></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ tree /app/tomcat-8.5.16/ -L 1
</span></span><span class="line"><span class="cl">/app/tomcat-8.5.16/
</span></span><span class="line"><span class="cl">├── bin
</span></span><span class="line"><span class="cl">├── conf
</span></span><span class="line"><span class="cl">├── lib
</span></span><span class="line"><span class="cl">├── LICENSE
</span></span><span class="line"><span class="cl">├── logs
</span></span><span class="line"><span class="cl">├── NOTICE
</span></span><span class="line"><span class="cl">├── RELEASE-NOTES
</span></span><span class="line"><span class="cl">├── RUNNING.txt
</span></span><span class="line"><span class="cl">├── temp
</span></span><span class="line"><span class="cl">├── webapps
</span></span><span class="line"><span class="cl">└── work
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/app/tomcat-8.5.16/bin/startup.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730221049053.png" alt="image-20200730221151330"  /></p>
<h2 id="tomcat配置">tomcat配置</h2>
<h3 id="tomcat的目录结构">tomcat的目录结构</h3>
<p>bin：脚本及启动时用到的类</p>
<p>lib：类库</p>
<p>conf：配置文件</p>
<p>logs：日志文件</p>
<p>webapps：应用程序默认部署目录</p>
<p>work：工作目录</p>
<p>temp：临时文件目录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ tree -L <span class="m">1</span> /app/tomcat/
</span></span><span class="line"><span class="cl">/app/tomcat/
</span></span><span class="line"><span class="cl">├── bin <span class="c1">#&lt;==脚本及启动时用到的类</span>
</span></span><span class="line"><span class="cl">├── conf <span class="c1">#&lt;==配置文件</span>
</span></span><span class="line"><span class="cl">│   ├── Catalina
</span></span><span class="line"><span class="cl">│   ├── catalina.policy
</span></span><span class="line"><span class="cl">│   ├── catalina.properties <span class="c1">#&lt;==当使用-security选项启动tomcat实例时，会读取此配置文件来实现其安全运行策略；</span>
</span></span><span class="line"><span class="cl">│   ├── context.xml <span class="c1">#&lt;== 每个webapp都可以有专用的配置文件，这些配置文件通常位于webapp应用程序目录下的WEB-INF目录中，用于定义会话管理器、JDBC等：conf/context.xml是为各webapp提供默认部署相关的配置</span>
</span></span><span class="line"><span class="cl">│   ├── logging.properties <span class="c1">#&lt;==日志相关的配置信息；</span>
</span></span><span class="line"><span class="cl">│   ├── server.xml <span class="c1">#&lt;==主配置文件</span>
</span></span><span class="line"><span class="cl">│   ├── tomcat-users.xml <span class="c1">#&lt;==用户认证的账号和密码配置文件</span>
</span></span><span class="line"><span class="cl">│   └── web.xml
</span></span><span class="line"><span class="cl">├── lib <span class="c1">#&lt;==类库</span>
</span></span><span class="line"><span class="cl">├── logs <span class="c1">#&lt;==日志文件</span>
</span></span><span class="line"><span class="cl">├── temp <span class="c1">#&lt;==临时文件目录</span>
</span></span><span class="line"><span class="cl">├── webapps <span class="c1">#&lt;==应用程序默认部署目录</span>
</span></span><span class="line"><span class="cl">└── work <span class="c1">#&lt;==工作目录</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="java-webapp组织结构">java webapp组织结构</h3>
<p>有特定的组织形式、层次型的目录结构：主要包含了servlet代码文件、JSP页面文件、类文件、部署描述符文件等；</p>
<p>/usr/local/tomcat/webapps/app1/</p>
<p>/webapp的根目录</p>
<ul>
<li>
<p>WEB-INF：当前webapp的私有资源目录，通常存放当前webapp自用的 <code>web.xml</code></p>
</li>
<li>
<p>META-INF：当前webapp的私有资源目录，通常存放当前webapp自用的 <code>context.xml</code></p>
</li>
<li>
<p>classes：此webapp的私有类</p>
</li>
<li>
<p>lib：此webapp的私有类，被大包围jar格式类。</p>
</li>
<li>
<p>index.jsp：webapp的主页</p>
</li>
</ul>
<p>webapp归档格式：</p>
<ul>
<li><code>.war</code>：webapp</li>
<li><code>.jar</code>：EJB的类</li>
<li><code>.rar</code>：资源适配器</li>
<li><code>.ear</code>：企业级应用程序</li>
</ul>
<h3 id="手动部署java程序">手动部署java程序</h3>
<p>在webapp下创建特定格式的子目录。每个应用程序都会自动从tomcat conf目录下去读取web.xml和context.xml。如果没有提供默认的，就会从tomcat上继承一个公共的。如想对默认配置进行修改，建议复制web.xml到WEB-INF，context.xml到MATE-INF下修改专有配置。不会对全局进行影响。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkdir -pv app/{lib,classes,WEB-INF,META-INF}
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;%@ page language=&#34;java&#34; %&gt;
</span></span><span class="line"><span class="cl">&lt;%@ page import=&#34;java.util.*&#34; %&gt;
</span></span><span class="line"><span class="cl">&lt;html&gt;
</span></span><span class="line"><span class="cl">	 	&lt;head&gt;&lt;title&gt;JSP Test Page&lt;/title&gt;&lt;/head&gt;
</span></span><span class="line"><span class="cl">	 	&lt;body&gt;&lt;% out.println(&#34;Hellow, world.&#34;); %&gt;&lt;/body&gt;
</span></span><span class="line"><span class="cl">&lt;html&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730221506310.png" alt="image-20200730221506310"  /></p>
<p>java程序在运行时，index.jsp文档首先会被转为java文件。最后编译成class文件。这些编译结果会保存在java（tomcat）当中的work子目录。</p>
<p>为了能使每一个类都是全局唯一的，所以每个公司所开发的java类（可能被公共调用的），都以自己公司的域名倒过来写 org.apache.jsp。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ tree /app/tomcat/work/
</span></span><span class="line"><span class="cl">/app/tomcat/work/
</span></span><span class="line"><span class="cl">└── Catalina
</span></span><span class="line"><span class="cl">    └── localhost
</span></span><span class="line"><span class="cl">        ├── app
</span></span><span class="line"><span class="cl">        │   └── org
</span></span><span class="line"><span class="cl">        │       └── apache
</span></span><span class="line"><span class="cl">        │           └── jsp 
</span></span><span class="line"><span class="cl">        │               ├── index_jsp.class <span class="c1">#&lt;==最终被编译成java类，最终运行的</span>
</span></span><span class="line"><span class="cl">        │               └── index_jsp.java  <span class="c1">#&lt;==这是servlet文件，纯java编码</span>
</span></span><span class="line"><span class="cl">        └── ROOT
</span></span><span class="line"><span class="cl">            └── org
</span></span><span class="line"><span class="cl">                └── apache
</span></span><span class="line"><span class="cl">                    └── jsp
</span></span><span class="line"><span class="cl">                        ├── index_jsp.class
</span></span><span class="line"><span class="cl">                        └── index_jsp.jav
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="部署">部署</h3>
<p>部署(deployment) webapp相关的操作：</p>
<p>deploy:部署，将webapp的源文件放置于目标目录、配置tomcat服务器能够基于context.xml文件中定义的路径来访问此webapp；将其特有类通过class loader装载至tomcat</p>
<blockquote>
<p><strong>tomcat部署的两种方式</strong></p>
</blockquote>
<h4 id="自动部署autodeploy">自动部署autodeploy</h4>
<h4 id="手动部署">手动部署</h4>
<ol>
<li>
<p>冷部署：把webapp复制到指定位置，而后才启动tomcat。</p>
</li>
<li>
<p>热部署：在不停止tomcat的前提下进行的部分。需要通过部署工具来进行。常见的部署工具有<font style="background:#fee904;" size=3>  manager、ant脚本、tcd</font>（tomcat client deployer）等。</p>
</li>
<li>
<p>undeploy：反部署，停止webapp，并从tomcat实例拆除其部分文件和部署名。</p>
</li>
</ol>
<p>stop：停止，不再想用户提供服务。</p>
<p>start：启动处于“停止”状态的webapp</p>
<p>redeploy：重新部署</p>
<h2 id="tomcat安全规范">tomcat安全规范</h2>
<h3 id="telnet管理端口保护">telnet管理端口保护</h3>
<p>修改默认的8005管理端口不易猜疑的端口（大于1024）或改为-1关闭端口。</p>
<p>修改SHUTDOWN指令为其他字符串</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Server</span> <span class="na">port=</span><span class="s">&#39;-1&#39;</span> <span class="na">shutdown=</span><span class="s">&#39;SHUTDOWN&#39;</span><span class="nt">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="ajp连接端口保护">AJP连接端口保护</h3>
<p>1、修改默认的ajp 8009端口为不易冲突的大于1024端口。</p>
<p>2、通过iptables规则限制ajp端口访问的权限仅为线上机器。保护此端口的目的在于防止线下测试流量被mod_jk转发至线上tomcat服务器</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Connector</span> <span class="na">port=</span><span class="s">&#34;8528&#34;</span> <span class="na">protocol=</span><span class="s">&#34;AJP/1.3&#34;</span> <span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="禁用管理端">禁用管理端</h3>
<ol>
<li>删除默认的tomcat安装目录 /conf/tomcat-user.xml文件。重启tomcat后将会自动生成新的文件。</li>
<li>删除tomcat目录webapps下默认的所有目录和文件</li>
<li>将tomcat应用根目录配置为tomcat安装目录以外的目录。</li>
</ol>
<h3 id="降权启动">降权启动</h3>
<p>tomcat启动用户权限必须为非root权限，尽量降低tomcat启动用户的目录访问权限；如果直接对外使用80端口，可通过普通账号启动后配置iptables规则进行转发。避免一旦tomcat服务被入侵，黑客直接获取高级用户权限危害整个server的安全。</p>
<h3 id="版本信息隐藏">版本信息隐藏</h3>
<ol>
<li>修改 <code>conf/web.xml</code>，重定向403 404及500等错误指定的错误页面。</li>
<li>可以通过修改应用程序目录下的 <code>WEB-INF/web.xml</code> 下的配置进行错误页面的重定向。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;error-page&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;error-code&gt;</span>403<span class="nt">&lt;/error-code&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;location&gt;</span>/forbidden.jsp<span class="nt">&lt;/location&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/error-page&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nt">&lt;error-page&gt;</span>
</span></span><span class="line"><span class="cl"> 	<span class="nt">&lt;error-code&gt;</span>404<span class="nt">&lt;/error-code&gt;</span>
</span></span><span class="line"><span class="cl"> 	<span class="nt">&lt;location&gt;</span>/notfound.jsp<span class="nt">&lt;/location&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/error-page&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nt">&lt;error-page&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;error-code&gt;</span>500<span class="nt">&lt;/error-code&gt;</span>
</span></span><span class="line"><span class="cl"> 	<span class="nt">&lt;location&gt;</span>/systembusy.jsp<span class="nt">&lt;/location&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/error-page&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在配置中对一些常见错误进行重定向，避免当出现错误时tomcat默认显示的错误页面暴露服务器和版本信息，必须确保程序很目录下的错误页面已经存在。</p>
<h3 id="server-header重写">server header重写</h3>
<p>在HTTP Connector配置中加入server的配置 <code>server=&quot;webserver&quot; </code>。当tomcat HTTP端口直接提供web服务时此配置生效，加入此配置，将会替换http响应Server header部分的默认配配置，默认是 <code>Apache-Coyote/1.1</code></p>
<h3 id="访问限制">访问限制</h3>
<p>通过配置限定访问的IP来源。配置信任IP的白名单，拒绝非白名单ip的访间。<font color="#0215cd"  size=2>此配置主要是针对高
保密级别的系统。一般产品线不需要</font>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Context</span> <span class="na">path=</span><span class="s">&#34;&#34;</span> <span class="na">docBasse=</span><span class="s">&#34;/home/work/tomcat&#34;</span> <span class="na">debug=</span><span class="s">&#34;0&#34;</span> <span class="na">reloadable=</span><span class="s">&#34;false&#34;</span> <span class="na">crossContext=</span><span class="s">&#34;true&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;Valve</span> <span class="na">className=</span><span class="s">&#34;org.apache.catalina.valves.RemoteAddrValue&#34;</span> <span class="na">allow=</span><span class="s">&#34;10.0.0.2,10.0.0.3&#34;</span> <span class="na">deny=</span><span class="s">&#34;*.*.*.*&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Context&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="启动停止脚本权限回收">启动停止脚本权限回收</h3>
<p>去除其他用户对tomcat的bin目录下 <code>shutdown.sh</code>、<code>startup.sh</code>、<code>catalina.sh</code> 的可执行权限。防止其他用户有上线的其他权限。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">chmod -R 744 /app/tomcat/bin/*
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="访问日志规范格式">访问日志规范格式</h3>
<p>开启tomcat默认访间日志中的Referer和User-Agent记录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Valve</span> <span class="na">className=</span><span class="s">&#34;org.apache.catalina.valvesAccessLogValve&#34;</span>                    
</span></span><span class="line"><span class="cl"> 	<span class="na">directory=</span><span class="s">&#34;logs&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="na">prefix=</span><span class="s">&#34;localhost_access_log.&#34;</span> <span class="na">suffix=</span><span class="s">&#34;.txt&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="na">pattern=</span><span class="s">&#34;%h %l %u %t %r %s %b %(Referer}i %{User-Agent)i %D&#34;</span> 
</span></span><span class="line"><span class="cl"> 	<span class="na">resolveHosts=</span><span class="s">&#34;false&#34;</span> <span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="文件列表访问控制">文件列表访问控制</h3>
<p><code>$CATALINA_HOME/conf/web.xml或WEB-INF/web.xml</code> 文件中default部分 <code>listings</code> 的配置必须为 ==<code>false</code>==。false为不列出目录列表，true为列出。<font style="background:#fee904;" size=3>默认false</font>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"> <span class="nt">&lt;init-param&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;param-name&gt;</span>listings<span class="nt">&lt;/param-name&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;param-value&gt;</span>false<span class="nt">&lt;/param-value&gt;</span>
</span></span><span class="line"><span class="cl"> <span class="nt">&lt;/init-param&gt;</span>  
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="tomcat-应用程序">tomcat 应用程序</h2>
<h3 id="manager-app">manager app</h3>
<p>webapp管理工具</p>
<h4 id="manager配置">manager配置</h4>
<p>首先编辑/app/tomcat/conf/tomcat-users.xml文件，改完后不会立即生效，tomcat在启动时，将读取配置文件到内存中。需要重读授权表或重启。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;role rolename=&#34;manager-gui&#34;/&gt;
</span></span><span class="line"><span class="cl">&lt;user username=&#34;admin&#34; password=&#34;1&#34; roles=&#34;manager-gui&#34; /&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p><strong><font color="#0215cd" size=2> <font color="#f8070d" size=2>⚠</font> 请注意，对于Tomcat  manager而言，需要分配您希望访问的功能所需的角色。
</font></strong></p>
<hr>
<p>manager-gui：允许访问HTML GUI和状态页面（图形接口）</p>
<p>manager-script：允许访问文本界面和状态页面（命令行接口）</p>
<p>manager-jmx：允许访问JMX代理和状态页面（JMX用来远程监控java程序的监控接口）</p>
<p>manager-status：仅允许访问状态页面（JAVA虚拟机各种状态信息。只读，无法进行管理）</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730222014902.png" alt="image-20200730222014902"  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730222035238.png" alt="image-20200730222035238"  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730222052169.png" alt="image-20200730222052169"  /></p>
<h4 id="tomcat8-403">tomcat8 403</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;Context privileged=&#34;true&#34; 
</span></span><span class="line"><span class="cl">         antiResourceLocking=&#34;false&#34;
</span></span><span class="line"><span class="cl">        docBase=&#34;${catalina.home}/webapps/manager&#34;&gt;
</span></span><span class="line"><span class="cl">        &lt;Valve className=&#34;org.apache.catalina.valves.RemoteAddrValve&#34; allow=&#34;^.*$&#34;  \/&gt;
</span></span><span class="line"><span class="cl">&lt;/Context&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="host-manager">host manager</h3>
<p>Virtual Hosts管理工具</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"> 44   &lt;role rolename=&#34;manager-gui&#34;/&gt;
</span></span><span class="line"><span class="cl"> 45   &lt;role rolename=&#34;admin-gui&#34; /&gt;
</span></span><span class="line"><span class="cl"> 46   &lt;user username=&#34;admin&#34; password=&#34;1&#34; roles=&#34;manager-gui,admin-gui&#34;/&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730222123975.png" alt="image-20200730222123975"  /></p>
<h4 id="tomcat8-403-1">tomcat8 403</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;Context antiResourceLocking=&#34;false&#34; privileged=&#34;true&#34; &gt;
</span></span><span class="line"><span class="cl">      &lt;Valve className=&#34;org.apache.catalina.valves.RemoteAddrValve&#34;  
</span></span><span class="line"><span class="cl">             allow=&#34;10.0.0.*&#34; /&gt;
</span></span><span class="line"><span class="cl">      &lt;Manager  
</span></span><span class="line"><span class="cl">               sessionAttributeValueClassNameFilter=&#34;java\.lang\.                                    (?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap&#34;/&gt;
</span></span><span class="line"><span class="cl">&lt;/Context&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="server-status">Server Status</h3>
<p>manager子组件</p>
<h2 id="apache反向代理tomcat">apache反向代理tomcat</h2>
<h3 id="lamt">lamt</h3>
<p>client &ndash;&gt; http &ndash;&gt; httpd &ndash;&gt; reverse_proxy &ndash;&gt; http ajp &ndash;&gt; tomcat {http connector ajp connector}</p>
<blockquote>
<p><strong>httpd反代模块</strong></p>
</blockquote>
<ul>
<li>主：proxy_module</li>
<li>子：proxy_module_http proxy_module_ajp。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">        DocumentRoot &#34;/app/apache-2.4.28/docs/www&#34;
</span></span><span class="line"><span class="cl">        ServerName www.test.com
</span></span><span class="line"><span class="cl">        ServerAlias test.com
</span></span><span class="line"><span class="cl">        ErrorLog &#34;logs/www.com-error_log&#34;
</span></span><span class="line"><span class="cl">        CustomLog &#34;logs/www.com-access_log&#34; common
</span></span><span class="line"><span class="cl">        ProxyVia On
</span></span><span class="line"><span class="cl">        ProxyRequests Off
</span></span><span class="line"><span class="cl">        ProxyPreserveHost On
</span></span><span class="line"><span class="cl">        &lt;Proxy *&gt;
</span></span><span class="line"><span class="cl">              require all granted
</span></span><span class="line"><span class="cl">        &lt;/Proxy&gt;
</span></span><span class="line"><span class="cl">        ProxyPass / http://10.0.0.5:8080/
</span></span><span class="line"><span class="cl">        ProxyPassReverse / http://10.0.0.5:8080/
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730222233836.png" alt="image-20200730222233836"  /></p>
<blockquote>
<p><strong>ajp</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">      DocumentRoot &#34;/app/apache-2.4.28/docs/www&#34;
</span></span><span class="line"><span class="cl">      ServerName www.test.com
</span></span><span class="line"><span class="cl">      ServerAlias test.com
</span></span><span class="line"><span class="cl">      ErrorLog &#34;logs/www.com-error_log&#34;
</span></span><span class="line"><span class="cl">      CustomLog &#34;logs/www.com-access_log&#34; common
</span></span><span class="line"><span class="cl">      ProxyVia On
</span></span><span class="line"><span class="cl">      ProxyRequests Off
</span></span><span class="line"><span class="cl">      ProxyPreserveHost On
</span></span><span class="line"><span class="cl">      &lt;Proxy *&gt;
</span></span><span class="line"><span class="cl">           require all granted
</span></span><span class="line"><span class="cl">      &lt;/Proxy&gt;
</span></span><span class="line"><span class="cl">      ProxyPass /index.php !
</span></span><span class="line"><span class="cl">      ProxyPass / ajp://10.0.0.5:8009/
</span></span><span class="line"><span class="cl">      ProxyPassReverse / ajp://10.0.0.5:8009/
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730222353848.png" alt="image-20200730222353848"  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200730222322141.png" alt="image-20200730222322141"  /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>tomcat修改日志目录</title>
      <link>https://www.oomkill.com/2018/06/tomcat-log-path/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2018/06/tomcat-log-path/</guid>
      <description></description>
      <content:encoded><![CDATA[<h3 id="修改loggingproperties">修改logging.properties</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/usr/local/apache-tomcat-8.5.32/conf/logging.properties
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">############################################################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Handler specific properties.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Describes specific configuration info for Handlers.</span>
</span></span><span class="line"><span class="cl"><span class="c1">############################################################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">1catalina.org.apache.juli.AsyncFileHandler.level <span class="o">=</span> FINE
</span></span><span class="line"><span class="cl">1catalina.org.apache.juli.AsyncFileHandler.directory <span class="o">=</span> /data/logs
</span></span><span class="line"><span class="cl">1catalina.org.apache.juli.AsyncFileHandler.prefix <span class="o">=</span> catalina.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2localhost.org.apache.juli.AsyncFileHandler.level <span class="o">=</span> FINE
</span></span><span class="line"><span class="cl">2localhost.org.apache.juli.AsyncFileHandler.directory <span class="o">=</span> /data/logs
</span></span><span class="line"><span class="cl">2localhost.org.apache.juli.AsyncFileHandler.prefix <span class="o">=</span> localhost.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3manager.org.apache.juli.AsyncFileHandler.level <span class="o">=</span> FINE
</span></span><span class="line"><span class="cl">3manager.org.apache.juli.AsyncFileHandler.directory <span class="o">=</span> /data/logs
</span></span><span class="line"><span class="cl">3manager.org.apache.juli.AsyncFileHandler.prefix <span class="o">=</span> manager.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">4host-manager.org.apache.juli.AsyncFileHandler.level <span class="o">=</span> FINE
</span></span><span class="line"><span class="cl">4host-manager.org.apache.juli.AsyncFileHandler.directory <span class="o">=</span> /data/logs
</span></span><span class="line"><span class="cl">4host-manager.org.apache.juli.AsyncFileHandler.prefix <span class="o">=</span> host-manager.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">java.util.logging.ConsoleHandler.level <span class="o">=</span> FINE
</span></span><span class="line"><span class="cl">java.util.logging.ConsoleHandler.formatter <span class="o">=</span> org.apache.juli.OneLineFormatter
</span></span></code></pre></td></tr></table>
</div>
</div><p><em><strong>替换命令</strong></em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">:%s#<span class="si">${</span><span class="nv">catalina</span><span class="p">.base</span><span class="si">}</span>/logs#/data/logs#g
</span></span><span class="line"><span class="cl">sed -i s#<span class="si">${</span><span class="nv">catalina</span><span class="p">.base</span><span class="si">}</span>/logs#/data/logs#g  /usr/local/apache-tomcat-8.5.32/conf/logging.properties
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="修改catalinash">修改catalina.sh</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">CATALINA_OUT</span><span class="o">=</span>/data/logs/catalina.out
</span></span><span class="line"><span class="cl"><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/latest
</span></span><span class="line"><span class="cl"><span class="nv">JAVA_OPTS</span><span class="o">=</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">JAVA_OPTS</span><span class="si">}</span><span class="s2"> -Xms4096m -Xmx4096m -Xmn1024m -Xss1024K -XX:PermSize=4096m -XX:MaxPermSize=4096m&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><em><strong>增加如下</strong>：</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">CATALINA_OUT=/data/logs/catalina.out
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">org.apache.catalina.startup.Bootstrap <span class="s2">&#34;</span><span class="nv">$@</span><span class="s2">&#34;</span> start  2&gt;<span class="p">&amp;</span><span class="m">1</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>      <span class="p">|</span> /usr/sbin/cronolog /data/logs/catalina.%Y-%m-%d.out &gt;&gt; /dev/null <span class="p">&amp;</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>Apache httpd配置集锦</title>
      <link>https://www.oomkill.com/2016/10/apache-httpd/</link>
      <pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2016/10/apache-httpd/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>httpd下载地址：<a href="https://archive.apache.org/dist/httpd/">Historical releases</a></p>
<h2 id="安装httpd">安装httpd</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ls
</span></span><span class="line"><span class="cl">ABOUT_APACHE  buildconf	emacs-style  INSTALL			LICENSE			os		srclib
</span></span><span class="line"><span class="cl">acinclude.m4  CHANGES		httpd.dep    InstallBin.dsp  	Makefile.in    README 	support
</span></span><span class="line"><span class="cl">Apache.dsw    config.layout  httpd.dsp LAYOUT          	Makefile.win   README.platforms <span class="nb">test</span>
</span></span><span class="line"><span class="cl">build    configure  httpd.mak  libhttpd.dep  modules    README-win32.txt  VERSIONING
</span></span><span class="line"><span class="cl">BuildAll.dsp  configure.in   httpd.spec   libhttpd.dsp    NOTICE   ROADMAP
</span></span><span class="line"><span class="cl">BuildBin.dsp  docs            include      libhttpd.mak    NWGNUmakefile  server
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="httpd-编译参数">httpd 编译参数</h3>
<table>
<thead>
<tr>
<th>参数选项</th>
<th>注释说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>./configure</td>
<td>配置源代码树</td>
</tr>
<tr>
<td>–prefix=/usr/local/apache2</td>
<td>体系无关文件的顶级安装目录PREFIX，也就Apache的安装目录。</td>
</tr>
<tr>
<td>–enable-module=so [-enable-deflate]</td>
<td>打开so模块，so模块是用来提DSO支持的apache核心模块</td>
</tr>
<tr>
<td>–enable-deflate=shared  [-enable-expires]</td>
<td>支持网页压缩</td>
</tr>
<tr>
<td>–enable-expires=shared  [-enable-rewrite]</td>
<td>支持缓存过期控制</td>
</tr>
<tr>
<td>–enable-rewrite=shared</td>
<td>支持URL重写</td>
</tr>
<tr>
<td>–enable-cache</td>
<td>支持缓存</td>
</tr>
<tr>
<td>–enable-file-cache</td>
<td>支持文件缓存</td>
</tr>
<tr>
<td>–enable-mem-cache</td>
<td>支持记忆缓存</td>
</tr>
<tr>
<td>–enable-disk-cache</td>
<td>支持磁盘缓存</td>
</tr>
<tr>
<td>–enable-static-support</td>
<td>支持静态连接(默认为动态连接)</td>
</tr>
<tr>
<td>–enable-static-htpasswd</td>
<td>使用静态连接编译htpasswd–管理用于基本认证的用户文件</td>
</tr>
<tr>
<td>–enable-static-htdigest</td>
<td>使用静态连接编译htdigest–管理用于摘要认证的用户文件</td>
</tr>
<tr>
<td>–enable-static-rotatelogs</td>
<td>使用静态连接编译rotatelogs–滚动Apache日志的管道日志程序</td>
</tr>
<tr>
<td>–enable-static-logresolve</td>
<td>使用静态连接编译logresolve–解析Apache日志中的IP地址为主机名</td>
</tr>
<tr>
<td>–enable-static-htdbm</td>
<td>使用静态连接编译htdbm–操作DBM密码数据库</td>
</tr>
<tr>
<td>–enable-static-ab</td>
<td>使用静态连接编译ab–Apache服务器性能测试工具</td>
</tr>
<tr>
<td>–enable-static-checkgid</td>
<td>使用静态连接编译checkgid</td>
</tr>
<tr>
<td>–disable-cgid</td>
<td>禁止用一个外部CGI守护进程执行CGI脚本</td>
</tr>
<tr>
<td>–disable-cgi</td>
<td>禁止编译CGI版本的PHP</td>
</tr>
<tr>
<td>–disable-userdir</td>
<td>禁止用户从自己的主目录中提供页面</td>
</tr>
<tr>
<td>–with-mpm=worker</td>
<td>让apache以worker方式运行</td>
</tr>
<tr>
<td>–enable-authn-dbm=shared</td>
<td>对动态数据库进行操作。Rewrite时需要。</td>
</tr>
<tr>
<td><strong>以下是分门别类的更多参数注解，与上面的会有重复</strong></td>
<td></td>
</tr>
<tr>
<td><strong>用于apr的configure脚本的选项</strong>：</td>
<td></td>
</tr>
<tr>
<td><strong>可选特性</strong></td>
<td></td>
</tr>
<tr>
<td>&ndash;enable-experimental-libtool</td>
<td>启用试验性质的自定义libtool</td>
</tr>
<tr>
<td>&ndash;disable-libtool-lock</td>
<td>取消锁定(可能导致并行编译崩溃)</td>
</tr>
<tr>
<td>&ndash;enable-debug</td>
<td>启用调试编译，仅供开发人员使用。</td>
</tr>
<tr>
<td>&ndash;enable-maintainer-mode</td>
<td>打开调试和编译时警告，仅供开发人员使用。</td>
</tr>
<tr>
<td>&ndash;enable-profile</td>
<td>打开编译profiling(GCC)</td>
</tr>
<tr>
<td>&ndash;enable-pool-debug[=yes|no|verbose|verbose-alloc|lifetime|owner|all]</td>
<td>打开pools调试</td>
</tr>
<tr>
<td>&ndash;enable-malloc-debug</td>
<td>打开BeOS平台上的malloc_debug</td>
</tr>
<tr>
<td>&ndash;disable-lfs</td>
<td>在32-bit平台上禁用大文件支持(large file support)</td>
</tr>
<tr>
<td>&ndash;enable-nonportable-atomics</td>
<td>若只打算在486以上的CPU上运行Apache，那么使用该选项可以启用更加高效的基于互斥执行 的原子操作。</td>
</tr>
<tr>
<td>&ndash;enable-threads</td>
<td>启用线程支持在线程型的MPM上必须打开它</td>
</tr>
<tr>
<td>&ndash;disable-threads</td>
<td>禁用线程支持，如果不使用线程化的MPM，可以关闭它以减少系统开销。</td>
</tr>
<tr>
<td>&ndash;disable-dso</td>
<td>禁用DSO支持</td>
</tr>
<tr>
<td>&ndash;enable-other-child</td>
<td>启用可靠子进程支持</td>
</tr>
<tr>
<td>&ndash;disable-ipv6</td>
<td>禁用IPv6支持</td>
</tr>
<tr>
<td>*<strong>*<em>可选的额外程序包*</em>*</strong></td>
<td></td>
</tr>
<tr>
<td>&ndash;with-gnu-ld</td>
<td>指定C编译器使用GNU ld</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>&ndash;with-pic</td>
<td>只使PIC/non-PIC对象[默认为两者都使用]</td>
</tr>
<tr>
<td>&ndash;with-tags[=TAGS]</td>
<td>包含额外的配置</td>
</tr>
<tr>
<td>&ndash;with-installbuilddir=DIR</td>
<td>指定APR编译文件的存放位置(默认值为：’${datadir}/build’)</td>
</tr>
<tr>
<td>&ndash;without-libtool</td>
<td>禁止使用libtool连接库文件</td>
</tr>
<tr>
<td>&ndash;with-efence[=DIR]</td>
<td>指定Electric Fence的安装目录</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>&ndash;with-sendfile</td>
<td>强制使用sendfile(译者注：Linux2.4/2.6内核都支持)</td>
</tr>
<tr>
<td>&ndash;with-egd[=DIR]</td>
<td>使用EDG兼容的socket</td>
</tr>
<tr>
<td>&ndash;with-devrandom[=DEV]</td>
<td>指定随机设备[默认为：/dev/random]</td>
</tr>
<tr>
<td><em><strong>用于apr-util的configure脚本的选项</strong></em> ：</td>
<td></td>
</tr>
<tr>
<td><strong>可选的额外程序包</strong></td>
<td></td>
</tr>
<tr>
<td>&ndash;with-apr=PATH</td>
<td>指定APR的安装目录(–prefix选项值或apr-config的路径)</td>
</tr>
<tr>
<td>&ndash;with-ldap-include=PATH</td>
<td>ldap包含文件目录(带结尾斜线)</td>
</tr>
<tr>
<td>&ndash;with-ldap-lib=PATH</td>
<td>ldap库文件路径</td>
</tr>
<tr>
<td>&ndash;with-ldap=library</td>
<td>使用的ldap库</td>
</tr>
<tr>
<td>&ndash;with-dbm=DBM</td>
<td>选择使用的DBM类型DBM={sdbm,gdbm,ndbm,db,db1,db185,db2,db3,db4,db41,db42,db43,db44}</td>
</tr>
<tr>
<td>&ndash;with-gdbm=PATH</td>
<td>指定GDBM的位置</td>
</tr>
<tr>
<td>&ndash;with-ndbm=PATH</td>
<td>指定NDBM的位置</td>
</tr>
<tr>
<td>&ndash;with-berkeley-db=PATH</td>
<td>指定Berkeley DB的位置</td>
</tr>
<tr>
<td>&ndash;with-pgsql=PATH</td>
<td>指定PostgreSQL的位置</td>
</tr>
<tr>
<td>&ndash;with-mysql=PATH</td>
<td>参看INSTALL.MySQL文件的内容</td>
</tr>
<tr>
<td>&ndash;with-sqlite3=PATH</td>
<td>指定sqlite3的位置</td>
</tr>
<tr>
<td>&ndash;with-sqlite2=PATH</td>
<td>指定sqlite2的位置</td>
</tr>
<tr>
<td>&ndash;with-expat=PATH</td>
<td>指定Expat的位置或builtin</td>
</tr>
<tr>
<td>&ndash;with-iconv=PATH</td>
<td>iconv的安装目录</td>
</tr>
</tbody>
</table>
<p>关于 2.2 编译参数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"> ./configure <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --prefix<span class="o">=</span>/app/apache2.4.28 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-deflate <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-expires <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-headers <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-modules<span class="o">=</span>most <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-so <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --with-mpm<span class="o">=</span>worker <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-rewrite
</span></span></code></pre></td></tr></table>
</div>
</div><p>关于 2.4 编译参数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-BASH" data-lang="BASH"><span class="line"><span class="cl">./configure <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --prefix<span class="o">=</span>/app/apache-2.4.25.1 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-so <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-deflate<span class="o">=</span>shared <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-ssl<span class="o">=</span>shared <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-expires<span class="o">=</span>shared <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-headers<span class="o">=</span>shared <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-rewrite<span class="o">=</span>shared <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --enable-static-support <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --with-included-apr <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --with-mpm<span class="o">=</span>worker
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="开始安装httpd">开始安装httpd</h3>
<p>先安装依赖包</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum -y install <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	gcc <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	gcc-c++ <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	openssl-devel <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	zlib-devel <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	pcre-devel 
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="troubleshooting">Troubleshooting</h3>
<h4 id="configure-error-bundled-apr-requested-but-not-found">configure: error: Bundled APR requested but not found</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">configure: error: Bundled APR requested but not found at ./srclib/. Download and unpack the corresponding apr and apr-util packages to ./srclib/.
</span></span></code></pre></td></tr></table>
</div>
</div><p>编译时需要下载 <code>apr</code> 和 <code>apr-util</code> 解压到 <code>httpd/srclib/</code> 目录里 <a href="http://apr.apache.org/download">http://apr.apache.org/download</a></p>
<h4 id="error-pcre_dupnames-undeclared-first-use-in-this-function">error: &lsquo;PCRE_DUPNAMES&rsquo; undeclared (first use in this function)</h4>
<p>网上搜了下说是yum安装的pcre的版本太老了，不支持PCRE_DUPNAMES 和 PCRE_JAVASCRIPT_COMPAT 这样的PCRE特性。好吧，我去下个最新版的pcre来编译安装。</p>
<p>解决方法：编译安装pcre后，我们重新对httpd-2.4.9执行编译,这下就不会继续报错.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.35.tar.gz
</span></span><span class="line"><span class="cl">tar zxf pcre-8.35.tar.gz <span class="o">&amp;&amp;</span> <span class="nb">cd</span> pcre-8.35
</span></span><span class="line"><span class="cl">./configure
</span></span><span class="line"><span class="cl">make <span class="o">&amp;&amp;</span> make install
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="cannot-restore-segment-prot-after-reloc-permission-denied">cannot restore segment prot after reloc: Permission denied</h4>
<p>错误如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">httpd: Syntax error on line <span class="m">149</span> of /usr/local/apache/conf/httpd.conf: Cannot load modules/libphp5.so into server: /usr/local/apache/modules/libphp5.so: cannot restore segment prot after reloc: Permission denied
</span></span></code></pre></td></tr></table>
</div>
</div><p>解决方法：很明显的selinux的权限问题</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">chown -R apache:apache /usr/local/apache
</span></span><span class="line"><span class="cl">setenforce <span class="m">0</span>
</span></span><span class="line"><span class="cl">chcon -c -v -R -u system_u -r object_r -t textrel_shlib_t /usr/local/apache/modules/libphp5.so
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="configure-warning-openssl-version-is-too-old">configure: WARNING: OpenSSL version is too old</h4>
<p>错误现象：CentOS 6.x</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">checking <span class="k">for</span> OpenSSL version &gt;<span class="o">=</span> 0.9.8a... FAILED
</span></span><span class="line"><span class="cl">configure: WARNING: OpenSSL version is too old
</span></span><span class="line"><span class="cl">no
</span></span><span class="line"><span class="cl">checking whether to <span class="nb">enable</span> mod_ssl... configure: error: mod_ssl has been requested but can not be built due to prerequisite failures
</span></span></code></pre></td></tr></table>
</div>
</div><p>解决方法：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum install openssl openssl-devel
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="zlib-location-not-found">zlib location&hellip; not found</h4>
<p>错误现象：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">checking <span class="k">for</span> zlib location... not found
</span></span><span class="line"><span class="cl">checking whether to <span class="nb">enable</span> mod_deflate... configure: error: mod_deflate has been requested but can not be built due to prerequisite failures
</span></span></code></pre></td></tr></table>
</div>
</div><p>解决方法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum install zlib zlib-devel -y
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="no-acceptable-c-compiler-found-in-path">no acceptable C compiler found in $PATH</h4>
<p>错误现象：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">configure: error: no acceptable C compiler found in <span class="nv">$PATH</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>解决方法：gcc工具没安装，或开发工具包没安装 [CentOS 6.x]</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum groupinstall <span class="s2">&#34;Development tools&#34;</span> -y
</span></span><span class="line"><span class="cl">yum install gcc -y
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="httpd-could-not-reliably-determine-the-servers-fully-qualified-domain-name">httpd: Could not reliably determine the server&rsquo;s fully qualified domain name,</h4>
<p>错误现象：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./bin/apachectl graceful
</span></span><span class="line"><span class="cl">httpd: apr_sockaddr_info_get<span class="o">()</span> failed <span class="k">for</span> web-lamp01
</span></span><span class="line"><span class="cl">httpd: Could not reliably determine the server<span class="err">&#39;</span>s fully qualified domain name, using 127.0.0.1 <span class="k">for</span> ServerName
</span></span></code></pre></td></tr></table>
</div>
</div><p>错误原因：找不到完整的 <code>fqdn www.etiantian.com</code> 为一个完整的 fqdn 使用 127.0.0.1 替代</p>
<p>解决方法：在 <code>httpd.conf</code> 如果没有注册的DNS域名，用IP地址替换它</p>
<h3 id="启动参数">启动参数</h3>
<p>apachectl参数</p>
<table>
<thead>
<tr>
<th>选项参数</th>
<th>注释说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>configtest</td>
<td>检查设置文件中的语法是否正确。</td>
</tr>
<tr>
<td>fullstatus</td>
<td>显示服务器完整的状态信息。</td>
</tr>
<tr>
<td>graceful</td>
<td>重新启动Apache服务器，但不会中断原有的连接。</td>
</tr>
<tr>
<td>help</td>
<td>显示帮助信息。</td>
</tr>
<tr>
<td>restart</td>
<td>重新启动Apache服务器。</td>
</tr>
<tr>
<td>start</td>
<td>启动Apache服务器。</td>
</tr>
<tr>
<td>status</td>
<td>显示服务器摘要的状态信息。</td>
</tr>
<tr>
<td>stop</td>
<td>停止Apache服务器。</td>
</tr>
</tbody>
</table>
<p>httpd参数</p>
<table>
<thead>
<tr>
<th>参数选项</th>
<th>注释说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-c</td>
<td>&lt;httpd指令&gt;  在读取配置文件前，先执行选项中的指令。</td>
</tr>
<tr>
<td>-C</td>
<td>&lt;httpd指令&gt;  在读取配置文件后，再执行选项中的指令。</td>
</tr>
<tr>
<td>-d</td>
<td>&lt;服务器根目录&gt;  指定服务器的根目录。</td>
</tr>
<tr>
<td>-D</td>
<td>&lt;设定文件参数&gt;  指定要传入配置文件的参数。</td>
</tr>
<tr>
<td>-f</td>
<td>&lt;设定文件&gt;  指定配置文件。</td>
</tr>
<tr>
<td>-h</td>
<td>显示帮助。</td>
</tr>
<tr>
<td>-l</td>
<td>显示服务器编译时所包含的模块。</td>
</tr>
<tr>
<td>-L</td>
<td>显示httpd指令的说明。</td>
</tr>
<tr>
<td>-S</td>
<td>显示配置文件中的设定。</td>
</tr>
<tr>
<td>-t</td>
<td>测试配置文件的语法是否正确。</td>
</tr>
<tr>
<td>-v</td>
<td>显示版本信息。</td>
</tr>
<tr>
<td>-V</td>
<td>显示版本信息以及建立环境。</td>
</tr>
<tr>
<td>-X</td>
<td>以单一程序的方式来启动服务器。</td>
</tr>
</tbody>
</table>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ /app/apache/bin/apachectl start
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ lsof -i:80
</span></span><span class="line"><span class="cl">COMMAND  PID   USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
</span></span><span class="line"><span class="cl">httpd   <span class="m">5871</span>   root    4u  IPv6  <span class="m">69297</span>      0t0  TCP *:http <span class="o">(</span>LISTEN<span class="o">)</span>
</span></span><span class="line"><span class="cl">httpd   <span class="m">5873</span> daemon    4u  IPv6  <span class="m">69297</span>      0t0  TCP *:http <span class="o">(</span>LISTEN<span class="o">)</span>
</span></span><span class="line"><span class="cl">httpd   <span class="m">5874</span> daemon    4u  IPv6  <span class="m">69297</span>      0t0  TCP *:http <span class="o">(</span>LISTEN<span class="o">)</span>
</span></span><span class="line"><span class="cl">httpd   <span class="m">5875</span> daemon    4u  IPv6  <span class="m">69297</span>      0t0  TCP *:http <span class="o">(</span>LISTEN<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ ps -ef<span class="p">|</span>grep httpd
</span></span><span class="line"><span class="cl">root      <span class="m">5871</span>     <span class="m">1</span>  <span class="m">0</span> 03:12 ?        00:00:00 /app/apache2.2.27/bin/httpd -k start
</span></span><span class="line"><span class="cl">daemon    <span class="m">5872</span>  <span class="m">5871</span>  <span class="m">0</span> 03:12 ?        00:00:00 /app/apache2.2.27/bin/httpd -k start
</span></span><span class="line"><span class="cl">daemon    <span class="m">5873</span>  <span class="m">5871</span>  <span class="m">0</span> 03:12 ?        00:00:00 /app/apache2.2.27/bin/httpd -k start
</span></span><span class="line"><span class="cl">daemon    <span class="m">5874</span>  <span class="m">5871</span>  <span class="m">0</span> 03:12 ?        00:00:00 /app/apache2.2.27/bin/httpd -k start
</span></span><span class="line"><span class="cl">daemon    <span class="m">5875</span>  <span class="m">5871</span>  <span class="m">0</span> 03:12 ?        00:00:00 /app/apache2.2.27/bin/httpd -k start
</span></span><span class="line"><span class="cl">root      <span class="m">5960</span>  <span class="m">2056</span>  <span class="m">0</span> 03:12 pts/0    00:00:00 grep --color<span class="o">=</span>auto httpd
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="httpd目录结构">httpd目录结构</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ tree -L <span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── bin <span class="c1">#这是apache命令目录，如apache启动命令apachectl</span>
</span></span><span class="line"><span class="cl">      ├── ab <span class="c1">#压力测试工具 同类软件还有jmeter loadrunner webench等</span>
</span></span><span class="line"><span class="cl">  ├── apachectl  <span class="c1">#apache启动命令，需重点掌握，apachectl是一个脚本</span>
</span></span><span class="line"><span class="cl">      ├── apxs <span class="c1"># apxs是一个为Apache HTTP服务器编译和安装扩展模块的工具，在进行DOS当时编译模块时会用到 </span>
</span></span><span class="line"><span class="cl">      ├── htcacheclean <span class="c1">#这是清理磁盘缓冲区的命令，需要在编译时指定相关参数才可以使用，一般很少用</span>
</span></span><span class="line"><span class="cl">      ├── htpasswd <span class="c1"># 建立和更新基本认证文件，如：配置nagios等监控服务时会用到</span>
</span></span><span class="line"><span class="cl">      ├── httpd <span class="c1">#httpd为apache的控制命令程序，apachectl执行时会调用httpd</span>
</span></span><span class="line"><span class="cl">      └── rotatelogs <span class="c1">#apache自带的日志轮询命令，其他未使用过的略过未提级，以便大家学习主要的命令</span>
</span></span><span class="line"><span class="cl">├── build
</span></span><span class="line"><span class="cl">├── cgi-bin
</span></span><span class="line"><span class="cl">├── conf <span class="c1"># apache所有配置文件的目录</span>
</span></span><span class="line"><span class="cl">  ├── extra <span class="c1"># 额外的apache配置目录，这个目录里的文件我们会经常访问修改，如：httpd-vhosts.conf默认就在此目录</span>
</span></span><span class="line"><span class="cl">  ├── httpd.conf <span class="c1">#apache的主配置文件，这个文件我们会经常访问修改，其中的每一行的参数作用都应该闹明白</span>
</span></span><span class="line"><span class="cl">  ├── magic
</span></span><span class="line"><span class="cl">  ├── mime.types
</span></span><span class="line"><span class="cl">  └── original
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">├── error
</span></span><span class="line"><span class="cl">├── htdocs <span class="c1"># 默认的apache的站点目录</span>
</span></span><span class="line"><span class="cl">├── icons
</span></span><span class="line"><span class="cl">├── include
</span></span><span class="line"><span class="cl">├── lib
</span></span><span class="line"><span class="cl">├── logs <span class="c1"># 这个时apache的日志默认路径，包括错误日志及访问日志</span>
</span></span><span class="line"><span class="cl">  ├── access_log <span class="c1">#这是apache的默认访问日志</span>
</span></span><span class="line"><span class="cl">  ├── cgisock.5871
</span></span><span class="line"><span class="cl">  ├── error_log <span class="c1"># apache的错误日志</span>
</span></span><span class="line"><span class="cl">  └── httpd.pid <span class="c1"># httpd的pid文件，httpd进程启动后，会把所有的进程号ID写到此文件</span>
</span></span><span class="line"><span class="cl">├── man
</span></span><span class="line"><span class="cl">├── manual
</span></span><span class="line"><span class="cl">└── modules <span class="c1"># apache模块的目录，如memcache</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="httpd主配置文件说明">httpd主配置文件说明</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">grep -Ev <span class="s2">&#34;#|^</span>$<span class="s2">&#34;</span> httpd.conf &gt;httpd.conf.ori
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 服务的根目录 软件安装到哪</span>
</span></span><span class="line"><span class="cl">ServerRoot <span class="s2">&#34;/app/apache2.2.27&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># web服务监听的端口 监听的ip默认为本机的所有ip地址 listen可以为多个，也可以指定ip</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 没有listen端口是开启不了的</span>
</span></span><span class="line"><span class="cl">Listen <span class="m">80</span>
</span></span><span class="line"><span class="cl">Listen <span class="m">8000</span>
</span></span><span class="line"><span class="cl">Listen 192.168.59.1:90 <span class="c1"># 如不加默认为所有</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;IfModule !mpm_netware_module&gt;
</span></span><span class="line"><span class="cl">&lt;IfModule !mpm_winnt_module&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">User daemon <span class="c1"># 编译安装软件默认用户是daemon 用户</span>
</span></span><span class="line"><span class="cl">Group daemon <span class="c1">#组</span>
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#管理员的邮箱 当前网站出问题了，会在页面显示</span>
</span></span><span class="line"><span class="cl">ServerAdmin you@example.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 默认的站点目录</span>
</span></span><span class="line"><span class="cl">DocumentRoot <span class="s2">&#34;/app/apache2.2.27/htdocs&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 权限控制 表示根目录拒绝其他人访问</span>
</span></span><span class="line"><span class="cl">&lt;Directory /&gt;
</span></span><span class="line"><span class="cl">    Options FollowSymLinks <span class="c1">#带符号连接</span>
</span></span><span class="line"><span class="cl">    AllowOverride None <span class="c1">#禁止相关的功能 如.htaccess</span>
</span></span><span class="line"><span class="cl">    Order deny,allow <span class="c1">#不让任何人访问这个目录</span>
</span></span><span class="line"><span class="cl">    Deny from all 
</span></span><span class="line"><span class="cl">&lt;/Directory&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 如果新增加一个站点目录必须增加这6行，否则网站打不开</span>
</span></span><span class="line"><span class="cl">&lt;Directory <span class="s2">&#34;/app/apache2.2.27/htdocs&#34;</span>&gt;
</span></span><span class="line"><span class="cl">    Options Indexes FollowSymLinks <span class="c1">#Indexs 没有index展示所有目录</span>
</span></span><span class="line"><span class="cl">    AllowOverride None
</span></span><span class="line"><span class="cl">    Order allow,deny
</span></span><span class="line"><span class="cl">    Allow from all
</span></span><span class="line"><span class="cl">&lt;/Directory&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 指定访问的首页 如果有多个用空格分开</span>
</span></span><span class="line"><span class="cl">&lt;IfModule dir_module&gt;
</span></span><span class="line"><span class="cl">    DirectoryIndex index.html index.php
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;FilesMatch <span class="s2">&#34;^\.ht&#34;</span>&gt;
</span></span><span class="line"><span class="cl">    Order allow,deny
</span></span><span class="line"><span class="cl">    Deny from all
</span></span><span class="line"><span class="cl">    Satisfy All
</span></span><span class="line"><span class="cl">&lt;/FilesMatch&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#错误日志</span>
</span></span><span class="line"><span class="cl">ErrorLog <span class="s2">&#34;logs/error_log&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#日志级别 警告</span>
</span></span><span class="line"><span class="cl">LogLevel warn
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#访问日志的类型</span>
</span></span><span class="line"><span class="cl">&lt;IfModule log_config_module&gt;
</span></span><span class="line"><span class="cl">    LogFormat <span class="s2">&#34;%h %l %u %t \&#34;%r\&#34; %&gt;s %b \&#34;%{Referer}i\&#34; \&#34;%{User-Agent}i\&#34;&#34;</span> combined
</span></span><span class="line"><span class="cl">    LogFormat <span class="s2">&#34;%h %l %u %t \&#34;%r\&#34; %&gt;s %b&#34;</span> common
</span></span><span class="line"><span class="cl">    &lt;IfModule logio_module&gt;
</span></span><span class="line"><span class="cl">      LogFormat <span class="s2">&#34;%h %l %u %t \&#34;%r\&#34; %&gt;s %b \&#34;%{Referer}i\&#34; \&#34;%{User-Agent}i\&#34; %I %O&#34;</span> combinedio
</span></span><span class="line"><span class="cl">    &lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">    CustomLog <span class="s2">&#34;logs/access_log&#34;</span> common
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># cgi的配置 现在已经过时了，工作中应该删掉</span>
</span></span><span class="line"><span class="cl">&lt;IfModule alias_module&gt;
</span></span><span class="line"><span class="cl">    ScriptAlias /cgi-bin/ <span class="s2">&#34;/app/apache2.2.27/cgi-bin/&#34;</span>
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">&lt;IfModule cgid_module&gt;
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">&lt;Directory <span class="s2">&#34;/app/apache2.2.27/cgi-bin&#34;</span>&gt;
</span></span><span class="line"><span class="cl">    AllowOverride None
</span></span><span class="line"><span class="cl">    Options None
</span></span><span class="line"><span class="cl">    Order allow,deny
</span></span><span class="line"><span class="cl">    Allow from all
</span></span><span class="line"><span class="cl">&lt;/Directory&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 缺省的类型</span>
</span></span><span class="line"><span class="cl">DefaultType text/plain
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#添加的类型，对什么类型做什么控制</span>
</span></span><span class="line"><span class="cl">&lt;IfModule mime_module&gt;
</span></span><span class="line"><span class="cl">    TypesConfig conf/mime.types
</span></span><span class="line"><span class="cl">     AddType application/x-compress .Z
</span></span><span class="line"><span class="cl">    AddType application/x-gzip .gz .tgz
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">&lt;IfModule ssl_module&gt;
</span></span><span class="line"><span class="cl">SSLRandomSeed startup <span class="nb">builtin</span>
</span></span><span class="line"><span class="cl">SSLRandomSeed connect <span class="nb">builtin</span>
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="httpd的扩展配置文件">httpd的扩展配置文件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ll
</span></span><span class="line"><span class="cl">总用量 <span class="m">56</span>
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">2843</span> 4月   <span class="m">8</span> 03:03 httpd-autoindex.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">1713</span> 4月   <span class="m">8</span> 03:03 httpd-dav.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">2344</span> 4月   <span class="m">8</span> 03:03 httpd-default.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">1103</span> 4月   <span class="m">8</span> 03:03 httpd-info.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">5078</span> 4月   <span class="m">8</span> 03:03 httpd-languages.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root   <span class="m">933</span> 4月   <span class="m">8</span> 03:03 httpd-manual.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">3789</span> 4月   <span class="m">8</span> 03:03 httpd-mpm.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">2183</span> 4月   <span class="m">8</span> 03:03 httpd-multilang-errordoc.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root <span class="m">11378</span> 4月   <span class="m">8</span> 03:03 httpd-ssl.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root   <span class="m">817</span> 4月   <span class="m">8</span> 03:03 httpd-userdir.conf
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">1491</span> 4月   <span class="m">8</span> 03:03 httpd-vhosts.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>mpm</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">--with-mpm<span class="o">=</span>worker <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>&lt;IfModule mpm_prefork_module&gt;
</span></span><span class="line"><span class="cl">    StartServers          <span class="m">5</span>
</span></span><span class="line"><span class="cl">    MinSpareServers       <span class="m">5</span>
</span></span><span class="line"><span class="cl">    MaxSpareServers      <span class="m">10</span>
</span></span><span class="line"><span class="cl">    MaxClients          <span class="m">150</span>
</span></span><span class="line"><span class="cl">    MaxRequestsPerChild   <span class="m">0</span>
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span><span class="line"><span class="cl"><span class="c1"># 如果指定了worker就是woker，否则是prefork</span>
</span></span><span class="line"><span class="cl">&lt;IfModule mpm_worker_module&gt;
</span></span><span class="line"><span class="cl">    StartServers          <span class="m">2</span>
</span></span><span class="line"><span class="cl">    MaxClients          <span class="m">150</span>
</span></span><span class="line"><span class="cl">    MinSpareThreads      <span class="m">25</span>
</span></span><span class="line"><span class="cl">    MaxSpareThreads      <span class="m">75</span>
</span></span><span class="line"><span class="cl">    ThreadsPerChild      <span class="m">25</span>
</span></span><span class="line"><span class="cl">    MaxRequestsPerChild   <span class="m">0</span>
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>defalut配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ grep -Ev <span class="s2">&#34;#|^</span>$<span class="s2">&#34;</span> httpd-default.conf 
</span></span><span class="line"><span class="cl"><span class="c1"># 连接超时</span>
</span></span><span class="line"><span class="cl">Timeout <span class="m">300</span>
</span></span><span class="line"><span class="cl"><span class="c1">#保持连接的状态</span>
</span></span><span class="line"><span class="cl">KeepAlive On
</span></span><span class="line"><span class="cl"><span class="c1">#最大接受多少个永久连接</span>
</span></span><span class="line"><span class="cl">MaxKeepAliveRequests <span class="m">100</span>
</span></span><span class="line"><span class="cl"><span class="c1">#在同一个连接上，等待下一个请求的时间</span>
</span></span><span class="line"><span class="cl">KeepAliveTimeout <span class="m">5</span>
</span></span><span class="line"><span class="cl">UseCanonicalName Off
</span></span><span class="line"><span class="cl"><span class="c1">#将伪静态的语法写在这个里面</span>
</span></span><span class="line"><span class="cl">AccessFileName .htaccess
</span></span><span class="line"><span class="cl"><span class="c1">#隐藏apache版本号，不同意被攻击</span>
</span></span><span class="line"><span class="cl">ServerTokens Full
</span></span><span class="line"><span class="cl">ServerSignature On
</span></span><span class="line"><span class="cl">HostnameLookups Off
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="虚拟主机">虚拟主机</h2>
<p>所谓基于 ”x“ 的虚拟主机，就是靠 ”x“ 来区分不同的站点。支持各种混合，N多个虚拟主机</p>
<h3 id="基于域名的虚拟主机">基于域名的虚拟主机★★★★★</h3>
<p>建立三个站点</p>
<ul>
<li><code>www.etiantian.com</code>	 &mdash;&mdash;    <code>/var/html/www</code></li>
<li><code>blog.etiantian.com</code>   &mdash;&mdash;   <code>/var/html/blog</code></li>
<li><code>bbs.etiantian.com</code>     &mdash;&mdash;  <code>/var/html/bbs</code></li>
</ul>
<p>步骤1：在 <code>httpd.conf</code> 中打开 <code>Include conf/extra/httpd-vhosts.conf</code></p>
<p>步骤2：在 <code>extra</code> 中的 <code>vhost </code> 中添加三个虚拟主机</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">    ServerAdmin test.com@gmail.com
</span></span><span class="line"><span class="cl">    DocumentRoot &#34;/var/html/www&#34;
</span></span><span class="line"><span class="cl">    ServerName www.etiantian.com
</span></span><span class="line"><span class="cl">    ErrorLog &#34;logs/www_error_log&#34;
</span></span><span class="line"><span class="cl">    CustomLog &#34;logs/www_access_log&#34; common
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">    ServerAdmin test.com@gmail.com
</span></span><span class="line"><span class="cl">    DocumentRoot &#34;/var/html/blog&#34;
</span></span><span class="line"><span class="cl">    ServerName blog.etiantian.com
</span></span><span class="line"><span class="cl">    ErrorLog &#34;logs/blog_error_log&#34;
</span></span><span class="line"><span class="cl">    CustomLog &#34;logs/blog_access_log&#34; common
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">    ServerAdmin test.com@gmail.com
</span></span><span class="line"><span class="cl">    DocumentRoot &#34;/var/html/bbs&#34;
</span></span><span class="line"><span class="cl">    ServerName bbs.etiantian.com
</span></span><span class="line"><span class="cl">    ErrorLog &#34;logs/bbs_error_log&#34;
</span></span><span class="line"><span class="cl">    CustomLog &#34;logs/bbs_access_log&#34; common
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>步骤3：在主配置文件，或在 <code>&lt;VirtualHost&gt;</code> 里配置权限</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;Directory &#34;/var/html&#34;&gt;
</span></span><span class="line"><span class="cl">    Options FollowSymLinks
</span></span><span class="line"><span class="cl">    AllowOverride None
</span></span><span class="line"><span class="cl">    Order allow,deny
</span></span><span class="line"><span class="cl">    Allow from all
</span></span><span class="line"><span class="cl">&lt;/Directory&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果配置为 <code>Options Indexes FollowSymLinks</code> 则显示为下图所示</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202162523234.png" alt="image-20221202162523234"  /></p>
<p>如果配置为 <code>Options -Indexes FollowSymLinks</code> 则显示为下图所示</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/wps65.tmp.jpg" alt="img"  /></p>
<h3 id="基于端口的虚拟主机">基于端口的虚拟主机</h3>
<p>一般来讲是内部网站</p>
<ul>
<li>优点：安全一些，别人找不到</li>
</ul>
<p>步骤1：在 <code>httpd.conf</code> 中增加监听端口</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Listen 80
</span></span><span class="line"><span class="cl">Listen 8000
</span></span><span class="line"><span class="cl">Listen 9000
</span></span></code></pre></td></tr></table>
</div>
</div><p>步骤1：在 <code>vhost</code> 文件中增加</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">NameVirtualHost *:80
</span></span><span class="line"><span class="cl">NameVirtualHost *:8000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;VirtualHost *:8000&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202162815605.png" alt="image-20221202162815605"  /></p>
<h3 id="基于ip的虚拟主机">基于IP的虚拟主机</h3>
<p>步骤1：配置别名ip</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ifconfig eth0:0 192.168.59.140/24
</span></span></code></pre></td></tr></table>
</div>
</div><p>步骤2：1.修改 <code>vhost</code> 文件虚拟主机配置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;VirtualHost 192.168.59.140:80&gt;
</span></span><span class="line"><span class="cl">    ServerAdmin test.com@gmail.com
</span></span><span class="line"><span class="cl">    DocumentRoot &#34;/var/html/blog&#34;
</span></span><span class="line"><span class="cl">    ServerName 192.168.59.140
</span></span><span class="line"><span class="cl">    ErrorLog &#34;logs/blog_error_log&#34;
</span></span><span class="line"><span class="cl">    CustomLog &#34;logs/blog_access_log&#34; common
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="混合虚拟主机">混合虚拟主机</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;VirtualHost 192.168.59.140:900&gt;
</span></span><span class="line"><span class="cl">    ServerAdmin test.com@gmail.com
</span></span><span class="line"><span class="cl">    DocumentRoot &#34;/var/html/blog&#34;
</span></span><span class="line"><span class="cl">    ServerName 192.168.59.140
</span></span><span class="line"><span class="cl">    ErrorLog &#34;logs/blog_error_log&#34;
</span></span><span class="line"><span class="cl">    CustomLog &#34;logs/blog_access_log&#34; common
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="日志格式">日志格式</h2>
<ul>
<li>通用日志格式Common Log Format</li>
<li>组合日志格式Combinded Log Format</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">LogFormat &#34;%h %l %u %t \&#34;%r\&#34; %&gt;s %b \&#34;%{Referer}i\&#34; \&#34;%{User-Agent}i\&#34;&#34; combined
</span></span><span class="line"><span class="cl">LogFormat &#34;%h %l %u %t \&#34;%r\&#34; %&gt;s %b&#34; common
</span></span></code></pre></td></tr></table>
</div>
</div><p>如何使用combined或common呢？</p>
<p>答：在虚拟主机配置中更改格式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">    ServerAdmin test.com@gmail.com
</span></span><span class="line"><span class="cl">    DocumentRoot &#34;/var/html/www&#34;
</span></span><span class="line"><span class="cl">    ServerName www.etiantian.com
</span></span><span class="line"><span class="cl">    ErrorLog &#34;logs/www_error_log&#34;
</span></span><span class="line"><span class="cl">    CustomLog &#34;logs/www_access_log&#34; common/combind
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="日志轮询">日志轮询</h3>
<ul>
<li>rotatelog</li>
<li>cronolog ☆☆☆</li>
</ul>
<p>安装 cronolog</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./configure
</span></span><span class="line"><span class="cl">make  
</span></span><span class="line"><span class="cl">make install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ which cronolog
</span></span><span class="line"><span class="cl">/usr/local/sbin/cronolog
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>如果用cronolog轮询的的话最好用全路径</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">CustomLog <span class="s2">&#34;|/usr/local/sbin/cronolog  /app/logs/access_bbs_%Y%m%d.log&#34;</span> combined
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ mkdir /app/logs -p
</span></span><span class="line"><span class="cl">$ ../bin/apachectl graceful
</span></span></code></pre></td></tr></table>
</div>
</div><p>日志轮询除了可以使用年月日还可以使用周</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">CustomLog <span class="s2">&#34;|/usr/local/sbin/cronolog  /app/logs/access_bbs_%w.log&#34;</span> combined
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>时间格式串</strong>：</p>
<table>
<thead>
<tr>
<th>时间格式串</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>%H</td>
<td>24小时制小时(00..23)</td>
</tr>
<tr>
<td>%I</td>
<td>12小时制小时(01..12)</td>
</tr>
<tr>
<td>%p</td>
<td>本地AM/PM指示符</td>
</tr>
<tr>
<td>%M</td>
<td>分钟(00..59)</td>
</tr>
<tr>
<td>%S</td>
<td>秒(00..61)</td>
</tr>
<tr>
<td>%X</td>
<td>本地时间(e.g.:“15:12:47″)</td>
</tr>
<tr>
<td>%Z</td>
<td>时区(e.g.GMT)，如果不能检测出时区，值为空</td>
</tr>
<tr>
<td></td>
<td><strong>日期格式串</strong></td>
</tr>
<tr>
<td>%a</td>
<td>本地简短星期名(e.g.: Sun..Sat)</td>
</tr>
<tr>
<td>%A</td>
<td>本地完整星期名(e.g.: Sunday .. Saturday)</td>
</tr>
<tr>
<td>%b</td>
<td>本地简短月名(e.g.: Jan .. Dec)</td>
</tr>
<tr>
<td>%B</td>
<td>本地完整月名(e.g.: January .. December)</td>
</tr>
<tr>
<td>%c</td>
<td>本地日期与时间(e.g.: “Sun Dec 15 14:12:47 GMT 1996″)</td>
</tr>
<tr>
<td>%d</td>
<td>一月中的第几日(01 .. 31)</td>
</tr>
<tr>
<td>%j</td>
<td>一年中的第几天 (001 .. 366)</td>
</tr>
<tr>
<td>%m</td>
<td>月名的数字表示 (01 .. 12)</td>
</tr>
<tr>
<td>%U</td>
<td>一年中以星期日为每周第一天计算的星期数(00..53, 第一周包括新年的第一个星期日)</td>
</tr>
<tr>
<td>%W</td>
<td>一年中以星期一为每周第一天计算的星期数(00..53, 第一周包括新年的第一个星期一)</td>
</tr>
<tr>
<td>%w</td>
<td>星期名的数字表示 (0 .. 6, 0为星期日)</td>
</tr>
<tr>
<td>%x</td>
<td>本地日期 (e.g. 今天在北京是: “15/12/96″)</td>
</tr>
<tr>
<td>%y</td>
<td>不带世纪的年(00 .. 99)</td>
</tr>
<tr>
<td>%Y</td>
<td>带世纪的年(1970 .. 2038)</td>
</tr>
</tbody>
</table>
<p><strong>错误写法</strong>：</p>
<p><strong>提示：cronolog轮询日志的正确写法，被轮询的日志路径要写全路径</strong></p>
<p><strong>按天轮询（生产环境常见用法，推荐使用）</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 错误写法</span>
</span></span><span class="line"><span class="cl">CustomLog <span class="s2">&#34;|usr/local/sbin/cronolog logs/access_www_%w.log&#34;</span> combined
</span></span><span class="line"><span class="cl"><span class="c1"># 正确写法</span>
</span></span><span class="line"><span class="cl">CustomLog <span class="s2">&#34;|usr/local/sbin/cronolog /app/logs/access_www_%Y%m%d.log&#34;</span> combined
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>提示：这是大多数网站的常规配置方法（按天记录日志，日志不会自动覆盖）</strong></p>
<p><strong>按小时轮询（生产环境较常见用法）</strong>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 按小时轮询（生产环境较常见用法）</span>
</span></span><span class="line"><span class="cl">CustomLog <span class="s2">&#34;|usr/local/sbin/cronolog /app/logs/access_www_%Y%m%d%H.log&#34;</span> combined
</span></span><span class="line"><span class="cl"><span class="c1"># 按天轮询（生产环境较常见用法）</span>
</span></span><span class="line"><span class="cl">CustomLog <span class="s2">&#34;|usr/local/sbin/cronolog /app/logs/access_www_%Y%m%d.log&#34;</span> combined
</span></span></code></pre></td></tr></table>
</div>
</div><p>完整配置如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">    ServerAdmin test.com@gmail.com
</span></span><span class="line"><span class="cl">    DocumentRoot <span class="s2">&#34;/var/html/blog&#34;</span>
</span></span><span class="line"><span class="cl">    ServerName blog.etiantian.com
</span></span><span class="line"><span class="cl">    ErrorLog <span class="s2">&#34;logs/blog_error_log&#34;</span>
</span></span><span class="line"><span class="cl">    CustomLog <span class="s2">&#34;|/usr/local/sbin/cronolog  /app/logs/access_blog_%w.log&#34;</span> combined
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>配置定时任务</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 创建脚本目录</span>
</span></span><span class="line"><span class="cl">mkdir /server/script/web/ -p
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 创建脚本文件</span>
</span></span><span class="line"><span class="cl">touch /server/script/web/apache_log.sh
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 编辑脚本内容</span>
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /app/apache/logs
</span></span><span class="line"><span class="cl">mv www_access_log /app/logs/www_access_<span class="k">$(</span>date +%F -d <span class="s1">&#39;-1day&#39;</span><span class="k">)</span>.log
</span></span><span class="line"><span class="cl">www_access_log
</span></span><span class="line"><span class="cl">&gt;www_access_log
</span></span><span class="line"><span class="cl">/app/apache/bin/apachectl graceful
</span></span><span class="line"><span class="cl"><span class="c1"># 添加定时任务</span>
</span></span><span class="line"><span class="cl"><span class="m">00</span> <span class="m">00</span> * * * /bin/sh /server/script/web/apache_log.sh &gt;/dev/null 2&gt;<span class="p">&amp;</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 测试脚本是否可执行成功</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 如果脚本没有执行权限</span>
</span></span><span class="line"><span class="cl">$ /server/script/web/apache_log.sh         
</span></span><span class="line"><span class="cl">-bash: /server/script/web/apache_log.sh: 权限不够
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ /bin/sh /server/script/web/apache_log.sh
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看执行结果</span>
</span></span><span class="line"><span class="cl">$ ll
</span></span><span class="line"><span class="cl">总用量 <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 将时间设置为0时</span>
</span></span><span class="line"><span class="cl">$ date -s <span class="s1">&#39;2017-04-20 23:59:00&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 这时候时23:59查看当天日志是有内容的，并且/app/logs/下面没有文件</span>
</span></span><span class="line"><span class="cl">$ cat /app/apache/logs/www_access_log 
</span></span><span class="line"><span class="cl">192.168.59.1 - - <span class="o">[</span>20/Apr/2017:23:59:19 +0800<span class="o">]</span> <span class="s2">&#34;GET / HTTP/1.1&#34;</span> <span class="m">304</span> - <span class="s2">&#34;-&#34;</span> <span class="s2">&#34;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 0时这个时候发现目录生成新日志文件了</span>
</span></span><span class="line"><span class="cl">$ ll
</span></span><span class="line"><span class="cl">总用量 <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root <span class="m">153</span> 4月  <span class="m">20</span> 23:59 www_access_2017-04-21.log
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="不记录日志">不记录日志</h3>
<p>正如下列配置所示</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;FilesMatch &#39;\. (css|js|gif|jpg|ico|swf|png)&#39;&gt;
</span></span><span class="line"><span class="cl"> 	SetEnv IMAG 1
</span></span><span class="line"><span class="cl">&lt;/FilesMatch&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>实际日志配置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">CustomLog &#34;|/usr/local/sbin/cronolog  /app/logs/access_bbs_%w.log&#34; combined evn=!IMAG
</span></span></code></pre></td></tr></table>
</div>
</div><p>查询日志</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">awk &#39;{print $1}&#39; www-access_2014-09-18log |sort|uniq -c|sort -rn -k1|head -10
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="隐藏httpd版本号">隐藏httpd版本号</h2>
<p>步骤1：编译前隐藏版本信息</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat /home/tools/httpd-2.2.27/include/ap_release.h 
</span></span></code></pre></td></tr></table>
</div>
</div><p>找到 <code>#define AP_SERVER_BASEPRODUCT &quot;Apache&quot;</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#define AP_SERVER_BASEPRODUCT &#34;Apache&#34;
</span></span><span class="line"><span class="cl"># 修改为
</span></span><span class="line"><span class="cl">#define AP_SERVER_BASEPRODUCT &#34;Microsoft-IIS/5.0&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#define AP_SERVER_BASEVENDOR &#34;Apache Software Foundation&#34;
</span></span><span class="line"><span class="cl">#define AP_SERVER_BASEPROJECT &#34;Apache HTTP Server&#34;
</span></span><span class="line"><span class="cl">#define AP_SERVER_BASEPRODUCT &#34;Apache&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#define AP_SERVER_MAJORVERSION_NUMBER 2
</span></span><span class="line"><span class="cl">#define AP_SERVER_MINORVERSION_NUMBER 2
</span></span><span class="line"><span class="cl">#define AP_SERVER_PATCHLEVEL_NUMBER   27
</span></span><span class="line"><span class="cl">#define AP_SERVER_DEVBUILD_BOOLEAN    0
</span></span></code></pre></td></tr></table>
</div>
</div><p>找到 <code>cat /home/tools/httpd-2.2.27/os/unix/os.h</code>，修改 <code>#define PLATFORM &quot;Unix&quot; 修改为 #define PLATFORM &quot;Win32&quot; </code></p>
<p>**步骤3：最后修改 /etc/httpd/conf/httpd.conf **</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ServerTokens Prod        # Prod 同 ProductOnly
</span></span><span class="line"><span class="cl">ServerSignature Off
</span></span></code></pre></td></tr></table>
</div>
</div><p>配置前的响应头</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl 127.0.0.1 -I
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Thu, <span class="m">20</span> Apr <span class="m">2017</span> 16:18:24 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.2.27 <span class="o">(</span>Unix<span class="o">)</span> DAV/2
</span></span></code></pre></td></tr></table>
</div>
</div><p>配置如下参数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">vi /app/apache/conf/extra/httpd-default.conf
</span></span><span class="line"><span class="cl">ServerTokens Prod
</span></span><span class="line"><span class="cl">ServerSignature Off
</span></span></code></pre></td></tr></table>
</div>
</div><p>配置后的响应头</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl 127.0.0.1 -I                            
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Thu, <span class="m">20</span> Apr <span class="m">2017</span> 16:22:19 GMT
</span></span><span class="line"><span class="cl">Server: Apache
</span></span></code></pre></td></tr></table>
</div>
</div><p>附：</p>
<ul>
<li><em><strong>ServerSignature</strong></em> 三个选项，分别是 On | Off | EMail</li>
<li><em><strong>ServerTokens</strong></em> 的取值如下，其分别隐藏信息依次增加，推荐： ServerTokens ProductOnly</li>
</ul>
<p>未经修改的请求头如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl –head 127.0.0.1
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Thu, <span class="m">22</span> Jan <span class="m">2015</span> 15:39:00 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.2.26 <span class="o">(</span>CentOS<span class="o">)</span>
</span></span><span class="line"><span class="cl">X-Powered-By: PHP/5.5.9
</span></span><span class="line"><span class="cl">Vary: Cookie,Accept-Encoding,User-Agent
</span></span><span class="line"><span class="cl">X-Pingback: http://blog.mimvp.com/xmlrpc.php
</span></span><span class="line"><span class="cl">Cache-Control: max-age<span class="o">=</span><span class="m">600</span>
</span></span><span class="line"><span class="cl">Expires: Thu, <span class="m">22</span> Jan <span class="m">2015</span> 15:49:00 GMT
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span></code></pre></td></tr></table>
</div>
</div><p>上面头信息中，会显示服务器类型和版本(Apache/2.2.26)，以及操作系统(CentOS)</p>
<p>修改 ServerTokens</p>
<p>修改 ServerTokens OS 为 ServerTokens productonly</p>
<p>再次返回头信息如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl –head 127.0.0.1
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Thu, <span class="m">22</span> Jan <span class="m">2015</span> 15:40:53 GMT
</span></span><span class="line"><span class="cl">Server: Apache
</span></span><span class="line"><span class="cl">X-Powered-By: PHP/5.5.9
</span></span><span class="line"><span class="cl">Vary: Cookie,Accept-Encoding,User-Agent
</span></span><span class="line"><span class="cl">X-Pingback: http://blog.mimvp.com/xmlrpc.php
</span></span><span class="line"><span class="cl">Cache-Control: max-age<span class="o">=</span><span class="m">600</span>
</span></span><span class="line"><span class="cl">Expires: Thu, <span class="m">22</span> Jan <span class="m">2015</span> 15:50:53 GMT
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="隐藏php版本号">隐藏php版本号</h3>
<p>php.ini</p>
<p>expose_php On 改成 expose_php Off</p>
<h2 id="http-fastcgi模式启动">HTTP fastcgi模式启动</h2>
<p>编译PHP时候不要使用aspx</p>
<p>注释掉以下，fpm安装方式。不用管，例如下面配置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-v" data-lang="v"><span class="line"><span class="cl"><span class="nc">LoadModule</span> <span class="nv">php5_module</span> <span class="nv">modules</span><span class="o">/</span><span class="nv">libphp5</span><span class="p">.</span><span class="nv">so</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nc">FilesMatch</span> <span class="err">\</span><span class="p">.</span><span class="nv">php</span><span class="err">$</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">SetHandler</span> <span class="nv">application</span><span class="o">/</span><span class="nv">x</span><span class="o">-</span><span class="nv">httpd</span><span class="o">-</span><span class="nv">php</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="o">/</span><span class="nc">FilesMatch</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后去掉 <code>mod_proxy.so</code> 和 <code>mod_proxy_fcgi.so</code> 之前的注解，确保他们被apache加载。</p>
<p>如果php-fpm使用的是TCP socket，那么在httpd.conf末尾加上：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;FilesMatch \.php$&gt;   正则匹配文件，如果文件名为.php结尾
</span></span><span class="line"><span class="cl">         SetHandler &#34;proxy:fcgi://127.0.0.1:9000&#34;
</span></span><span class="line"><span class="cl">&lt;/FilesMatch&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="httpd的工作模式">httpd的工作模式</h2>
<h3 id="workerperfor模式">worker/perfor模式</h3>
<p>在linux中，我们可以使用 <code>http-l</code> 查看安装的模块是 prefork 模式还是 worker 模式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ /app/apache/bin/apachectl -l<span class="p">|</span>sed -n <span class="s1">&#39;/worker\|prefork/p&#39;</span>
</span></span><span class="line"><span class="cl">  prefork.c		<span class="c1">#&lt;== 默认为prefork（预派生）模式5个进程</span>
</span></span><span class="line"><span class="cl"><span class="m">482</span> Include conf/extra/httpd-mpm.conf  	<span class="c1">#&lt;==在httpd.conf中打开mpm配置文件.</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="prefork模式">prefork模式</h3>
<p>prefork使用的是多个子进程，而每个子进程只有一个线程，每个进程在某个确定的时间只能维持一个连接.</p>
<h4 id="工作原理">工作原理</h4>
<p>控制进程最初简历若干个子进程，为了不在请求到来时再生成子进程，所以要根据需求不断的创建新的子进程，最大可以达到每秒32个知道满足需求为止.</p>
<p>安装方法：在编译的过程中，加入参数 <code>--with-mpm=prefork</code>  如果不加也可以，因为默认的话，会采用 prefork模式。</p>
<ul>
<li>优点：效率高，稳定，安全。对于线程调试困难的平台来说，调试更加容易些.</li>
<li>缺点：和work模式比消耗资源多.</li>
</ul>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202173701200.png" alt="image-20221202173701200"  /></p>
<h4 id="prefork配置参数说明">prefork配置参数说明</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># prefork MPM
</span></span><span class="line"><span class="cl"># StartServers: number of server processes to start
</span></span><span class="line"><span class="cl"># MinSpareServers: minimum number of server processes which are kept spare
</span></span><span class="line"><span class="cl"># MaxSpareServers: maximum number of server processes which are kept spare
</span></span><span class="line"><span class="cl"># MaxRequestWorkers: maximum number of server processes allowed to start
</span></span><span class="line"><span class="cl"># MaxConnectionsPerChild: maximum number of connections a server process serves
</span></span><span class="line"><span class="cl">#                         before terminating
</span></span><span class="line"><span class="cl">&lt;IfModule mpm_prefork_module&gt;
</span></span><span class="line"><span class="cl">    StartServers           	1 	#&lt;==最初建立的子进程
</span></span><span class="line"><span class="cl">    MinSpareServers          	1	#&lt;==最小空闲进程数，如果空闲进程小于设定值，apache会自动建立进程，如果服务器并发及负载大的话，可以考虑加大。
</span></span><span class="line"><span class="cl">    MaxSpareServers          	2	#&lt;==最大空闲进程，如果空闲的进程大于设定值，apache会自动kill掉多余的进程，如果服务器负载大的话，可以考虑加大
</span></span><span class="line"><span class="cl">    MaxRequestWorkers        	20	#&lt;==设定apache可以同时处理的请求，是对apache性能影响最大的参数，就是apache可以同时处理的请求数，就是说，如果有150个用户在访问，那么第151个用户就要等之前的访问结束后才能访问
</span></span><span class="line"><span class="cl">    MaxConnectionsPerChild   	0	#&lt;==每个子进程可处理的请求数。每个子进程在处理了[max requests perchild] 个请求后将自动销毁。0意味着无限，即子进程永不销毁，虽然缺省值为0,可以使每个子进程处理更多的请求，但如果设成非0值也有两点重要好处1.可防止意外的内存泄露2.在服务器负载下降的时候会自动减少子进程数
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="worker模式">worker模式</h3>
<p>worker模式是 Apache2.X 新引进来的模式，是线程与进程的结合，在worker模式下会有多个子进程，每个进程又会有多个线程。每个线程在某个确定的时间只能维持一个连接。</p>
<p>工作原理</p>
<p>由主控制进程生成若干个子进程，而每个子进程中又包含固定的线程数，各个线程独立处理请求，同样为了不在请求到来时再生成线程，再配置文件中设置了最小和最大的空闲线程数及所有子进程中的线程总数，如果现有子进程中的线程总数不能满足并发及负载，控制进程将派生新的子进程。</p>
<p>在配置编译的过程中，加入参数 <code>--with-mpm-worker</code>，如果不加的话系统会采用默认prefork模式。</p>
<ul>
<li>优点：内存占用比prefork模式低，适合高并发高流量HTTP服务。</li>
<li>缺点：假如一个线程崩溃，整个进程就会连同其任何线程一起 “死掉”。由于线程贡献内存空间，所以一个程序在运行时必须被系统识别为“每个线程都是安全的”服务稳定性不如prefork模式。</li>
</ul>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202174118478.png" alt="image-20221202174118478"  /></p>
<h3 id="worker-模式配置参数说明">worker 模式配置参数说明</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># worker MPM
</span></span><span class="line"><span class="cl"># StartServers: initial number of server processes to start
</span></span><span class="line"><span class="cl"># MinSpareThreads: minimum number of worker threads which are kept spare
</span></span><span class="line"><span class="cl"># MaxSpareThreads: maximum number of worker threads which are kept spare
</span></span><span class="line"><span class="cl"># ThreadsPerChild: constant number of worker threads in each server process
</span></span><span class="line"><span class="cl"># MaxRequestWorkers: maximum number of worker threads
</span></span><span class="line"><span class="cl"># MaxConnectionsPerChild: maximum number of connections a server process serves
</span></span><span class="line"><span class="cl">#                         before terminating
</span></span><span class="line"><span class="cl">&lt;IfModule mpm_worker_module&gt;
</span></span><span class="line"><span class="cl">    StartServers             	3	#&lt;==最初建立的子进程
</span></span><span class="line"><span class="cl">MinSpareThreads         	75	#&lt;==最小空闲线程数，如果空闲的线程小于设定值，apache会自动建立线程，如果服务器负载大的话，可以考虑加大此参数值。
</span></span><span class="line"><span class="cl">MaxClients #&lt;==所有子进程中的线程总数。如果现有子进程中的线程总数不能满足负载，控制进程将派生新的子进程。
</span></span><span class="line"><span class="cl">MaxSpareThreads        	250  #&lt;==最大空闲线程数，如果空闲的线程大于设定值，apache会自动kill掉多余的线程，如果服务器负载过大的话，可以考虑加大此参数值。   
</span></span><span class="line"><span class="cl">ThreadsPerChild         	25	#&lt;==每个进程包含固定的线程数，此参数再worker模式中，是影响最大的参数
</span></span><span class="line"><span class="cl">MaxRequestWorkers      	400	    
</span></span><span class="line"><span class="cl">MaxConnectionsPerChild   	0Threads
</span></span><span class="line"><span class="cl">&lt;/IfModule&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>worker模式下所能同时处理的请求总数是由子进程总数乘Threadsperchild值决定的，应该大于等于maxcliens。如果负载很大，现有的子进程数不能满足时，控制进程会派生新的子进程。</p>
<p>默认最大的子进程总数是16，如需加大时，也需要显式声明serverlimit的值（最大值是20000）</p>
<blockquote>
<p>特别说明</p>
<p>如果显式生命了serverLimit，那么它乘 ThreadPreChild 的值必须大于等于MaxClients,而且MaxClients必须是ThreadPerChild的整数倍，否则Apache将会自动调节Apache将会自动调节到一个相应的值（可能是个非常期望值）</p>
<p>通过数学表达</p>
<p>MaxClient &lt;= 总的进程（ServerLimit）* 线程数（ThreadsPerChild）、</p>
<p>MaxClient % ThreadsPerChild = 0</p>
</blockquote>
<p>注意：worker MPM也有不完善的地方，如果一个线程崩溃，整个进程就会连同其所有线程一起 “死掉”</p>
<h2 id="配置httpd对站点文件压缩">配置httpd对站点文件压缩</h2>
<h3 id="mod_deflate模块介绍">mod_deflate模块介绍</h3>
<p>Apache的 <code>mod_deflate</code> 模块提供了 <code>Deflate</code> 输出过滤器，允许httpd服务器将输出内容在发送到客户端之前根据具体的策略进行压缩，以节约网络带宽，同时提升用户访问体验。</p>
<p><code>mod_deflate</code> 模块安装方法</p>
<p>检查是否安装了模块 <code>mod_deflate</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ /app/apache/bin/apachectl -l
</span></span><span class="line"><span class="cl">Compiled in modules:
</span></span><span class="line"><span class="cl">  core.c
</span></span><span class="line"><span class="cl">  mod_so.c
</span></span><span class="line"><span class="cl">  http_core.c
</span></span><span class="line"><span class="cl">  prefork.c
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="常规方法安装">常规方法安装</h3>
<p><code>--enable-deflate</code> 提供对内容的亚索传输编码支持，一般html js css等内容站点，使用此参数功能会大大提高传输速度，提升访问者访问体验。在生产环境中，这是 httpd 调优的一个重要选项之一。</p>
<h3 id="mod_deflate-dso安装方法">mod_deflate DSO安装方法</h3>
<p>以DSO动态模块加载mod_deflate配置的全部命令为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> /root/tools/httpd-2.4.18/modules/filters	<span class="c1">#&lt;==切换到apache软件目录mod_deflate程序下</span>
</span></span><span class="line"><span class="cl">/app/apache/bin/apxs  -c -i -a mod_deflate.c <span class="c1">#&lt;==以dso的方式编译入到apache中</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>出现如下错误</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">httpd: Syntax error on line <span class="m">103</span> of /app/apache2.4/conf/httpd.conf: Cannot load modules/mod_deflate.so into server: /app/apache2.4/modules/mod_deflate.so: undefined symbol: inflateEnd
</span></span></code></pre></td></tr></table>
</div>
</div><p>解决方法：</p>
<p>出现这个错误其实时因为 <code>mod_deflate</code> 模块没有找到 <code>zlib</code> 库。解决办法就是找到 <code>apr-config</code> 文件中的<code>LDFLAGS=&quot;&quot;</code>，把他改成 <code>LDFLAGS=&quot;-lz&quot;</code> ，然后在运行 <code>/usr/local/apache2/bin/apxs -i -c -a mod_deflate.c</code> 一般就可以了。</p>
<p>方法1：在apr的主配置文件 <code>apr-1-config</code>（老版本可能是apr-conf）里面将 <code>LDFLAGS=&quot;&quot;</code> 修改为 <code>LDFLAGS=&quot;-lz&quot;</code>，然后用 apxs 从新编译 <code>mod_deflate.c</code> 后，httpd 服务就正常了，并且也可以正常压缩文件了。</p>
<p>方法2：需要在 <code>LoadModule deflate_module  modules/mod_deflate.so</code> 的前面加载 <code>zlib.so64</code> 操作系统就在 <code>LoadModule deflate_module   modules/mod_deflate.so</code> 这行的上一行添加 <code>LoadFile /usr/lib64/libz.so</code>即可。</p>
<p>上述参数选项说明</p>
<table>
<thead>
<tr>
<th>参数 </th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-c             </td>
<td>需要执行编译操作。他首先会编译C源码程序(.c)files为对应的目标代码文件(.o)，然后连接这些目标代码和files中其余的目标代码文件(.o和.a)，以生成动态共享对象dsofile。如果没有指定-o选项，则此输出文件名由files中的第一个文件名推测得到，也就是默认为mod_name.so</td>
</tr>
<tr>
<td>-i                                          </td>
<td>需要执行安装操作，以安装一个或多个共享对象到服务器的modules目录中。</td>
</tr>
<tr>
<td>-a</td>
<td>增加一个LoadMoudule行到httpd.conf文件中，以激活此模块</td>
</tr>
</tbody>
</table>
<h3 id="mod_deflate测试">mod_deflate测试</h3>
<p>mod_deflate模块可以在主配置文件中配置，也可以在虚拟主机中配置</p>
<p>在主http.conf配置中配置如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-v" data-lang="v"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nv">ifmodule</span> <span class="nv">mod_deflate</span><span class="p">.</span><span class="nv">c</span><span class="p">&gt;</span> <span class="o">#</span> <span class="o">&lt;==</span><span class="nv">开始标签标记</span> <span class="nv">判断模块是否开启</span>
</span></span><span class="line"><span class="cl">    <span class="nc">DeflateCompressionLevel</span> <span class="mi">6</span> <span class="o">#</span> <span class="o">&lt;==</span><span class="nv">压缩级别</span> <span class="mi">1</span><span class="o">-</span><span class="mi">9</span>
</span></span><span class="line"><span class="cl">    <span class="nc">SetOutputFilter</span> <span class="nc">DEFLATE</span>	<span class="o">#</span> <span class="o">&lt;==</span><span class="nv">启用deflate模块对本站点的所有输出进行GZIP压缩</span>
</span></span><span class="line"><span class="cl">    <span class="nc">AddOutputFilterByType</span> <span class="nc">Deflate</span> <span class="nv">text</span><span class="o">/</span><span class="nv">html</span> <span class="nv">test</span><span class="o">/</span><span class="nv">pain</span> <span class="nv">text</span><span class="o">/</span><span class="nv">xml</span> <span class="nv">text</span><span class="o">/</span><span class="nv">css</span> 	
</span></span><span class="line"><span class="cl">    <span class="nc">AddOutputFilterByType</span> <span class="nc">Deflate</span> <span class="nv">application</span><span class="o">/</span><span class="nv">javascript</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="o">/</span><span class="nv">ifmodule</span><span class="p">&gt;</span> <span class="o">#</span> <span class="o">&lt;==</span><span class="nv">判断结束标记</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202180518764.png" alt="image-20221202180518764"  /></p>
<h2 id="mod_expires-缓存功能">mod_expires 缓存功能</h2>
<p>mod_expires允许通过apache配置文件控制 HTTP “Expires:” 和 “Cache-Control:” 头内容，这个模块控制服务器应答时的Expires头内容和Cache-Control头的max-age指令。有效期可以设置为相对于源文件的最后修改时刻或者客户端的访问时刻。</p>
<p>这些HTTP头向客户端表明了内容的有效性和持久性。如果客户端本地有缓存，则内容就可以从缓存（除非过期）而不是从服务器读取。人后客户端会检查缓存中的副本，看看是否过期或者失效，以决定是否重新从服务器获得内容更新。</p>
<h3 id="常规方法安装-1">常规方法安装</h3>
<p>&ndash;enable-deflate</p>
<p>提供对内容的亚索传输编码支持，一般html js css等内容站点，使用此参数功能会大大提高传输速度，提升访问者访问体验。在生产环境中，这是Apache调优的一个重要选项之一。</p>
<p>以DSO动态模块加载mod_deflate配置的全部命令为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> /root/tools/httpd-2.4.18/modules/metadata#&lt;<span class="o">==</span>切换到apache软件目录mod_expires程序下
</span></span><span class="line"><span class="cl">/app/apache/bin/apxs  -c -i -a mod_expires.c <span class="c1">#&lt;==以dso的方式编译入到apache中</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="mod_expires在httpd中应用">mod_expires在httpd中应用</h3>
<p>在主配置文件中配置，所有的虚拟主机都生效，在对应的虚拟主机上配置，只有对应的虚拟主机生效</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-v" data-lang="v"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nv">ifmodule</span> <span class="nv">expires_module</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresActive</span> <span class="nv">on</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresDefault</span> <span class="s2">&#34;access plus 12 months&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">test</span><span class="o">/</span><span class="nv">html</span> <span class="s2">&#34;access plus 1 years&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">test</span><span class="o">/</span><span class="nv">css</span> <span class="s2">&#34;access plus 1 years&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">test</span><span class="o">/</span><span class="nv">xml</span> <span class="s2">&#34;access plus 1 years&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">test</span><span class="o">/</span><span class="nv">php</span> <span class="s2">&#34;access plus 1 years&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">image</span><span class="o">/</span><span class="nv">gif</span> <span class="s2">&#34;access plus 30 days&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="cp">#ExpiresByType image/jpeg &#34;access plus 30 days&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="cp">#ExpiresByType image/jpg &#34;access plus 30 days&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">image</span><span class="o">/</span><span class="nv">jpeg</span> <span class="nc">A7200000</span>
</span></span><span class="line"><span class="cl">	<span class="nc">ExpiresByType</span> <span class="nv">image</span><span class="o">/</span><span class="nv">png</span> <span class="s2">&#34;access plus 30 days&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">application</span><span class="o">/</span><span class="nv">javascript</span> <span class="s2">&#34;access plus 30 days&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">application</span><span class="o">/</span><span class="nv">x</span><span class="o">-</span><span class="nv">javascript</span> <span class="s2">&#34;access plus 30 days&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nc">ExpiresByType</span> <span class="nv">image</span><span class="o">/</span><span class="nv">png</span> <span class="s2">&#34;access plus 30 days&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="o">/</span><span class="nv">ifmodule</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202180534378.png" alt="image-20221202180534378"  /></p>
<h2 id="配置httpd防盗链功能">配置httpd防盗链功能</h2>
<h3 id="httpd-web服务实现防盗链">httpd Web服务实现防盗链</h3>
<p>利用referer和rewrite实现Apache防盗链调用，在主配置文件 <code>httpd.conf</code> 或者在虚拟主机 <code>httpd-vhosts.conf</code> 中配置如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">RewriteEngine ON	
</span></span><span class="line"><span class="cl">RewriteCond %{HTTP_REFERER} !^http://www.test.com/.*$ [NC] #&lt;==此处，如果加http://就必须加^,否则直接写servername即可 如下
</span></span><span class="line"><span class="cl">RewriteCond %{HTTP_REFERER} !http://www.test.com [NC]
</span></span><span class="line"><span class="cl">RewriteCond %{HTTP_REFERER} !^http://www.test.com$ [NC]
</span></span><span class="line"><span class="cl">RewriteCond %{SCRIPT_FILENAME} !nolink.png [NC]#&lt;==为防止无限302，文件名如果为nolink.png即不重写
</span></span><span class="line"><span class="cl">RewriteRule .*\.(gif|jpg|swf|png)$ img/nolink.png [R,NC,L] #&lt;==重写时，必须加R
</span></span></code></pre></td></tr></table>
</div>
</div><p>访问查看结果</p>
<img src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202174359240.png" alt="image-20221202174359240" style="zoom: 67%;" />
<p>用原本的域名访问，可直接访问</p>
<img src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202174426073.png" alt="image-20221202174426073" style="zoom:80%;" />
<h3 id="httpd常用rewrite标志">httpd常用Rewrite标志</h3>
<table>
<thead>
<tr>
<th>flag</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Chain|C</td>
<td>如果当前规则被匹配，则继续处理其后继规则，如果当前规则不被匹配， 则其后继规则将被跳过。</td>
</tr>
<tr>
<td>forbidden|F</td>
<td>强制禁止当前URL的响应，并向客户端发送一个403的HTTP响应代码。</td>
</tr>
<tr>
<td>gone|G</td>
<td>强制废弃当前URL,向客户端发送一个410的HTTP响应代码，来表明此URL是已被废弃的。</td>
</tr>
<tr>
<td>handler|H=Content-handler</td>
<td>为需要处理的目标文件强制指定一个内容处理器。</td>
</tr>
<tr>
<td>last|L</td>
<td>停止标志，当mod_rewrite模块处理到此标志时会停止重写搡作，并不再应用其他重写规则。此标志通常用于跳出规则处理。</td>
</tr>
<tr>
<td>next|N</td>
<td>循环重写规则，从第一个规则开始再次执行重写规则，但此时处理的URL己经不是原始的URL.它相当于Perl语言中的next命令。</td>
</tr>
<tr>
<td>nocase|NC</td>
<td>忽略Pattern中的大小写。</td>
</tr>
<tr>
<td>Noescape|NE</td>
<td>使用此标记可以让URL中允许使用一些特殊字符，例如，‘T’、‘%’、‘;’等，如果不使用此标记则是将这些特殊字符转换成等值的16进制编码如‘%25’、‘%24’、‘%3B’等。</td>
</tr>
<tr>
<td>nosubreq|NS</td>
<td>不对内部子请求进行处理，使用此标记如果是内部子请求，则跳过当前规则。通常使用CGI脚本的子请求会出现一些问题，因此可以使用些标记来 禁止子请求。</td>
</tr>
<tr>
<td>proxy|P</td>
<td>强制重写的URL在内部由代理服务器模块来处理，并中断重写过程。使用这个标记要注意的是需要保证代理模块已经被加载，同时替换的字串是一个能被代理模块处理的有效的URL,否则代理模块将会返回一个错误的信息。</td>
</tr>
<tr>
<td>Passthiough|PT</td>
<td>将此URL强制交给下一个处理器来进行处理，而在转交之前， mod_rewrite模块会将内部request_rec结构中的URL字段设置为filename字段的值，这使得RewriteRule指令的输出能够被（从URL转换到文件名的）Alias、 ScriptAlias、Redirect等指令进行后续处理。</td>
</tr>
<tr>
<td>Qsappend|QSA</td>
<td>你可以通过此标记在现有的替换字符串中增加一个査询字符串， 注意：是增加而不是替换。</td>
</tr>
<tr>
<td></td>
<td>将重写的URL作为一个重定向处理，在使用这个标记时，必须确保该替换字段是一个有效的URL。否则，它会指向一个无效的位置，并且此 标记本身只是对URL加上http://thishost[:thisport]/前缀。如果没有在此标记后面指 定HTTP响应代码则会使用302 (临时性移动）这个响应代码来进行处理。用户可指定的响应代码范围为300〜400,或是使用符号化的名称，例如，temp、seeother 等。</td>
</tr>
<tr>
<td>redirect|R[=code]</td>
<td>将重写的URL作为一个重定向处理，在使用这个标记时，必须确保该替换字段是一个有效的URL。否则，它会指向一个无效的位置，并且此 标记本身只是对URL加上 <code>http://thishost[:thisport]/</code> 前缀。如果没有在此标记后面指 定HTTP响应代码则会使用302 (临时性移动）这个响应代码来进行处理。用户可指定的响应代码范围为300〜400,或是使用符号化的名称，例如，temp、seeother 等。</td>
</tr>
<tr>
<td>skip|S=num</td>
<td>与chain|C标记不同，使用此标记将强制跳过后继的规则，用户可以通过此标记来模拟if-then-else结构，最后一个规则是then从句，而被跳过的skip=N 个规则是else从句。</td>
</tr>
<tr>
<td>type|T=MIME-type</td>
<td>强制目标文件的MIME类型为MIME-type所指定的类型。</td>
</tr>
</tbody>
</table>
<h2 id="禁止资源目录解析php程序">禁止资源目录解析PHP程序</h2>
<p>方案1：提示下载不解析</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;Directory &#34;/app/apache-2.4.18/htdocs/php&#34;&gt;
</span></span><span class="line"><span class="cl">AllowOverride None
</span></span><span class="line"><span class="cl">Options None
</span></span><span class="line"><span class="cl">Require all granted
</span></span><span class="line"><span class="cl">php_admin_flag engine off #&lt;==禁止解析php文件，此参数必须apex方式安装才存在。反之报错
</span></span><span class="line"><span class="cl">&lt;/Directory&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202175111862.png" alt="image-20221202175111862" style="zoom: 80%;" />
<p><code>php_admin_flag engine off</code> 这个语句就是禁止解析 php 的控制语句，但只这样配置还不够，因为这样配置后用户依然可以访问 php 文件，只不过不解析了，但可以下载，用户下载 php 文件也是不合适的，所以有必要再禁止一下。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202175148577.png" alt="image-20221202175148577"  /></p>
<h2 id="禁止目录索引浏览功能">禁止目录索引浏览功能</h2>
<p>默认配置当网站没有首页文件时，httpd会把整个目录结构展示给网站用户，这是非常大的隐患，必须要屏蔽掉。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed//img/image-20221202175604755.png" alt="image-20221202175604755"  /></p>
<p>在主配置文件 <code>httpd.conf</code> 或者虚拟主机的配置文件 <code>httpd-vhost.conf</code> 文件配置如下内容即可</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;Directory &#34;/app/apache-2.4.18/htdocs&#34;&gt;
</span></span><span class="line"><span class="cl">    Options FollowSymLinks
</span></span><span class="line"><span class="cl">    AllowOverride None
</span></span><span class="line"><span class="cl">    Require all granted
</span></span><span class="line"><span class="cl">    Allow from all
</span></span><span class="line"><span class="cl">&lt;/Directory&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>或</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;Directory &#34;/app/apache-2.4.18/htdocs&#34;&gt;
</span></span><span class="line"><span class="cl">    Options -Indexes FollowSymLinks
</span></span><span class="line"><span class="cl">    AllowOverride None
</span></span><span class="line"><span class="cl">    Require all granted
</span></span><span class="line"><span class="cl">    Allow from all
</span></span><span class="line"><span class="cl">&lt;/Directory&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>更改之后出现403权限问题，说明禁止了目录索引功能</p>
<h2 id="关闭无用的cgi功能配置">关闭无用的CGI功能配置</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">304 &lt;IfModule alias_module&gt;
</span></span><span class="line"><span class="cl">305     #
</span></span><span class="line"><span class="cl">306     # Redirect: Allows you to tell clients about documents that used to 
</span></span><span class="line"><span class="cl">307     # exist in your server&#39;s namespace, but do not anymore. The client 
</span></span><span class="line"><span class="cl">308     # will make a new request for the document at its new location.
</span></span><span class="line"><span class="cl">309     # Example:
</span></span><span class="line"><span class="cl">310     # Redirect permanent /foo http://www.example.com/bar
</span></span><span class="line"><span class="cl">311 
</span></span><span class="line"><span class="cl">312     #
</span></span><span class="line"><span class="cl">313     # Alias: Maps web paths into filesystem paths and is used to
</span></span><span class="line"><span class="cl">314     # access content that does not live under the DocumentRoot.
</span></span><span class="line"><span class="cl">315     # Example:
</span></span><span class="line"><span class="cl">316     # Alias /webpath /full/filesystem/path
</span></span><span class="line"><span class="cl">317     #
</span></span><span class="line"><span class="cl">318     # If you include a trailing / on /webpath then the server will
</span></span><span class="line"><span class="cl">319     # require it to be present in the URL.  You will also likely
</span></span><span class="line"><span class="cl">320     # need to provide a &lt;Directory&gt; section to allow access to
</span></span><span class="line"><span class="cl">321     # the filesystem path.
</span></span><span class="line"><span class="cl">322 
</span></span><span class="line"><span class="cl">323     #
</span></span><span class="line"><span class="cl">324     # ScriptAlias: This controls which directories contain server scripts. 
</span></span><span class="line"><span class="cl">325     # ScriptAliases are essentially the same as Aliases, except that
</span></span><span class="line"><span class="cl">326     # documents in the target directory are treated as applications and
</span></span><span class="line"><span class="cl">327     # run by the server when requested rather than as documents sent to the
</span></span><span class="line"><span class="cl">328     # client.  The same rules about trailing &#34;/&#34; apply to ScriptAlias
</span></span><span class="line"><span class="cl">329     # directives as to Alias.
</span></span><span class="line"><span class="cl">330     #
</span></span><span class="line"><span class="cl">331     ScriptAlias /cgi-bin/ &#34;/app/apache-2.4.18/cgi-bin/&#34;
</span></span><span class="line"><span class="cl">332 
</span></span><span class="line"><span class="cl">333 &lt;/IfModule&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;Directory &#34;/app/apache-2.4.18/htdocs/bbs&#34;&gt;
</span></span><span class="line"><span class="cl">    Options FollowSymLinks
</span></span><span class="line"><span class="cl">    AllowOverride None
</span></span><span class="line"><span class="cl"> 	Order allow,deny
</span></span><span class="line"><span class="cl">    Allow form all
</span></span><span class="line"><span class="cl"> &lt;/Directory&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="禁止httpd用户重载功能">禁止httpd用户重载功能</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;Directory &#34;/app/apache-2.4.18/htdocs&#34;&gt;
</span></span><span class="line"><span class="cl">    Options -Indexes FollowSymLinks
</span></span><span class="line"><span class="cl">    AllowOverride None		#&lt;==禁止用户重载
</span></span><span class="line"><span class="cl">    Require all granted
</span></span><span class="line"><span class="cl">    Allow from all
</span></span><span class="line"><span class="cl">&lt;/Directory&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>禁止用户重载会加快服务器响应速度，因为它不在为每个请求寻找每个目录访问控制文件(.htaccess)。也杜绝了开发人员变相修改配置的安全隐患</p>
<h2 id="避免使用htaccess文件">避免使用.htaccess文件</h2>
<p>在Apache中，AllowOvCTride 指令来设置是否启用 <code>.htaccess</code> 文件功能。但是对于一些管理员来说，更简单更精细化的控制目录可以为他们节省很多的时间，于是 <code>.htaccess</code> 文件提供了一个这样的功能，你可以使用默认AllowOverride指令是使用None参数来禁止使用.htaccess文件功能。</p>
<p>可使用参数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">* All：使用所有能在.htaccess文件中使用的指令.
</span></span><span class="line"><span class="cl">* AuthConfig：使用鉴权指令，例如，AuthName、AuthType 等.
</span></span><span class="line"><span class="cl">* FileInfo：使用控制文件类型的指令，例如，ErrorDocument、SetOutputFilter等. 
</span></span><span class="line"><span class="cl">* Indexes:使用目录索引指令.
</span></span><span class="line"><span class="cl">* Options：使用控制目录功能指令.
</span></span><span class="line"><span class="cl">* Limit：使用主机访问控制指令.
</span></span></code></pre></td></tr></table>
</div>
</div><p>注意：</p>
<p><code>.htaccess</code> 文件会导致服务器性能的急速（如果服务器上有很多目录，且每层目录下都有.haccess文件）下降，在使用了AllowOverride指令允许使用 <code>.htaccess </code>文件后，无论是否使用 <code>.htaccess</code> 文件，httpd都会在每个目录下查找 <code>.htaccess</code> 文件。其次，当每个请求链接到来时，httpd 会查找链接所请求目录下的 <code>.htaccess</code> 文件，并且再査找它的上级目录中的 <code>.htaccess</code> 文件以使 <code>.htaccess </code>文件内的设置都能生效。这些査找会让httpd 性能降低很多。另外还有安全方面的问题，<code>.htaccess</code> 文件可以修改和覆盖服务器的指令，因此会产生一些未被限制的修改，而这些修改将会导致一些安全问题的出现。</p>
<h2 id="如何对httpd配置优化">如何对httpd配置优化？</h2>
<ul>
<li>配置软件软件轮训Apache访问日志</li>
<li>优化访问日志记录的信息</li>
<li>配置HTTP错误页面优雅显示</li>
<li>配置 httpd 对站点文件压缩</li>
<li>Mod_Expires缓存功能</li>
<li>更改 httpd 默认用户</li>
<li>调整 httpd 的工作模式</li>
<li>屏蔽 httpd 对外显示的版本等敏感信息</li>
<li>屏蔽 httpd 对外显示的版本等敏感信息</li>
<li>最小化 httpd 目录及文件权限设置</li>
<li>最小化 httpd 日志目录权限</li>
<li>加大 httpd 并发连接数</li>
<li>配置 httpd 防盗链功能</li>
<li>禁止 httpd 目录索引浏览功能</li>
<li>禁止 httpd 用户重载功能</li>
<li>避免使用.htaccess文件</li>
<li>关闭无用的CGI功能配置</li>
<li>禁止资源目录解析PHP程序</li>
<li>使用TMPFS文件系统替代频繁访问的目录</li>
<li>尽可能减少HTTP请求</li>
<li>使用CDN左网站加速</li>
<li>httpd 程序架构优化</li>
<li>httpd 的安全模块</li>
<li>正确途径取得源代码，勤打 httpd 补丁</li>
<li>系统内核参数优化</li>
<li>配置Mod_Pagespeed优化Web性能</li>
<li>防止用户请求跳出Web站点目录</li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>

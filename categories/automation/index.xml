<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>automation on Cylon&#39;s Collection</title>
    <link>https://www.oomkill.com/categories/automation/</link>
    <description>Recent content in automation on Cylon&#39;s Collection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 24 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.oomkill.com/categories/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>StackStorm自动化 - 工作流模型</title>
      <link>https://www.oomkill.com/2024/05/stackstorm-sensors/</link>
      <pubDate>Fri, 24 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2024/05/stackstorm-sensors/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>工作流模型是指 Stackstorm 中 Orquesta 工作流的定义，包含工作流的执行方式，也可以理解为工作流模型就是 Workflow DSL 定义任务执行的有向图</p>
<h2 id="工作流模型">工作流模型</h2>
<p>下表是工作流模型 (Workflow Model) 的属性。工作流接受 Input，按预定义顺序执行一组任务 (Task)，并返回输出 (Output)。此处的工作流模型是一个有向图 (directed graph)，其中 Task 是节点，Taskt 之间的转换及其条件形成边。组成工作流的任务将在 DSL 中定义为名为 <em><strong>Task</strong></em> 的字典， 其中 Key 和 Value 分别是任务名称和任务模型。</p>
<table>
<thead>
<tr>
<th>Attribute</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>version</td>
<td>Yes</td>
<td>The version of the spec being used in this workflow DSL.</td>
</tr>
<tr>
<td>description</td>
<td>No</td>
<td>The description of the workflow.</td>
</tr>
<tr>
<td>input</td>
<td>No</td>
<td>A list of input arguments for this workflow.</td>
</tr>
<tr>
<td>vars</td>
<td>No</td>
<td>A list of variables defined for the scope of this workflow.</td>
</tr>
<tr>
<td>tasks</td>
<td>Yes</td>
<td>A dictionary of tasks that defines the intent of this workflow.</td>
</tr>
<tr>
<td>output</td>
<td>No</td>
<td>A list of variables defined as output for the workflow.</td>
</tr>
</tbody>
</table>
<p>下面示例是一个 Workflow 的 DSL 定义，说明基础的工作流模型中各个部分的组成</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">1.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">A simple workflow.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 字符串列表，假设将在运行时提供值或键值对，其中当运行时未提供值时，值使用默认值。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 这些属性的定义在 Action 的元数据文件中定义，包含默认值</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">input</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">arg1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">arg2</span><span class="p">:</span><span class="w"> </span><span class="l">abc</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 一组键值对的变量，可以用于存储数据</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">vars</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">var1</span><span class="p">:</span><span class="w"> </span><span class="m">123</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">var2</span><span class="p">:</span><span class="w"> </span><span class="kc">True</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">var3</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 由字典组成任务定义，执行任务顺序由入栈任务转换和出栈条件组成</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># 定义两个任务，next为下一个执行的任务</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">task1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="l">core.noop</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">next</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">do</span><span class="p">:</span><span class="w"> </span><span class="l">task2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">task2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="l">core.noop</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 要输出的键值对列表</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">output</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">var3</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;% ctx().arg1 %&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">var4</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">var41</span><span class="p">:</span><span class="w"> </span><span class="m">456</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">var42</span><span class="p">:</span><span class="w"> </span><span class="l">def</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">var5</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">1.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">2.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">3.0</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="with-item-模型">with-item 模型</h2>
<p>with-item 模型 是workflow 批量处理任务的一种方式，with-item 将遍历每个 item，然后作为参数传给 Action，默认情况下，所有 Item 将同时处理。当配置 concurrency 指定时，将处理最多 concurrency 值的 item 数，其余项目将排队等待执行，当 Item 的 Action 执行完成后，将处理列表中的下一个item。</p>
<p>任务结果是按照与item相同的顺序排列的Action执行结果的列表。所有Action执行必须成功完成，任务才能达到成功状态。如果一个或多个Action执行失败，则该任务将为失败状态。</p>
<p>当有取消或暂停工作流的请求时，任务将分别处于取消或暂停状态，直到执行过程中的所有Action执行完成。一旦这些Action执行完成时，任务将分别进入取消或暂停状态。如果指定了任务的 concurrency 并且还有剩余item，则不会请求新的 Action 执行。当暂停的工作流程恢复时，任务将继续处理剩余的 Item。</p>
<p>Item 可配置参数如下：</p>
<table>
<thead>
<tr>
<th>Attribute</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>items</td>
<td>Yes</td>
<td>The list of items to execute the action with.</td>
</tr>
<tr>
<td>concurrency</td>
<td>No</td>
<td>The number of items being processed concurrently.</td>
</tr>
</tbody>
</table>
<h3 id="一个简单的with-item-模型示例">一个简单的with-item 模型示例</h3>
<p>以下是一个简单示例，其中包含任务中定义的单个 Item 列表。该任务会收到一个要回显的消息列表。对于不需要并发的项目 Item，有一个速记符号可以将列表直接传递给 with 语句。可以使用 item 函数将各个项目作为输入传递到 Action 中以供执行。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">version: 1.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">input:
</span></span><span class="line"><span class="cl">  - messages
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tasks:
</span></span><span class="line"><span class="cl">  task1:
</span></span><span class="line"><span class="cl">    with: &lt;% ctx<span class="o">(</span>messages<span class="o">)</span> %&gt;
</span></span><span class="line"><span class="cl">    action: core.echo <span class="nv">message</span><span class="o">=</span>&lt;% item<span class="o">()</span> %&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>当需要并发执行时，使用 with-items 的 schema 去定义 ，如下所示</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">1.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">input</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">messages</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">task1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">items</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;% ctx(messages) %&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">concurrency</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="l">core.echo message=&lt;% item() %&gt;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="进阶为item命名">进阶：为Item命名</h3>
<p>Item 也可以被命名，下面示例时和上面相同功能的 workflow，但他为 items 使用 “message” 的作为名称进行标注。在标记时，指定了  <code>message in &lt;% ctx(messages) %&gt;</code> 进行命名，这里 item 被指定为 “message”，在引用时，item 函数也必须指定名称 <code>item(message)</code>，这种场景返回的就不是列表，而是一个字典，类似 <code>{&quot;message&quot;: &quot;value&quot;}</code> 在处理多个项目时比较有用。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">1.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">input</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">messages</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">task1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">with</span><span class="p">:</span><span class="w"> </span><span class="l">message in &lt;% ctx(messages) %&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="l">core.echo message=&lt;% item(message) %&gt;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="为多个item命名">为多个Item命名</h3>
<p>在执行 Action 时，可以将多个 Item 作为 input 传入到 Action中，这里就利用到 item 命名的方式与另外 stackstrom 提供的 zip 函数。zip 与 python zip 相同，将多个元组进行迭代，然后将他们（多个元组相同下标项）的每项压缩为一个元组。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">个元组进行迭代，然后将他们的每项压缩为一个元组。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">1.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">input</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">hosts</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">commands</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">task1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">with</span><span class="p">:</span><span class="w"> </span><span class="l">host, command in &lt;% zip(ctx(hosts), ctx(commands)) %&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="l">core.remote hosts=&lt;% item(host) %&gt; cmd=&lt;% item(command) %&gt;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>上面示例为，input 有两个列表，hosts 和 commands，这里使用 zip 压缩后将便成为 ，<code>({hosts:xxx}, {commands:xxx})</code>  这样在执行时通过 item 函数指定名称 <code>item(host)</code>，就可以获取到对应的迭代器位的 host，通过这样的方式来进行多列表参数的传入。</p>
<p>下面是一个多参数 with-item 模型的执行示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">1.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">A workflow demonstrating with items.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">input</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">members</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">test</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">task1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">with</span><span class="p">:</span><span class="w"> </span><span class="l">host, command in &lt;% zip(ctx(members), ctx(test)) %&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="l">core.echo message=&#34;&lt;% item() %&gt;,  resistance is futile!&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">output</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">items</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;% task(task1).result.items.select($.result.stdout) %&gt;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>通过执行结果可以看出 multiple-Item 的机制</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">st2 execution get 664dd003169d72f36729cb70</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">664dd003169d72f36729cb70</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action.ref</span><span class="p">:</span><span class="w"> </span><span class="l">frist.orquesta-with-items</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">parameters</span><span class="p">:</span><span class="w"> </span><span class="l">None</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">status</span><span class="p">:</span><span class="w"> </span><span class="l">succeeded (1s elapsed)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">start_timestamp</span><span class="p">:</span><span class="w"> </span><span class="l">Wed, 22 May 2024 10:59:15 UTC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">end_timestamp</span><span class="p">:</span><span class="w"> </span><span class="l">Wed, 22 May 2024 10:59:16 UTC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">log</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">status</span><span class="p">:</span><span class="w"> </span><span class="l">requested</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">timestamp</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;2024-05-22T10:59:15.698000Z&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">status</span><span class="p">:</span><span class="w"> </span><span class="l">scheduled</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">timestamp</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;2024-05-22T10:59:15.813000Z&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">status</span><span class="p">:</span><span class="w"> </span><span class="l">running</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">timestamp</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;2024-05-22T10:59:15.865000Z&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">status</span><span class="p">:</span><span class="w"> </span><span class="l">succeeded</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">timestamp</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;2024-05-22T10:59:16.918000Z&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">result</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">output</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">items</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="s1">&#39;{&#39;</span><span class="nt">&#39;host&#39;&#39;: &#39;&#39;Lakshmi&#39;&#39;, &#39;&#39;command&#39;&#39;</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="l">t1&#39;&#39;},  resistance is futile!&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="s1">&#39;{&#39;</span><span class="nt">&#39;host&#39;&#39;: &#39;&#39;Lindsay&#39;&#39;, &#39;&#39;command&#39;&#39;</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="l">t2&#39;&#39;},  resistance is futile!&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="s1">&#39;{&#39;</span><span class="nt">&#39;host&#39;&#39;: &#39;&#39;Tomaz&#39;&#39;, &#39;&#39;command&#39;&#39;</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="l">t3&#39;&#39;},  resistance is futile!&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">+--------------------------+------------------------+-------+-----------+------------------------------+</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">| id                       | status                 | task  | action    | start_timestamp              |</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">+--------------------------+------------------------+-------+-----------+------------------------------+</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">| 664dd004ed940d64824e33fb | succeeded (0s elapsed) | task1 | core.echo | Wed, 22 May 2024 10:59:16 UTC|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">| 664dd004ed940d64824e33fe | succeeded (0s elapsed) | task1 | core.echo | Wed, 22 May 2024 10:59:16 UTC|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">| 664dd004ed940d64824e3402 | succeeded (0s elapsed) | task1 | core.echo | Wed, 22 May 2024 10:59:16 UTC|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">+--------------------------+------------------------+-------+-----------+------------------------------+</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="reference">Reference</h2>
<p><sup id="1">[1]</sup> <a href="https://docs.stackstorm.com/sensors.html">Sensors and Triggers</a></p>
<p><sup id="2">[2]</sup> <a href="https://akuity.io/blog/argo-cd-architectures-explained/">How many do you need? - Argo CD Architectures Explained</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>StackStorm自动化 - Sensor</title>
      <link>https://www.oomkill.com/2023/12/stackstorm-sensors/</link>
      <pubDate>Sat, 02 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2023/12/stackstorm-sensors/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="什么是传感器">什么是传感器</h2>
<p>传感器 (Sensor) 是将外部系统和事件与 StackStorm 集成的一种方式。传感器是 Python 代码片段，它们要么定期轮询某些外部系统，要么被动等待入站事件，通常示例用于每隔一段时间去轮询某一个对象，然后他们将 Trigger 注入 StackStorm，可以通过规则进行匹配，以执行潜在的 Action。</p>
<p>Sensor 是用 Python 编写的，并且必须遵循 StackStorm 定义的传感器接口要求。</p>
<h2 id="什么是触发器">什么是触发器</h2>
<p>触发器 (Trigger) 是 StackStorm 中用于识别 StackStorm 的传入事件。Trigger 是类型（字符串）和可选参数（对象）的元组。编写 Rule 是为了与 Trigger 一起使用。Sensor 通常会记录 Trigger，但这并不是严格要求的。例如，有一个向 StackStorm 注册的通用Webhooks触发器，它不需要自定义传感器。</p>
<h2 id="stackstorm内置触发器">Stackstorm内置触发器</h2>
<p>默认情况下，StackStorm 会发出一些内部 Trigger，您可以在规则中利用它们。这些触发器可以与非系统触发器区分开来，因为它们的前缀为 <em><strong>“st2”</strong></em>。</p>
<p>下面包含每个资源的可用 Trigger 列表：</p>
<p>Action</p>
<table>
<thead>
<tr>
<th>Reference</th>
<th>Description</th>
<th>Properties</th>
</tr>
</thead>
<tbody>
<tr>
<td>core.st2.generic.actiontrigger</td>
<td>封装 Action 执行完成的触发器</td>
<td>execution_id, <br />status, start_timestamp, <br />action_name, action_ref, <br />runner_ref, <br />parameters, result</td>
</tr>
<tr>
<td>core.st2.generic.notifytrigger</td>
<td>通知触发器</td>
<td>execution_id, <br />status, start_timestamp, <br />end_timestamp, <br />action_ref, <br />runner_ref, <br />channel, route, <br />message, data</td>
</tr>
<tr>
<td>core.st2.action.file_written</td>
<td>触发封装 Action，将文件写入磁盘</td>
<td>ref, <br />file_path, <br />host_info</td>
</tr>
<tr>
<td>core.st2.generic.inquiry</td>
<td>触发器指示一个新的查询，表示已经进入 “pending” 状态</td>
<td>id, <br />route</td>
</tr>
</tbody>
</table>
<p>Sensor</p>
<table>
<thead>
<tr>
<th>Reference</th>
<th>Description</th>
<th>Properties</th>
</tr>
</thead>
<tbody>
<tr>
<td>core.st2.sensor.process_spawn</td>
<td>触发器去指示传感器，进程开始启动</td>
<td>object</td>
</tr>
<tr>
<td>core.st2.sensor.process_exit</td>
<td>触发器指示传感器，进程已经结束</td>
<td>object</td>
</tr>
</tbody>
</table>
<h2 id="如何创建一个-sensor">如何创建一个 Sensor</h2>
<p>创建传感器涉及编写 Python 脚本和定义 Sensor 的 YAML 元数据文件。以下是一个最小化 sensor 的结构示例。</p>
<p>元数据文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">class_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;SampleSensor&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">entry_point</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;sample_sensor.py&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Sample sensor that emits triggers.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">trigger_types</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>-<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;event&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;An example trigger.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">payload_schema</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;object&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">executed_at</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">format</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;date-time&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;2014-07-30 05:04:24.578325&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>相关 Python 脚本的结构，在脚本中，必须遵循该结构进行编写</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Copyright 2020 The StackStorm Authors.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Copyright 2019 Extreme Networks, Inc.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);</span>
</span></span><span class="line"><span class="cl"><span class="c1"># you may not use this file except in compliance with the License.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># You may obtain a copy of the License at</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     http://www.apache.org/licenses/LICENSE-2.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Unless required by applicable law or agreed to in writing, software</span>
</span></span><span class="line"><span class="cl"><span class="c1"># distributed under the License is distributed on an &#34;AS IS&#34; BASIS,</span>
</span></span><span class="line"><span class="cl"><span class="c1"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># See the License for the specific language governing permissions and</span>
</span></span><span class="line"><span class="cl"><span class="c1"># limitations under the License.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">st2reactor.sensor.base</span> <span class="kn">import</span> <span class="n">Sensor</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">SampleSensor</span><span class="p">(</span><span class="n">Sensor</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">    * self.sensor_service
</span></span></span><span class="line"><span class="cl"><span class="s2">        - provides utilities like
</span></span></span><span class="line"><span class="cl"><span class="s2">            - get_logger() - returns logger instance specific to this sensor.
</span></span></span><span class="line"><span class="cl"><span class="s2">            - dispatch() for dispatching triggers into the system.
</span></span></span><span class="line"><span class="cl"><span class="s2">    * self._config
</span></span></span><span class="line"><span class="cl"><span class="s2">        - contains parsed configuration that was specified as
</span></span></span><span class="line"><span class="cl"><span class="s2">          config.yaml in the pack.
</span></span></span><span class="line"><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">setup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 该方法系统仅调用一次，可以设置连接外部系统的内容到这里</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 该方法是 sensor 运行的方法</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 这由系统调用一次。</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#（如果您想定期睡觉并保持与外部系统交互，您将从 PollingSensor 继承。）</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 例如：例如，个简单的flask应用程序。您可以在此处运行 Flask 应用程序。</span>
</span></span><span class="line"><span class="cl">		<span class="c1"># 您可以使用sensor_service 调度触发器，如下所示：</span>
</span></span><span class="line"><span class="cl">         	<span class="c1">#  您可以将触发器称为dict</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># { &#34;name&#34;: ${trigger_name}, &#34;pack&#34;: ${trigger_pack} }</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 或者只是简单地作为字符串引用。</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># i.e. dispatch(${trigger_pack}.${trigger_name}, payload)</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># E.g.: dispatch(&#39;examples.foo_sensor&#39;, {&#39;k1&#39;: &#39;stuff&#39;, &#39;k2&#39;: &#39;foo&#39;})</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># trace_tag 是想要与dispatch的 TriggerInstance 关联的标签，</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 通常，trace_tag 是唯一的并且是对外部事件的引用。</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">cleanup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 当 st2 系统宕机时调用此函数。您可以执行清理操作，例如</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 在此关闭与外部系统的连接。</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">add_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 当创建触发器时调用此方法</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">update_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 当触发器更新时调用此方法</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">remove_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 删除触发器时调用此方法</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>上述是一个最简单的 Sensor 示例。</p>
<p>您的 Sensor 应生成 Python 字典形式的Trigger：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">trigger</span> <span class="o">=</span> <span class="s1">&#39;pack.name&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;executed_at&#39;</span><span class="p">:</span> <span class="s1">&#39;2014-08-01T00:00:00.000000Z&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">trace_tag</span> <span class="o">=</span> <span class="n">external_event_id</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Sensor 通过使用实例化时传递到 Sensor 的 sensor_service 来注入此类 Trigger。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">dispatch</span><span class="p">(</span><span class="n">trigger</span><span class="o">=</span><span class="n">trigger</span><span class="p">,</span> <span class="n">payload</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">trace_tag</span><span class="o">=</span><span class="n">trace_tag</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果您想要一个定期轮询外部系统的传感器，您可以使用 PollingSensor 而不是 Sensor 作为基类。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Copyright 2020 The StackStorm Authors.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Copyright 2019 Extreme Networks, Inc.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);</span>
</span></span><span class="line"><span class="cl"><span class="c1"># you may not use this file except in compliance with the License.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># You may obtain a copy of the License at</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     http://www.apache.org/licenses/LICENSE-2.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Unless required by applicable law or agreed to in writing, software</span>
</span></span><span class="line"><span class="cl"><span class="c1"># distributed under the License is distributed on an &#34;AS IS&#34; BASIS,</span>
</span></span><span class="line"><span class="cl"><span class="c1"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># See the License for the specific language governing permissions and</span>
</span></span><span class="line"><span class="cl"><span class="c1"># limitations under the License.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 这里引入的是 PollingSensor，而不是Sensor</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">st2reactor.sensor.base</span> <span class="kn">import</span> <span class="n">PollingSensor</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">SamplePollingSensor</span><span class="p">(</span><span class="n">PollingSensor</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">    * self.sensor_service
</span></span></span><span class="line"><span class="cl"><span class="s2">        - provides utilities like
</span></span></span><span class="line"><span class="cl"><span class="s2">            get_logger() for writing to logs.
</span></span></span><span class="line"><span class="cl"><span class="s2">            dispatch() for dispatching triggers into the system.
</span></span></span><span class="line"><span class="cl"><span class="s2">    * self._config
</span></span></span><span class="line"><span class="cl"><span class="s2">        - contains configuration that was specified as
</span></span></span><span class="line"><span class="cl"><span class="s2">          config.yaml in the pack.
</span></span></span><span class="line"><span class="cl"><span class="s2">    * self._poll_interval
</span></span></span><span class="line"><span class="cl"><span class="s2">        - indicates the interval between two successive poll() calls.
</span></span></span><span class="line"><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">setup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># Setup stuff goes here. For example, you might establish connections</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># to external system once and reuse it. This is called only once by the system.</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">poll</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 该方法是 sensor 运行的方法</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 这由系统在每个周期与性能一次，self._poll_interval。</span>
</span></span><span class="line"><span class="cl">		<span class="c1"># 例如：假设您想要查询 ec2 并获取有关实例的运行状况信息：</span>
</span></span><span class="line"><span class="cl">        <span class="n">some_data</span> <span class="o">=</span> <span class="n">aws_client</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_to_payload</span><span class="p">(</span><span class="n">some_data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        	<span class="c1"># _to_triggers 是您编写的用于将数据格式转换为标准 python 字典的东西。</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 这应该遵循为 Trigger 注册的有效负载架构。</span>
</span></span><span class="line"><span class="cl">       		<span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">dispatch</span><span class="p">(</span><span class="n">trigger</span><span class="p">,</span> <span class="n">payload</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">       		<span class="c1"># 您可以将触发器称为 dict</span>
</span></span><span class="line"><span class="cl">        	<span class="nb">dict</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;$</span><span class="si">{trigger_name}</span><span class="s2">&#34;</span><span class="p">,</span> <span class="s2">&#34;pack&#34;</span><span class="p">:</span> <span class="s2">&#34;$</span><span class="si">{trigger_pack}</span><span class="s2">&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">           	<span class="c1"># 或者简单引用一个字符串，i.e. </span>
</span></span><span class="line"><span class="cl">           	<span class="n">dispatch</span><span class="p">(</span><span class="err">$</span><span class="p">{</span><span class="n">trigger_pack</span><span class="p">}</span><span class="o">.</span><span class="err">$</span><span class="p">{</span><span class="n">trigger_name</span><span class="p">},</span> <span class="n">payload</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 再例如</span>
</span></span><span class="line"><span class="cl">            <span class="n">dispatch</span><span class="p">(</span><span class="s1">&#39;examples.foo_sensor&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;k1&#39;</span><span class="p">:</span> <span class="s1">&#39;stuff&#39;</span><span class="p">,</span> <span class="s1">&#39;k2&#39;</span><span class="p">:</span> <span class="s1">&#39;foo&#39;</span><span class="p">})</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># trace_tag 是想要与dispatch的 TriggerInstance 关联的标签，</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 通常，trace_tag 是唯一的并且是对外部事件的引用。</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">cleanup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 当 st2 系统宕机时调用此函数。您可以执行清理操作，例如</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 在此关闭与外部系统的连接。</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">add_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 当创建触发器时调用此方法</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">update_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 当触发器更新时调用此方法</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">remove_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 删除触发器时调用此方法</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>上述是一个 Poll Sensor 代码部分是结构的，setup 是装载时执行，poll 是在每个 interval 执行探测，这里的机制是当完成了派发后是不会第二次派发，这里做法是维护了一个列表到类中。</p>
<p>例如</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">aa2233</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">ACG-3612</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>{<span class="nt">&#39;ACG-3612&#39;: &lt;JIRA Issue</span><span class="p">:</span><span class="w"> </span><span class="l">key=&#39;ACG-3612&#39;, id=&#39;212268&#39;&gt;}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>注：轮询传感器 (Polling Sensors) 还需要元数据文件中的 <em>poll_interval</em> 参数。这定义了调用 <code>poll()</code> 方法的频率（以秒为单位）。</p>
</blockquote>
<h2 id="sersor如何运行">Sersor如何运行</h2>
<p>每个传感器作为单独的进程运行。 <strong><code>st2sensorcontainer</code></strong> 启动 <strong><code>sensor_wrapper.py</code></strong> ，它将您的 <strong><code>Sensor</code></strong>  类（例如上面的SampleSensor 或 SamplePollingSenso r）包装在 <strong><code>st2reactor.container.sensor_wrapper.SensorWrapper</code></strong> 中。</p>
<h3 id="sensor-service">Sensor Service</h3>
<p>正如您在上面的示例中看到的，<strong>sensor_service</strong> 在实例化时被传递给每个传感器类构造函数。</p>
<p>传感器服务 (Sensor Service) 通过公共方法向 Sensor 提供不同的服务。最重要的一种 <code>dispatch</code> 方法是允许 Sensor 将 Trigger 注入系统的方法。所有公共方法描述如下：</p>
<ul>
<li>常用操作，Common Operations</li>
<li>数据存储管理操作 Datastore Management Operations</li>
</ul>
<h3 id="common-operations">Common Operations</h3>
<h4 id="dispatch">dispatch</h4>
<p>调度：此方法允许传感器将触发器注入系统</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">dispatch</span><span class="p">(</span><span class="n">trigger</span><span class="p">,</span> <span class="n">payload</span><span class="p">,</span> <span class="n">trace_tag</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">trigger</span> <span class="o">=</span> <span class="s1">&#39;pack.name&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;executed_at&#39;</span><span class="p">:</span> <span class="s1">&#39;2014-08-01T00:00:00.000000Z&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">trace_tag</span> <span class="o">=</span> <span class="n">uuid</span><span class="o">.</span><span class="n">uuid4</span><span class="p">()</span><span class="o">.</span><span class="n">hex</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">dispatch</span><span class="p">(</span><span class="n">trigger</span><span class="o">=</span><span class="n">trigger</span><span class="p">,</span> <span class="n">payload</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">trace_tag</span><span class="o">=</span><span class="n">trace_tag</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="get_logger">get_logger</h4>
<p>此方法允许 Sensor 实例检索特定于该传感器的记录器实例。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">get_logger(name)</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="bp">self</span><span class="o">.</span><span class="n">_logger</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">get_logger</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__name__</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="bp">self</span><span class="o">.</span><span class="n">_logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s1">&#39;Polling 3rd party system for information&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="datastore-management-operations">Datastore Management Operations</h3>
<p>除了触发器注入之外，传感器服务还提供读取和操作数据存储的功能。</p>
<p>每个传感器都有一个本地命名空间，默认情况下，所有数据存储操作都对该 Sensor “本地命名空间” 中的键进行操作。如果要对“全局命名空间”进行操作，则需要将参数传递 <em><strong><code>local=False </code></strong></em> 给数据存储操作方法。</p>
<p>除其他原因外，如果想在传感器运行之间保留临时数据，此功能非常有用。</p>
<p>TwitterSensor 就是此功能的一个很好的例子。 Twitter 传感器在每次轮询后都会在数据存储中保留最后处理的推文的 ID。这样，如果 Trigger 重新启动或崩溃，传感器可以从中断处恢复，而无需向系统注入重复的 Trigger。</p>
<h4 id="list_values">list_values</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">list_values</span><span class="p">(</span><span class="n">local</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">prefix</span><span class="o">=</span><span class="kc">None</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>该方法允许列出数据存储中的值。您还可以通过将 <code>prefix</code> 参数传递给方法来按键名称前缀（键名称开头）进行过滤：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">kvps</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">list_values</span><span class="p">(</span><span class="n">local</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">prefix</span><span class="o">=</span><span class="s1">&#39;cmdb.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">kvp</span> <span class="ow">in</span> <span class="n">kvps</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">kvp</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">kvp</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="get_value">get_value</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">get_value</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">local</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">decrypt</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>此方法允许您从数据存储中检索单个值：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">kvp</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="s1">&#39;cmdb.api_host&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">kvp</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="set_value">set_value</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">set_value</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">ttl</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">local</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">encrypt</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>该方法允许在数据存储中存储设置一个值。您还可以选择指定存储值的生存时间 (TTL)：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">last_id</span> <span class="o">=</span> <span class="mi">12345</span>
</span></span><span class="line"><span class="cl"><span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">set_value</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;last_id&#39;</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">last_id</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Secret 值可以在存储中中加密：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">ma_password</span> <span class="o">=</span> <span class="s1">&#39;Sup3rS34et&#39;</span>
</span></span><span class="line"><span class="cl"><span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">set_value</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;ma_password&#39;</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="n">ma_password</span><span class="p">,</span> <span class="n">encrypt</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="delete_value">delete_value</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">delete_value</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">local</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>该方法允许从存储中删除现有值。如果未找到值，此方法将返回 False，否则返回 True。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">delete_value</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;my_key&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="定义一个-sersor">定义一个 Sersor</h2>
<p>例如我们需要制作一个简单 Sensor 的工作示例，每 60 秒注入一次触发器。</p>
<p>需要注意的部分：</p>
<ul>
<li>
<p>Sensor 的 Python 的类必需继承 Sensor 或 PollingSensor类，这个由需求而定，必须实现 setup, poll, dispatch等方法</p>
<ul>
<li>如有需求，例如变量声明，也可以重写 _<em>init</em>_ 类</li>
<li>setup方法，用于初始化示例需要的数据或状态，例如连接三方系统的配置信息，该方法只执行一次</li>
<li>Sensor runtime 會把实例化并保持运行，按 poll_interval 設置周期去运行 poll 方法</li>
</ul>
</li>
<li>
<p>Poll方法是真实执行任务的部分，可在 poll 方法中更新示例持有的数据或状态，判断数据是否匹配，</p>
</li>
<li>
<p>然后运行 disptach； 按需派发数据，dispatch方法会派发数据，把数据派发给 _trigger_ref</p>
<ul>
<li>_trigger_ref 是 Sensor 设置的 trigger type，也就是 RabbitMQ 的 Queue 名称</li>
</ul>
</li>
</ul>
<h3 id="元数据定义">元数据定义</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">class_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;HelloSensor&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">entry_point</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;sensor1.py&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Test sensor that emits triggers.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger_types</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>-<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;event1&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;An example trigger.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">payload_schema</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;object&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="python-代码部分">Python 代码部分</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Copyright 2020 The StackStorm Authors.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Copyright 2019 Extreme Networks, Inc.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);</span>
</span></span><span class="line"><span class="cl"><span class="c1"># you may not use this file except in compliance with the License.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># You may obtain a copy of the License at</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     http://www.apache.org/licenses/LICENSE-2.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Unless required by applicable law or agreed to in writing, software</span>
</span></span><span class="line"><span class="cl"><span class="c1"># distributed under the License is distributed on an &#34;AS IS&#34; BASIS,</span>
</span></span><span class="line"><span class="cl"><span class="c1"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># See the License for the specific language governing permissions and</span>
</span></span><span class="line"><span class="cl"><span class="c1"># limitations under the License.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">eventlet</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">st2reactor.sensor.base</span> <span class="kn">import</span> <span class="n">Sensor</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HelloSensor</span><span class="p">(</span><span class="n">Sensor</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sensor_service</span><span class="p">,</span> <span class="n">config</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">(</span><span class="n">HelloSensor</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">sensor_service</span><span class="o">=</span><span class="n">sensor_service</span><span class="p">,</span> <span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_logger</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">get_logger</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__name__</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_stop</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">setup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_stop</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">_logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s2">&#34;HelloSensor dispatching trigger...&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">count</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="s2">&#34;hello_st2.count&#34;</span><span class="p">)</span> <span class="ow">or</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">            <span class="n">payload</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;greeting&#34;</span><span class="p">:</span> <span class="s2">&#34;Yo, StackStorm!&#34;</span><span class="p">,</span> <span class="s2">&#34;count&#34;</span><span class="p">:</span> <span class="nb">int</span><span class="p">(</span><span class="n">count</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">dispatch</span><span class="p">(</span><span class="n">trigger</span><span class="o">=</span><span class="s2">&#34;hello_st2.event1&#34;</span><span class="p">,</span> <span class="n">payload</span><span class="o">=</span><span class="n">payload</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">sensor_service</span><span class="o">.</span><span class="n">set_value</span><span class="p">(</span><span class="s2">&#34;hello_st2.count&#34;</span><span class="p">,</span> <span class="n">payload</span><span class="p">[</span><span class="s2">&#34;count&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="n">eventlet</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">60</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">cleanup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_stop</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># Methods required for programmable sensors.</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">add_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">update_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">remove_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="sensor的运行与调试">Sensor的运行与调试</h2>
<h3 id="运行">运行</h3>
<p>一旦完成传感器的编写，可以使用以下步骤来首次运行传感器：</p>
<ol>
<li>将传感器 Python 文件和 元数据文件 放入 <em>default</em>  包中的 <em>/opt/stackstorm/packs/default/sensors/</em> ；或者您也可以根据包结构，创建出自定义包并将传感器元件放置在那里 ( <em>/opt/stackstorm/packs/</em> )</li>
<li>使用 <code>st2ctl</code> 注册传感器 。注意传感器注册中的任何错误，一旦注册时出现错误，请修复错误并使用 重新注册 。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2ctl reload --register-all
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>如果注册成功，传感器将自动运行。</li>
</ol>
<h3 id="调试">调试</h3>
<p>在编写时，很多时候需要调试 Sensor 的运行，而由于环境问题，我们无法做到正常Python程序的调试步骤，必须遵循 Stackstorm 的调试方式。</p>
<p>如果只想运行包中的单个传感器并且该传感器已注册，则可以使用 <code>st2sensorcontainer</code> 来仅运行该单个传感器：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo /opt/stackstorm/st2/bin/st2sensorcontainer --config-file<span class="o">=</span>/etc/st2/st2.conf --sensor-ref<span class="o">=</span>pack.SensorClassName
</span></span></code></pre></td></tr></table>
</div>
</div><p>例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo /opt/stackstorm/st2/bin/st2sensorcontainer --config-file<span class="o">=</span>/etc/st2/st2.conf --sensor-ref<span class="o">=</span>git.GitCommitSensor
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="示例jira服务台">示例：Jira服务台</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># See ./requirements.txt for requirements.</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">urllib3</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">json</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">jira.client</span> <span class="kn">import</span> <span class="n">JIRA</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">st2reactor.sensor.base</span> <span class="kn">import</span> <span class="n">PollingSensor</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">XinMangSensorForPodMapTicket</span><span class="p">(</span><span class="n">PollingSensor</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">    Sensor will monitor for any new projects created in JIRA and
</span></span></span><span class="line"><span class="cl"><span class="s1">    emit trigger instance when one is created.
</span></span></span><span class="line"><span class="cl"><span class="s1">    &#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sensor_service</span><span class="p">,</span> <span class="n">config</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">poll_interval</span><span class="o">=</span><span class="mi">5</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">(</span><span class="n">XinMangSensorForPodMapTicket</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">sensor_service</span><span class="o">=</span><span class="n">sensor_service</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                                 <span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                                 <span class="n">poll_interval</span><span class="o">=</span><span class="n">poll_interval</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_jira_url</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_config</span>  <span class="o">=</span> <span class="p">{</span> 
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;url&#34;</span><span class="p">:</span> <span class="s2">&#34;https://jira.ticket.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;auth_method&#34;</span><span class="p">:</span> <span class="s2">&#34;basic&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;username&#34;</span><span class="p">:</span> <span class="s2">&#34;jira_automation&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;password&#34;</span><span class="p">:</span> <span class="s2">&#34;jira123&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;poll_interval&#34;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;verify&#34;</span><span class="p">:</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># The Consumer Key created while setting up the &#34;Incoming Authentication&#34; in</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># JIRA for the Application Link.</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_consumer_key</span> <span class="o">=</span> <span class="sa">u</span><span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_rsa_key</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_jira_client</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_access_token</span> <span class="o">=</span> <span class="sa">u</span><span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_access_secret</span> <span class="o">=</span> <span class="sa">u</span><span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_projects_available</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;SABP&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_poll_interval</span> <span class="o">=</span> <span class="mi">30</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_project</span> <span class="o">=</span> <span class="s2">&#34;SABP&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_issues_in_project</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_customer_request_type</span> <span class="o">=</span> <span class="s2">&#34;创建Pod映射&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_issue_status</span> <span class="o">=</span> <span class="s2">&#34;IN PROGRESS&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_jql_query</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_trigger_name</span> <span class="o">=</span> <span class="s1">&#39;issues_tracker_for_pod_map_ticket&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_trigger_pack</span> <span class="o">=</span> <span class="s1">&#39;jira&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_trigger_ref</span> <span class="o">=</span> <span class="s1">&#39;.&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="bp">self</span><span class="o">.</span><span class="n">_trigger_pack</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_trigger_name</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">        <span class="n">urllib3</span><span class="o">.</span><span class="n">disable_warnings</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_read_cert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">file_path</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">setup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_jira_url</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;url&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">auth_method</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;auth_method&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">auth_method</span> <span class="o">==</span> <span class="s1">&#39;oauth&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rsa_cert_file</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;rsa_cert_file&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">rsa_cert_file</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s1">&#39;Cert file for JIRA OAuth not found at </span><span class="si">%s</span><span class="s1">.&#39;</span> <span class="o">%</span> <span class="n">rsa_cert_file</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">_rsa_key</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_read_cert</span><span class="p">(</span><span class="n">rsa_cert_file</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">_poll_interval</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;poll_interval&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_poll_interval</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">oauth_creds</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;access_token&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;oauth_token&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;access_token_secret&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;oauth_secret&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;consumer_key&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;consumer_key&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;key_cert&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">_rsa_key</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">_jira_client</span> <span class="o">=</span> <span class="n">JIRA</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;server&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">_jira_url</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">                                     <span class="n">oauth</span><span class="o">=</span><span class="n">oauth_creds</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">auth_method</span> <span class="o">==</span> <span class="s1">&#39;basic&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">basic_creds</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;username&#39;</span><span class="p">],</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;password&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">_jira_client</span> <span class="o">=</span> <span class="n">JIRA</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;server&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">_jira_url</span><span class="p">,</span> <span class="s1">&#39;verify&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">_config</span><span class="p">[</span><span class="s1">&#39;verify&#39;</span><span class="p">]},</span><span class="n">basic_auth</span><span class="o">=</span><span class="n">basic_creds</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="c1">#self._jira_client = JIRA(options={&#39;server&#39;: self._jira_url},basic_auth=basic_creds)</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">msg</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;You must set auth_method to either &#34;oauth&#34;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                   <span class="s1">&#39;or &#34;basic&#34; your jira.yaml config file.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_jql_query</span> <span class="o">=</span> <span class="s1">&#39;project=&#34;</span><span class="si">%s</span><span class="s1">&#34; and &#34;Customer Request Type&#34;=&#34;</span><span class="si">%s</span><span class="s1">&#34; and status=&#34;</span><span class="si">%s</span><span class="s1">&#34;&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_project</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_customer_request_type</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_issue_status</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">all_issues</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_jira_client</span><span class="o">.</span><span class="n">search_issues</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_jql_query</span><span class="p">,</span> <span class="n">maxResults</span><span class="o">=</span><span class="kc">None</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_issues_in_project</span> <span class="o">=</span> <span class="p">{</span><span class="n">issue</span><span class="o">.</span><span class="n">key</span><span class="p">:</span> <span class="n">issue</span> <span class="k">for</span> <span class="n">issue</span> <span class="ow">in</span> <span class="n">all_issues</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">poll</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_detect_new_issues</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">cleanup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">add_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">update_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">remove_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">trigger</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_detect_new_issues</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">new_issues</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_jira_client</span><span class="o">.</span><span class="n">search_issues</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_jql_query</span><span class="p">,</span> <span class="n">maxResults</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">startAt</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">issue</span> <span class="ow">in</span> <span class="n">new_issues</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># issue 满足需求的工单</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_issues_in_project</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 将服务台任务单保留到这个列表中，保证不会重复派发</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">issue</span><span class="o">.</span><span class="n">key</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">_issues_in_project</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 记录下未派发的任务，并派发</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">_dispatch_issues_trigger</span><span class="p">(</span><span class="n">issue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">_issues_in_project</span><span class="p">[</span><span class="n">issue</span><span class="o">.</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">issue</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_dispatch_issues_trigger</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">issue</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">trigger</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_trigger_ref</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span><span class="p">[</span><span class="s1">&#39;project&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_project</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">issue</span><span class="o">.</span><span class="n">id</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span><span class="p">[</span><span class="s1">&#39;expand&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">issue</span><span class="o">.</span><span class="n">raw</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;expand&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span><span class="p">[</span><span class="s1">&#39;issue_key&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">issue</span><span class="o">.</span><span class="n">key</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span><span class="p">[</span><span class="s1">&#39;issue_url&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">issue</span><span class="o">.</span><span class="n">self</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span><span class="p">[</span><span class="s1">&#39;issue_browse_url&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_jira_url</span> <span class="o">+</span> <span class="s1">&#39;/browse/&#39;</span> <span class="o">+</span> <span class="n">issue</span><span class="o">.</span><span class="n">key</span>
</span></span><span class="line"><span class="cl">        <span class="n">fields</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">fields</span> <span class="o">=</span> <span class="n">issue</span><span class="o">.</span><span class="n">raw</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;fields&#39;</span><span class="p">,</span> <span class="p">{})</span>
</span></span><span class="line"><span class="cl">        <span class="n">fields_dict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">fields</span><span class="p">[</span><span class="s1">&#39;customfield_19402&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="n">fields_dict</span><span class="p">[</span><span class="s1">&#39;pod_name&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s1">&#39;customfield_19401&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">fields_dict</span><span class="p">[</span><span class="s1">&#39;start_time&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s1">&#39;customfield_19402&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">fields_dict</span><span class="p">[</span><span class="s1">&#39;end_time&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s1">&#39;customfield_19403&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">fields_dict</span><span class="p">[</span><span class="s1">&#39;k8s_cluster&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s1">&#39;customfield_19404&#39;</span><span class="p">][</span><span class="s1">&#39;value&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">fields_dict</span><span class="p">[</span><span class="s1">&#39;reporter&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s1">&#39;reporter&#39;</span><span class="p">][</span><span class="s1">&#39;key&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span><span class="p">[</span><span class="s1">&#39;fields&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">fields_dict</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">fields_dict</span><span class="p">[</span><span class="s1">&#39;reporter&#39;</span><span class="p">]</span> <span class="o">!=</span> <span class="s1">&#39;a@gmail.com&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">_sensor_service</span><span class="o">.</span><span class="n">dispatch</span><span class="p">(</span><span class="n">trigger</span><span class="p">,</span> <span class="n">payload</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="reference">Reference</h2>
<p><sup id="1">[1]</sup> <a href="https://docs.stackstorm.com/sensors.html">Sensors and Triggers</a></p>
<p><sup id="2">[2]</sup> <a href="https://akuity.io/blog/argo-cd-architectures-explained/">How many do you need? - Argo CD Architectures Explained</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>StackStorm自动化 - 包</title>
      <link>https://www.oomkill.com/2023/11/stackstorm-pack/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2023/11/stackstorm-pack/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="什么是包">什么是包</h2>
<p>包 “pack” 是扩展 StackStorm 的集成和自动化的部署单元。通常， pack 是沿着服务或产品边界组织的，例如 AWS、Docker、Sensu 等。  pack 包含Actions、Workflows、Rules、 Sensors和Aliases。StackStorm 内容始终是 pack 的一部分，因此了解如何创建 pack 并使用它们非常重要。</p>
<p>一些 pack 扩展了 StackStorm 以将其与外部系统集成，例如 AWS，GitHub，JIRA。我们称它们为“集成 pack ”。有些 pack 捕获自动化模式：这类 pack 含特定自动化过程的 workflow, Rule 和 Action - 例如st2 演示 pack 。我们称它们为“自动化 pack ”。这种命名主要是一种约定：StackStorm 本身对两者没有区别。</p>
<p>任何使用该 pack 所针对的服务的人都可以共享和重用集成 pack 。您可以在StackStorm Exchange找到许多这样的示例。自动化 pack 通常是特定于站点的，并且在特定团队或公司之外几乎没有用处；它们通常在内部共享。</p>
<p>总结：Packs是StackStorm中组织工作流、动作和传感器的方式。它们是一组相关的动作、工作流和传感器的集合，通常用于实现特定的自动化任务或集成。</p>
<h2 id="包管理">包管理</h2>
<p>StackStorm  pack 通过命令进行管理：将为您提供有用的概述。<code>st2 pack &lt;...&gt;</code> / <code>st2 pack -h</code>
有些（例如core 基本 StackStorm action）是随 StackStorm 预装的。所有其他 pack 都需要您安装。幸运的是，这很容易！
list和get是获取有关本地 pack 信息的主要命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># List all installed packs</span>
</span></span><span class="line"><span class="cl">st2 pack list
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Get detailed information about an installed pack</span>
</span></span><span class="line"><span class="cl">st2 pack get core
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用 StackStorm 和 pack 管理 Action 时，所有 pack 都会安装到系统 pack 目录中，默认为 <strong>/opt/stackstorm/packs/</strong>.</p>
<p>除了可以安装本地的包，还可以安装社区维护的包，已有一百多个 StackStorm  pack 您可以在 exchange.stackstorm.org 浏览包列表，或通过 CLI 搜索 pack 索引，st2 search 需要联网使用，大部分 stackstorm 包 已经不再更新，使用较多的为 jira, 定时任务，脚本类。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 pack searchst2 pack show
</span></span><span class="line"><span class="cl"><span class="c1"># Search query is applied across all pack parameters.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># It will search through pack names:</span>
</span></span><span class="line"><span class="cl">st2 pack search sensu
</span></span><span class="line"><span class="cl"><span class="c1"># And keywords:</span>
</span></span><span class="line"><span class="cl">st2 pack search monitoring
</span></span><span class="line"><span class="cl"><span class="c1"># And description (use quotes for multi-word search):</span>
</span></span><span class="line"><span class="cl">st2 pack search <span class="s2">&#34;Amazon Web Services&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># And even pack author:</span>
</span></span><span class="line"><span class="cl">st2 pack search <span class="s2">&#34;Jon Middleton&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Show an index entry for the pack</span>
</span></span><span class="line"><span class="cl"><span class="c1"># with the exact name match</span>
</span></span><span class="line"><span class="cl">st2 pack show sensu
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装包">安装包</h3>
<h3 id="从-stackstorm-官方仓库安装">从 stackstorm 官方仓库安装</h3>
<p>stackstorm pack 安装起来很简单</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Install from the Exchange by pack name</span>
</span></span><span class="line"><span class="cl">st2 pack install sensu
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># You can also install multiple packs:</span>
</span></span><span class="line"><span class="cl">st2 pack install datadog github
</span></span></code></pre></td></tr></table>
</div>
</div><p>此命令将会从GitHub 上的 StackStorm Exchange 仓库下载包，将它们放在 下<code>/opt/stackstorm/packs</code>，并向 StackStorm 注册它们。</p>
<p>本质上，用户可以同样轻松地使用名从 git 安装属于自己的包。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Install your own pack from git using http(s)</span>
</span></span><span class="line"><span class="cl">st2 pack install https://github.com/emedvedev/chatops_tutorial
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install your own pack from git using ssh</span>
</span></span><span class="line"><span class="cl">st2 pack install git@github.com/emedvedev/chatops_tutorial
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install your own pack using gitlab URL (added in release 3.4)</span>
</span></span><span class="line"><span class="cl">st2 pack install gitlab@gitlab.com:example/examplepack
</span></span></code></pre></td></tr></table>
</div>
</div><p>默认情况下，将安装最新版本的 pack ，但您可以指定特定版本、分支、tag，甚至提交哈希。只需使用下面命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Fetch a specific commit</span>
</span></span><span class="line"><span class="cl">st2 pack install <span class="nv">cloudflare</span><span class="o">=</span>776b9a4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Or a version tag</span>
</span></span><span class="line"><span class="cl">st2 pack install <span class="nv">cloudflare</span><span class="o">=</span>0.1.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Or a branch</span>
</span></span><span class="line"><span class="cl">st2 pack install https://github.com/emedvedev/chatops_tutorial<span class="o">=</span>testing
</span></span></code></pre></td></tr></table>
</div>
</div><p>也可以从现有的本地目录安装 pack ：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Install a pack from &#39;/home/stanley/bitcoin&#39; dir</span>
</span></span><span class="line"><span class="cl">st2 pack install file:///home/stanley/bitcoin
</span></span></code></pre></td></tr></table>
</div>
</div><p>需要注意的一点是，从 git 存储库目录安装 pack 将仅安装最新提交，并忽略对文件的任何后续未提交更改。在已安装的 pack 上运行会将其替换为请求的版本，或者如果未指定版本，则升级到最新版本。您的配置文件不会被覆盖，因此您可以轻松恢复到旧版本，但对于生产部署，我们建议始终指定版本，防止 <code>st2 pack install latest</code></p>
<h3 id="包依赖">包依赖</h3>
<blockquote>
<p>依赖是从 StackStorm 3.2 开始的新功能！</p>
</blockquote>
<p>如果您的包使用其他包中的 Action，您可以在文件 <code>dependencies</code> 的 部分中指定它们 <code>pack.yaml</code>，StackStorm 将在安装您的包时自动安装它们。</p>
<p>与使用子命令类似，您可以仅使用名称来引用 StackStorm Exchange 中的包，也可以指定包的 Git 存储库 URL。您还可以使用相同的语法来安装特定版本、标签或分支：<code>st2 pack install</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">dependencies</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">excel</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">powerpoint=0.2.2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">https://github.com/StackStorm/stackstorm-ms.git</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>如果存在依赖性冲突，子命令可能会出错，而不会安装任何包。如果您想强制安装包而不安装其依赖项，您可以使用以下标志：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 pack install --skip-dependencies my-custom-pack
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="包卸载">包卸载</h3>
<p>卸载包使用 <code>st2 pack remove</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 pack remove sensu
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置包">配置包</h2>
<p>集成一个包（pack）通常需要针对您的环境进行配置。例如，您需要指定 SMTP 服务器以使用电子邮件 pack 、指定 puppet master URL 以使用 Puppet  pack ，或者指定 OpenStack 的 Keystone 端点和租户凭证。</p>
<p>通常大多数需要配置的 pack 都可以交互配置：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 pack config &lt;pack_name&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>系统将提示您在交互式工具中输入配置参数，其中包含说明、建议和默认值。在保存之前，您还会被要求在文本编辑器中验证您的最终配置文件；它是可选的，大多数包不需要超过两个或三个字段。生成的文件将被放入 <code>/opt/stackstorm/configs/&lt;pack&gt;.yaml</code> 并加载。</p>
<blockquote>
<p>注意：StackStorm 将 pack 配置加载到 MongoDB 中。当您使用 st2 pack config 时，它会自动加载 。但是如果您手动编辑 pack 配置，或使用配置管理工具来管理这些文件，则必须告诉StackStorm 加载更新的配置。</p>
</blockquote>
<p>更新包配置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo st2ctl reload --register-configs
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="覆盖包的默认值">覆盖包的默认值</h2>
<p>安装包时，资源的状态是从包中的元数据文件中获取的。有时，在安装社区包时，您可能不希望启用所有资源，例如您只想使用 Action 的子集，或者想要禁用传感器。</p>
<p>在 StackStorm 3.7.0 之前，可以通过以下方式更改此状态：</p>
<blockquote>
<ul>
<li>使用 StackStorm API 禁用资源。然而，在重新安装或包重新安装时，这将被忘记。<code>st2ctl reload</code></li>
<li>手动更改元数据文件。这将在升级时丢失，并且无法轻易跟踪。</li>
</ul>
</blockquote>
<p>在StackStorm 3.7.0中，我们引入了覆盖功能，以便包资源的元数据可以被配置文件覆盖。这将始终在重新加载或包安装时被读取。 ST2 API 仍然允许您覆盖此设置，但与以前一样，StackStorm API 为启用/禁用资源所做的任何更改在重新加载或重新安装时都会被忘记。</p>
<p>覆盖工具当前仅限于允许仅针对以下类型的资源覆盖启用的属性：Action、Alias、Rule 和 Sensor。它由目录 <code>/opt/stackstorm/overrides</code> 控制 。</p>
<p>安装包或重载时，资源状态按如下方式管理：</p>
<ul>
<li>状态是从位于 中的包的资源元数据文件中读取的<code>/opt/stackstorm/packs/&lt;packname&gt;</code>。这些是从包的相关存储库下载的，例如 GIT, StackStorm-Exchange。</li>
<li>如果 <em>/opt/stackstorm/overrides/_global.yaml</em> 存在，这回应用这个包的默认值或特定于资源的覆盖。允许 <code>_global.yaml</code> 您指定特定资源类型的默认状态，例如禁用所有 Sensor。</li>
<li><code>_global.yaml</code> 的格式如下（设置为禁用所有内容）：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">sensors:
</span></span><span class="line"><span class="cl">  defaults:
</span></span><span class="line"><span class="cl">    enabled: false
</span></span><span class="line"><span class="cl">actions:
</span></span><span class="line"><span class="cl">  defaults:
</span></span><span class="line"><span class="cl">    enabled: false
</span></span><span class="line"><span class="cl">aliases:
</span></span><span class="line"><span class="cl">  defaults:
</span></span><span class="line"><span class="cl">    enabled: false
</span></span><span class="line"><span class="cl">rules:
</span></span><span class="line"><span class="cl">  defaults:
</span></span><span class="line"><span class="cl">    enabled: false
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果发生了覆盖，则受影响的资源数量将在 Output 中输出，例如：<code>st2ctl reload</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ st2ctl reload --register-all
</span></span><span class="line"><span class="cl">Registering content...<span class="o">[</span><span class="nv">flags</span> <span class="o">=</span> --config-file /etc/st2/st2.conf --register-all<span class="o">]</span>
</span></span><span class="line"><span class="cl">2022-02-07 12:56:43,694 INFO <span class="o">[</span>-<span class="o">]</span> Connecting to database <span class="s2">&#34;st2&#34;</span> @ <span class="s2">&#34;127.0.0.1:27017&#34;</span> as user <span class="s2">&#34;None&#34;</span>.
</span></span><span class="line"><span class="cl">2022-02-07 12:56:43,704 INFO <span class="o">[</span>-<span class="o">]</span> Successfully connected to database <span class="s2">&#34;st2&#34;</span> @ <span class="s2">&#34;127.0.0.1:27017&#34;</span> as user <span class="s2">&#34;None&#34;</span>.
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,254 INFO <span class="o">[</span>-<span class="o">]</span> <span class="o">=========================================================</span>
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,254 INFO <span class="o">[</span>-<span class="o">]</span> <span class="c1">############## Registering triggers #####################</span>
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,254 INFO <span class="o">[</span>-<span class="o">]</span> <span class="o">=========================================================</span>
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,549 INFO <span class="o">[</span>-<span class="o">]</span> Registered <span class="m">1</span> triggers.
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,549 INFO <span class="o">[</span>-<span class="o">]</span> <span class="o">=========================================================</span>
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,549 INFO <span class="o">[</span>-<span class="o">]</span> <span class="c1">############## Registering sensors ######################</span>
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,549 INFO <span class="o">[</span>-<span class="o">]</span> <span class="o">=========================================================</span>
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,832 INFO <span class="o">[</span>-<span class="o">]</span> Registered <span class="m">9</span> sensors.
</span></span><span class="line"><span class="cl">2022-02-07 12:56:44,832 INFO <span class="o">[</span>-<span class="o">]</span> <span class="m">7</span> sensors had their metadata overridden.
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="示例禁用一个包中的所有sersor">示例：禁用一个包中的所有Sersor</h4>
<p>如果要禁用一个包中的所有传感器，我们将创建一个 <code>/opt/stackstorm/overrides/&lt;packname&gt;.yaml</code> 文件，包含以下内容的 sensor：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">sensors</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">defaults</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="示例禁用所有包中的所有传感器排除某个包">示例：禁用所有包中的所有传感器（排除某个包）</h4>
<p>相反，如果我们想覆盖除单个包之外的所有传感器，那么我们将创建一个<code>/opt/stackstorm/overrides/_global.yaml</code>来禁用所有传感器：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">sensors:
</span></span><span class="line"><span class="cl">  defaults:
</span></span><span class="line"><span class="cl">    enabled: <span class="nb">false</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后创建 <code>/opt/stackstorm/overrides/&lt;packname&gt;.yaml</code>，为所需的包启用 Sensor</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">sensors:
</span></span><span class="line"><span class="cl">  defaults:
</span></span><span class="line"><span class="cl">    enabled: <span class="nb">true</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="示例禁用包的action但排除某些action">示例：禁用包的Action，但排除某些Action</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">actions:
</span></span><span class="line"><span class="cl">  defaults:
</span></span><span class="line"><span class="cl">    enabled: <span class="nb">false</span>
</span></span><span class="line"><span class="cl">  exceptions:
</span></span><span class="line"><span class="cl">    action1:
</span></span><span class="line"><span class="cl">      enabled: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">    action2:
</span></span><span class="line"><span class="cl">      enabled: <span class="nb">true</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="示例禁用包中某一个rule">示例：禁用包中某一个Rule</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">rules</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">exceptions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">rule1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="虚拟环境">虚拟环境</h2>
<p>在 StackStorm 中，所有包的所有任务都是基于Python虚拟环境运行，以便区隔及管理各个包的Python套件。系统自带包使用系统自带的虚拟环境，位于目录：<code>/opt/stackstorm/st2/</code></p>
<p>通常，自建的包则需在/opt/stackstorm/virtualenvs目录下创建跟包同样名称的Python虚拟环境。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ tree virtualenvs/ -L <span class="m">2</span>
</span></span><span class="line"><span class="cl">virtualenvs/
</span></span><span class="line"><span class="cl">├── crontab
</span></span><span class="line"><span class="cl">│   ├── bin
</span></span><span class="line"><span class="cl">│   ├── include
</span></span><span class="line"><span class="cl">│   ├── lib
</span></span><span class="line"><span class="cl">│   ├── lib64 -&gt; lib
</span></span><span class="line"><span class="cl">│   └── pyvenv.cfg
</span></span><span class="line"><span class="cl">.....
</span></span></code></pre></td></tr></table>
</div>
</div><p>在包运行时，需要提前为包含 Python Action/Sensor 的每个包创建一个 Python 虚拟环境 <code>/opt/stackstorm/virtualenv</code>，Python 依赖将通过 <code>pip -rrequirements.txt</code> 安装在 virtualenv 中，这部分是 Stackstorm 自动处理。</p>
<blockquote>
<p>StackStorm v3.4.0 中删除了对 Python 2 的支持。请考虑更新任何仅适用于 Python 2 的包以与 Python 3 配合使用。</p>
</blockquote>
<p>如果在 offline 环境中，需要创建一个自定义包，那么需要手动创建对应的虚拟环境，例如，在/opt/stackstorm/virtualenvs目录运行下列命令创建包的虚拟环境。也可以使用 ln 命令创建文件连接。x</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ python -m venv package_name
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>StackStorm自动化 - Rules</title>
      <link>https://www.oomkill.com/2023/11/stackstorm-rules/</link>
      <pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2023/11/stackstorm-rules/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>StackStorm 使用 Rules 和 Workflows 来捕获操作模式并进行自动化。rule将 Triggers 映射到 Actions（或 Workflow），应用匹配条件( Criteria)，并将  Triggers payloads 映射到 Actions 的 Input。</p>
<p>注意</p>
<p>rule不按预期工作吗？请查看rule故障排除文档。其中介绍了rule测试、检查执行、记录和故障排除等内容。</p>
<h2 id="rule-的配置结构">Rule 的配置结构</h2>
<p>stackstorm 中的 Rule 是以 YAML 格式来定义。以下是 Rule  定义结构以及 “必需”和 “可选” rule 元素的列表：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;rule_name&#34;</span><span class="w">                      </span><span class="c"># required</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pack</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;examples&#34;</span><span class="w">                       </span><span class="c"># optional</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Rule description.&#34;</span><span class="w">       </span><span class="c"># optional</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">                          </span><span class="c"># required</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger</span><span class="p">:</span><span class="w">                               </span><span class="c"># required</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;trigger_type_ref&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">criteria</span><span class="p">:</span><span class="w">                              </span><span class="c"># optional</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">trigger.payload_parameter_name1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;regex&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">pattern </span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;^value$&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">trigger.payload_parameter_name2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;iequals&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">pattern </span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;watchevent&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w">                                </span><span class="c"># required</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;action_ref&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">parameters</span><span class="p">:</span><span class="w">                        </span><span class="c"># optional</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">foo</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;bar&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">baz</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ trigger.payload_parameter_1 }}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>上面 yaml 表示一个通用形式 Rule 包括：</p>
<ul>
<li><em>name</em>: rule 的名称。</li>
<li><em>pack</em>: rule 所属的 pack。如果未指定 pack，则默认为 default。</li>
<li><em>description</em>: 对 rule 的描述。
<ul>
<li><em>enabled</em>: rule的启用状态（true 或 false）。</li>
</ul>
</li>
<li><em>trigger</em>: 从传感器发出的要监视的 trigger 的类型，以及可选的与该 trigger 相关的参数。</li>
<li><em>criteria</em>: 一个可选的条件集，包括：
<ul>
<li>trigger payload 的属性。</li>
<li>criteria 比较的类型。</li>
<li><em>pattern</em> 与之匹配的模式。</li>
</ul>
</li>
<li><em>action</em>：当 rule 匹配时要执行的 action，包括：
<ul>
<li><em>ref</em>: 要执行的引用 (action/workflow)</li>
<li><em>parameters</em>: 要传递给动作 action 的可选参数。</li>
</ul>
</li>
</ul>
<h2 id="criteria">Criteria</h2>
<p>Criteria 的条件是需要匹配的规则（逻辑运算符 AND），rules 中的 criteria 表达为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># more variables</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload_parameter_name1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;regex&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern </span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;^value$&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload_parameter_name2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;iequals&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern </span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;watchevent&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>通过创建多个独立的 rules （每个 rules 对应一个条件表达式），可以实现逻辑运算符 OR 行为（任何一个条件表达式匹配都会触发 Action 的执行）。</p>
<p>在这里，<em>type</em> 指定要使用哪个条件比较运算符，而 <em>pattern</em> 指定要传递给运算符函数的模式。在正则表达式情况下，pattern 是一个正则表达式模式， trigger 值需要与之匹配。</p>
<p>如果 <em>criteria</em> 包含任何特殊字符（如 <code>-</code>），则请使用字典查找格式来指定 criteria 键。在基于 Webhook 的规则中，通常在发布的事件标头中包含这些值：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.headers[&#39;X-Custom-Header&#39;]</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;eq&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern </span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;customvalue&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>pattern 值还可以使用 Jinja 变量访问语法引用数据存储的值</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload.build_number</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;equals&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern </span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ st2kv.system.current_build_number }}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>由于 PyYAML 中已知的已报告问题，“criteria key”必须是唯一的。这在您希望对相同的 trigger 数据应用不同的运算符（例如 contains 和 ncontains）时有时会变得相关，在下面示例中，仅评估条件中的最后一个重复 key。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload.commit.tags</span><span class="p">:</span><span class="w">  </span><span class="c"># 重复的key 忽略</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">ncontains</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="l">StackStorm</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload.commit.tags</span><span class="p">:</span><span class="w">  </span><span class="c"># 重复的key，需要评估</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">contains</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="l">pull request</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload.commit.message</span><span class="p">:</span><span class="w">  </span><span class="c"># 唯一key，需要评估</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">ncontains</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="l">ST2</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>在 PyYAML 中，&ldquo;ncontains&rdquo; 和 &ldquo;contains&rdquo; 是用于规则条件比较的两种不同运算符：</p>
<ul>
<li><strong>contains</strong>：表示匹配包含某个特定模式的条件。例如，如果您想要触发某个规则，只要 trigger 数据包含特定的内容，就可以使用 &ldquo;contains&rdquo; 运算符。</li>
<li><strong>ncontains</strong>：表示匹配不包含某个特定模式的条件。与 &ldquo;contains&rdquo; 相反，只有当 trigger 数据不包含指定的内容时，规则才会触发。</li>
</ul>
</blockquote>
<p>另外，作为一种解决方法，可以使用 “criteria tags” 来多次引用相同的 “criteria key” 。“criteria tags” 使 key 变得唯一，并可以为条件提供上下文。要创建 “criteria tags”，请在 “criteria key” 的末尾包含一个 <code>#</code> 符号和一些文本。在评估时，# 和 # 后面的文本将被忽略。例如：<code>trigger.payload.level#upper</code> 和 <code>trigger.payload.level#lower</code>，如下面示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload.commit.tags#1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">ncontains</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="l">StackStorm</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload.commit.tags#2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">contains</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="l">pull request</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger.payload.commit.message</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">ncontains</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="l">ST2</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在这个例子中，由于 “criteria key” 都是唯一的，所有这些条件都将被评估，即使 <code>trigger.payload.commit.tags#1</code> 和 <code>trigger.payload.commit.tags#2</code> 在 trigger 数据中指定了相同的值。使用 “criteria tag” 是为了克服 PyYAML 中 “criteria key” 必须唯一的问题，使得可以在同一 key 上多次引用并且能够指定不同的运算符和模式，从而更灵活地定义规则。</p>
<h2 id="criteria-comparison">Criteria Comparison</h2>
<p>Criteria Comparison 这部分描述了在 Criteria 中可以使用的所有可用运算符。</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>equals</td>
<td>值相等（适用于任意类型的值）。</td>
</tr>
<tr>
<td>nequals</td>
<td>值不相等（适用于任意类型的值）。</td>
</tr>
<tr>
<td>lessthan</td>
<td>trigger 值小于提供的值。</td>
</tr>
<tr>
<td>greaterthan</td>
<td>trigger 值大于提供的值。</td>
</tr>
<tr>
<td>matchwildcard</td>
<td>trigger 值与提供的通配符字符串匹配。此运算符支持类似于 Unix shell 的通配符，您可以使用字符如 * 和 ?。对于简单的字符串匹配，此运算符比正则表达式更可取。</td>
</tr>
<tr>
<td>regex</td>
<td>trigger 值与提供的正则表达式模式匹配。此运算符的行为类似于 <code>re.search('pattern', trigger_value)</code>。</td>
</tr>
<tr>
<td>iregex</td>
<td>trigger 值与提供的正则表达式模式不区分大小写地匹配。此运算符的行为类似于 <code>re.search('pattern', trigger_value, re.IGNORECASE)</code>。</td>
</tr>
<tr>
<td>matchregex</td>
<td>trigger 值与提供的正则表达式模式匹配。此运算符已弃用，推荐使用 regex 和 iregex。</td>
</tr>
<tr>
<td>iequals</td>
<td>字符串 trigger 值不区分大小写地等于提供的值。</td>
</tr>
<tr>
<td>contains</td>
<td>trigger 值包含提供的值。请注意， trigger 值可以是字符串或数组（列表）。</td>
</tr>
<tr>
<td>ncontains</td>
<td>trigger 值不包含提供的值。请注意， trigger 值可以是字符串或数组（列表）。</td>
</tr>
<tr>
<td>icontains</td>
<td>字符串 trigger 值不区分大小写地包含提供的值。</td>
</tr>
<tr>
<td>incontains</td>
<td>字符串 trigger 值不区分大小写地不包含提供的字符串值。</td>
</tr>
<tr>
<td>startswith</td>
<td>字符串 trigger 值的开头与提供的字符串值匹配。</td>
</tr>
<tr>
<td>istartswith</td>
<td>字符串 trigger 值的开头与提供的字符串值不区分大小写地匹配。</td>
</tr>
<tr>
<td>endswith</td>
<td>字符串 trigger 值的结尾与提供的字符串值匹配。</td>
</tr>
<tr>
<td>iendswith</td>
<td>字符串 trigger 值的结尾与提供的字符串值不区分大小写地匹配。</td>
</tr>
<tr>
<td>timediff_lt</td>
<td>trigger 值与当前时间的时间差小于提供的值。</td>
</tr>
<tr>
<td>timediff_gt</td>
<td>trigger 值与当前时间的时间差大于提供的值。</td>
</tr>
<tr>
<td>exists</td>
<td>在 payload 中存在键。</td>
</tr>
<tr>
<td>nexists</td>
<td>在 payload 中不存在键。</td>
</tr>
<tr>
<td>inside</td>
<td>触发 payload 在提供的值内部（例如，测试是否“trigger.payload 在 provided_value 中”）。与 contains 的相反操作（其中 contains 会测试“trigger.payload 包含 provided_value”）。</td>
</tr>
<tr>
<td>ninside</td>
<td>触发 payload 不在提供的值内部（例如，测试是否 “trigger.payload 不在 provided_value 中”）。与 ncontains 的相反操作（其中 contains 会测试“trigger.payload 不包含 provided_value”）。</td>
</tr>
<tr>
<td>search</td>
<td>在触发 payload 中搜索与子条件匹配的数组（列表）。有关更多信息和示例，请参阅高级比较部分。</td>
</tr>
</tbody>
</table>
<h2 id="高级比较运算符">高级比较运算符</h2>
<p>“搜索运算符” 比其他运算符稍微复杂一些。它接受一个额外的条件参数以及应用于搜索列表每个元素的额外嵌套条件。</p>
<p>条件参数控制搜索运算符如何匹配列表。对于 any 条件，如果 trigger  payload 列表中至少有一项匹配所有子条件，搜索运算符将返回成功匹配。对于 all 条件， trigger  payload 列表中的每一项都必须与所有子条件匹配，搜索运算符才会返回成功匹配。any2any 条件在任何 payload 项匹配任何条件项时返回成功匹配。最后，all2any 条件在所有 payload 项匹配任何条件项时返回成功匹配。</p>
<p>以下是使用 “搜索运算符” 和 any 条件的示例条件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">trigger.issue_fields</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;search&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Controls whether all items in the trigger payload must match the child criteria,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># or if any single item matching the child criteria is sufficient</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">any </span><span class="w"> </span><span class="c"># &lt;- *At least one* item must match all child patterns</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pattern</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Here our context is each item of the list</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># All of these patterns must match the item for the item to be considered a match</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># These are simply other operators applied to each item of the list</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.field_name</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;equals&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Status&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.to_value</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;equals&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Approved&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>下面内容，这个条件将匹配以下 trigger payload，因为“Status”字段已更改为“Approved”：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">&#34;issue_fields&#34;: </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_type&#34;: </span><span class="s2">&#34;Custom&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_name&#34;: </span><span class="s2">&#34;Status&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;to_value&#34;: </span><span class="s2">&#34;Approved&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="p">,</span><span class="w"> </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_type&#34;: </span><span class="s2">&#34;Custom&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_name&#34;: </span><span class="s2">&#34;Signed off by&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;to_value&#34;: </span><span class="s2">&#34;Stanley&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>以下是另一个示例，其中 <code>condition</code> 参数为 all，在这种情况下，列表中的所有项都必须匹配所有的子模式：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">trigger.issue_fields</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;search&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">all </span><span class="w"> </span><span class="c"># &lt;- *All* items must match all patterns</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">pattern</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">item.field_type</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;equals&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Custom&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>该条件也将与上述  trigger payload 匹配。</p>
<p>然而，以下  trigger payload 不会与 all 条件匹配，因为 “Summary” 字段不是 &ldquo;Custom&rdquo; 字段：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">&#34;issue_fields&#34;: </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_type&#34;: </span><span class="s2">&#34;Built-in&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_name&#34;: </span><span class="s2">&#34;Summary&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;to_value&#34;: </span><span class="s2">&#34;Lorem Ipsum&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="p">,</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_type&#34;: </span><span class="s2">&#34;Custom&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_name&#34;: </span><span class="s2">&#34;Status&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;to_value&#34;: </span><span class="s2">&#34;Approved&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="p">,</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_type&#34;: </span><span class="s2">&#34;Custom&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;field_name&#34;: </span><span class="s2">&#34;Signed off by&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;to_value&#34;: </span><span class="s2">&#34;Stanley&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>以下示例是 参数  <code>condition</code>  为 any2any 的示例。在任何 payload 项匹配模式的任何部分的情况下，这将返回 true。此示例使用上面 “condition” 部分中描述的条件标签。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">trigger.body.data.tank</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;search&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">any2any</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pattern</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.chemicalLevel#1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;lessthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="m">40</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.chemicalLevel#2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;greaterthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="m">50</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Payload</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">&#34;tanks&#34;: </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;id&#34;: </span><span class="m">1</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;chemicalLevel&#34;: </span><span class="m">43</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="p">,</span><span class="w"> </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;id&#34;: </span><span class="m">2</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;chemicalLevel&#34;: </span><span class="m">55</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>上面示例中，由于第二个 chemicalLevel 值超过了50，因此此条件解析为 true，并且将触发操作，例如向操作员发送通知。如果第二个chemicalLevel 为45，则条件解析为 false，不会发生任何操作。</p>
<p>以下是条件参数为 all2any 的示例。在所有 payload 都与所有的 condition pattern 匹配的情况下，这将返回 true</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">trigger.body.data.equipment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;search&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">all2any</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pattern</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.latitude.value#1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;lessthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="m">40</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.latitude.value#2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;greaterthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="m">50</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.longitude.value#1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;lessthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span>-<span class="m">100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.longitude.value#2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;greaterthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span>-<span class="m">90</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>payload 如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">&#34;equipment&#34;: </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;latitude&#34;: </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">&#34;value&#34;: </span><span class="m">43</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;longitude&#34;: </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">&#34;value&#34;: </span>-<span class="m">95</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="p">,</span><span class="w"> </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;latitude&#34;: </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">&#34;value&#34;: </span><span class="m">44</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;longitude&#34;: </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">&#34;value&#34;: </span>-<span class="m">96</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在这个例子中，所有设备的值都在条件指定的范围内，因此不会执行任何操作。即使将第一个 latitude 设置为 53，仍然不会有任何操作。假设第二个 longitude 值设置为 -106，那么操作将触发，因为所有设备将违反 contition 中的至少一个部分。这可以在最后一个 equipment 离开区域时触发通知。</p>
<p>单一 payload  模式</p>
<p>如果 payload  中只需要一个元素，则如果 payload  是字典，则搜索参数仍然可以用于测试规则的条件，例如下面示例，payload 还是和上面相同，但是实际内容不同</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">trigger.body.data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;search&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">all2any</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pattern</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.latitude.value#1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;lessthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="m">40</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.latitude.value#2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;greaterthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="m">50</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.longitude.value#1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;lessthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span>-<span class="m">100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">item.longitude.value#2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;greaterthan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span>-<span class="m">90</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>payload</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">&#34;data&#34;: </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;latitude&#34;: </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;value&#34;: </span><span class="m">43</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">&#34;longitude&#34;: </span>{<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">&#34;value&#34;: </span>-<span class="m">95</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>}<span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>在使用 single payload 时，all2any 和 any2any 具有相同的结果，因为选择所有与选择任何一件相同。</p>
</blockquote>
<h3 id="condition-参数">condition 参数</h3>
<ul>
<li><code>count</code></li>
<li><code>count_gt</code></li>
<li><code>count_gte</code></li>
<li><code>count_lt</code></li>
<li><code>count_lte</code></li>
<li>any</li>
<li>all</li>
<li>any2any</li>
<li>all2any</li>
</ul>
<h3 id="搜索运算符的注意事项">搜索运算符的注意事项</h3>
<p>首先，它将规则引擎转变为一个 “<font color="#f8070d" size=3>递归下降解析器</font>”，这可能会降低规则引擎的性能。因此，如果有一个规则必须保持快速响应，不受系统负载影响，建议尽量避免使用 “搜索运算符”。</p>
<p>其次，“搜索运算符” 的认知复杂性使其一眼难以理解。如果你与他人共享代码，可能需要详细记录规则和模式，以更清晰地解释你的意图。</p>
<p>最后，“搜索运算符” 的算法复杂性与其他运算符大不相同，下面是算法的复杂度：</p>
<ul>
<li>O($n_{patterns}$)  是指 $n_{patterns}$，即子模式的数量。这表示算法的运行时间（复杂度）与子模式的数量成正比。当子模式数量增加时，运行时间也会相应增加。</li>
<li>O($n_{payloads}$) 是指 $n_{payloads}$，即  “trigger payload” 字段的数量。同样，这表示算法的运行时间与  “trigger payload” 字段的数量成正比。增加  “trigger payload” 字段的数量也会导致运行时间增加。</li>
</ul>
<p>其中，O 表示的是算法的渐进复杂度，即算法的运行时间与输入规模的增长关系。因此，如果有大量 “子条件” 或者在 “trigger payload” 中搜索长列表，<font color="#f8070d" size=3>使用搜索运算符很容易编写出慢规则</font>。</p>
<p>总结：使用 “搜索运算符” 应主要限制在尝试匹配 “少量的子条件” 和 ”少量预期 payload“ 列表项的情况下。尽管搜索运算符可能使规则引擎变慢，但与无条件运行工作流并在那里进行过滤相比，在规则中使用搜索运算符仍然更快且更轻量。</p>
<h2 id="在rule中配置actions的执行">在Rule中配置Actions的执行</h2>
<p>这一部分描述了在 ”tigger“ 成功匹配并满足一组可选条件时要执行的后续 ”actions/workflows“。至少，Rules 应指定要执行的 Actions。Rules 还可以指定在执行 Actions 时提供给 Actions 的参数。</p>
<p>下面是一个 Actions 的示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">action</span><span class="p">:</span><span class="w">                                </span><span class="c"># required</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;action_ref&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">parameters</span><span class="p">:</span><span class="w">                        </span><span class="c"># optional</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">foo</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;bar&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">baz</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>偶尔情况下，在规则 Rules 时，将 Tigger 的上下文传递给 Actions 可能是必要的。 Rule 引擎能够通过利用 Jinja 模板语法插值变量。如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;action_ref&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">foo</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;bar&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">baz</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ trigger.payload_parameter_1 }}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>触发器属性的值可以是 null 和 None。这也是相关 Actions 参数的有效值。您需要使用 use_none Jinja 模板过滤器，以确保在调用操作时正确序列化 null/None 值。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;action_ref&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">foo</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;bar&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">baz</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ trigger.payload_parameter_1 | use_none }}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>Notes: 当使用 Jinja 模板插值时，null 或 None 的值可能会导致一些序列化问题。使用 &ldquo;use_none&rdquo; 过滤器可以帮助规避这些问题，确保 null 或 None 值在序列化时被正确处理。</p>
</blockquote>
<p>由于当前的 Jinja 模板系统不支持非字符串类型，因此需要此解决方法。在调用操作之前，我们被迫根据操作参数定义执行类型转换。</p>
<h2 id="rules-的管理">Rules 的管理</h2>
<h3 id="添加rule">添加rule</h3>
<p>如果只为了部署部署一条 rule，可以使用 st2 命令：<code>st2 rule create ${PATH_TO_RULE}</code>，例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 rule create /usr/share/doc/st2/examples/rules/sample_rule_with_webhook.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>完成后记得要重新加载所有规则，请使用 <code>st2ctl reload --register-rules</code></p>
<p>如果 rule name 已经存在将会出现下面的提示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">ERROR: 409 Client Error</span><span class="p">:</span><span class="w"> </span><span class="l">Conflict</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">MESSAGE: Tried to save duplicate unique keys (E11000 duplicate key error index: st2.rule_d_b.$uid_1  dup key</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;rule:examples:sample_rule_with_webhook&#34;</span><span class="w"> </span>}<span class="l">)</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="更新rule">更新rule</h3>
<p>要更新一条规则，编辑规则定义文件并运行命令：<code>st2 rule update</code>，如下例所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 rule update examples.sample_rule_with_webhook /usr/share/doc/st2/examples/rules/sample_rule_with_webhook.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="获取rule">获取rule</h3>
<p>要查看所有规则或获取单个规则，请使用以下命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 rule list
</span></span><span class="line"><span class="cl">st2 rule get examples.sample_rule_with_webhook
</span></span></code></pre></td></tr></table>
</div>
</div><p>要取消部署一条规则，运行命令：<code>st2 rule delete ${RULE_NAME_OR_ID}</code>。例如，要取消部署之前部署的名为 <code>examples.sample_rule_with_webhook</code> 的规则，运行：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 rule delete examples.sample_rule_with_webhook
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="rule的放置位置">rule的放置位置</h3>
<p>自定义规则可以放置在本地系统上的任何可访问文件夹中。自定义规则通常放置在 <code>/opt/stackstorm/packs/&lt;pack_name&gt;/rules</code> 目录中。</p>
<h3 id="测试rule">测试rule</h3>
<p>为了更方便地测试规则，我们提供了一个 <em>st2-rule-tester</em> 工具，它可以在不运行任何 StackStorm 组件的情况下评估规则与触发器实例的匹配。</p>
<p>该工具通过接受包含规则定义的文件路径和包含触发器实例定义的文件路径来实现：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2-rule-tester --rule<span class="o">=</span><span class="si">${</span><span class="nv">RULE_FILE</span><span class="si">}</span> --trigger-instance<span class="o">=</span><span class="si">${</span><span class="nv">TRIGGER_INSTANCE_DEFINITION</span><span class="si">}</span> --config-file<span class="o">=</span>/etc/st2/st2.conf
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">$?</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>两个文件都需要以YAML或JSON格式包含定义。对于规则，您可以使用计划部署的相同文件。</p>
<p>对于触发器实例，定义文件需要包含以下键：</p>
<ul>
<li>trigger：触发器的完整引用（例如，core.st2.IntervalTimer，slack.message，irc.pubmsg，twitter.matched_tweet等）。</li>
<li>payload：Trigger payload。负载本身是特定于所讨论触发器的。要了解触发器结构，您可以查看包的 README 或查找位于 <code>packs/&lt;pack_name&gt;/sensors/</code> 目录中的 sensor 元数据文件中的 <code>trigger_types</code> 部分。</li>
</ul>
<p>如果触发器实例匹配，将打印 <code>=== RULE MATCHES ===</code> 并且该工具将以 0 的状态代码退出。如果规则不匹配，将打印 <code>=== RULE DOES NOT MATCH ===</code> 并且该工具将以 1 的状态代码退出。</p>
<p>以下是如何使用该工具的一些示例：</p>
<p>rule.yaml</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;relayed_matched_irc_message&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">pack</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;irc&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Relay IRC message to Slack if the message contains word StackStorm&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;irc.pubmsg&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">parameters</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">criteria</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">trigger.message</span><span class="p">:</span><span class="w"> </span><span class="c"># 触发器的message值</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;icontains&#34;</span><span class="w"> </span><span class="c"># 不区分大小写包含 pattern 的值</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;StackStorm&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;slack.post_message&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">message</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ trigger.source.nick }} on {{ trigger.channel }}: {{ trigger.message }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">channel</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;#irc-relay&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>trigger_instance_1.yaml :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;irc.pubmsg&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">payload</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">source</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">nick</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Kami_&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;gateway/web/irccloud.com/x-uvv&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">channel</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;#stackstorm&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timestamp</span><span class="p">:</span><span class="w"> </span><span class="m">1419166748</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">message</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;stackstorm is cool!&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>trigger_instance_2.yaml</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;irc.pubmsg&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">payload</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">source</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">nick</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Kami_&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;gateway/web/irccloud.com/x-uvv&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">channel</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;#stackstorm&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timestamp</span><span class="p">:</span><span class="w"> </span><span class="m">1419166748</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">message</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;blah blah&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>下面使用 <em>trigger_instance_1</em> 来评估rules</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2-rule-tester --rule<span class="o">=</span>./my_rule.yaml --trigger-instance<span class="o">=</span>./trigger_instance_1.yaml
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">$?</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><em>trigger_instance_1</em> 输出的结果为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">2015-12-11 14:35:03,249 INFO <span class="o">[</span>-<span class="o">]</span> Connecting to database <span class="s2">&#34;st2&#34;</span> @ <span class="s2">&#34;0.0.0.0:27017&#34;</span> as user <span class="s2">&#34;None&#34;</span>.
</span></span><span class="line"><span class="cl">2015-12-11 14:35:03,318 INFO <span class="o">[</span>-<span class="o">]</span> Validating rule irc.relayed_matched_irc_message <span class="k">for</span> pubmsg.
</span></span><span class="line"><span class="cl">2015-12-11 14:35:03,331 INFO <span class="o">[</span>-<span class="o">]</span> <span class="m">1</span> rule<span class="o">(</span>s<span class="o">)</span> found to enforce <span class="k">for</span> pubmsg.
</span></span><span class="line"><span class="cl">2015-12-11 14:35:03,333 INFO <span class="o">[</span>-<span class="o">]</span> <span class="o">===</span> RULE <span class="nv">MATCHES</span> <span class="o">===</span>
</span></span><span class="line"><span class="cl"><span class="m">0</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用 <em>trigger_instance_2</em> 来评估rules</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">st2-rule-tester --rule=./my_rule.yaml --trigger-instance=./trigger_instance_2.yaml
</span></span><span class="line"><span class="cl">echo $?
</span></span></code></pre></td></tr></table>
</div>
</div><p><em>trigger_instance_2</em> 输出的结果为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">2015-12-11 14:35:57,380 INFO <span class="o">[</span>-<span class="o">]</span> Connecting to database <span class="s2">&#34;st2&#34;</span> @ <span class="s2">&#34;0.0.0.0:27017&#34;</span> as user <span class="s2">&#34;None&#34;</span>.
</span></span><span class="line"><span class="cl">2015-12-11 14:35:57,444 INFO <span class="o">[</span>-<span class="o">]</span> Validating rule irc.relayed_matched_irc_message <span class="k">for</span> pubmsg.
</span></span><span class="line"><span class="cl">2015-12-11 14:35:57,459 INFO <span class="o">[</span>-<span class="o">]</span> Validation <span class="k">for</span> rule irc.relayed_matched_irc_message failed on -
</span></span><span class="line"><span class="cl">  key: trigger.message
</span></span><span class="line"><span class="cl">  pattern: StackStorm
</span></span><span class="line"><span class="cl">  type: icontains
</span></span><span class="line"><span class="cl">  payload: blah blah
</span></span><span class="line"><span class="cl">2015-12-11 14:35:57,461 INFO <span class="o">[</span>-<span class="o">]</span> <span class="m">0</span> rule<span class="o">(</span>s<span class="o">)</span> found to enforce <span class="k">for</span> pubmsg.
</span></span><span class="line"><span class="cl">2015-12-11 14:35:57,462 INFO <span class="o">[</span>-<span class="o">]</span> <span class="o">===</span> RULE DOES NOT <span class="nv">MATCH</span> <span class="o">===</span>
</span></span><span class="line"><span class="cl"><span class="m">1</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><em>st2-rule-tester</em> 进一步提供了一种<font color="#f8070d" size=3>事后调试的方式</font>，您可以回答一个问题：“为什么我的 Rule 没有与刚刚触发的 Trigger 匹配？” 这表示着已经在 StackStorm 中加载了一个已知引用的 <strong>rule</strong>，类似地，还有一个带有已知 ID 的 Trigger Instance。</p>
<p>假设我们有规则引用为 <em>my_pack.fire_on_execution</em>  和 Trigger 实例 ID 为 <em>566b4be632ed352a09cd347d</em>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2-rule-tester --rule-ref<span class="o">=</span>my_pack.fire_on_execution --trigger-instance-id<span class="o">=</span>566b4be632ed352a09cd347d --config-file<span class="o">=</span>/etc/st2/st2.conf
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">$?</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>输出结果为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">2015-12-11 15:24:16,459 INFO <span class="o">[</span>-<span class="o">]</span> Connecting to database <span class="s2">&#34;st2&#34;</span> @ <span class="s2">&#34;0.0.0.0:27017&#34;</span> as user <span class="s2">&#34;None&#34;</span>.
</span></span><span class="line"><span class="cl">2015-12-11 15:24:16,527 INFO <span class="o">[</span>-<span class="o">]</span> Validating rule my_pack.fire_on_execution <span class="k">for</span> st2.generic.actiontrigger.
</span></span><span class="line"><span class="cl">2015-12-11 15:24:16,542 INFO <span class="o">[</span>-<span class="o">]</span> Validation <span class="k">for</span> rule my_pack.fire_on_execution failed on -
</span></span><span class="line"><span class="cl">  key: trigger.status
</span></span><span class="line"><span class="cl">  pattern: succeeded
</span></span><span class="line"><span class="cl">  type: iequals
</span></span><span class="line"><span class="cl">  payload: failed
</span></span><span class="line"><span class="cl">2015-12-11 15:24:16,545 INFO <span class="o">[</span>-<span class="o">]</span> <span class="m">0</span> rule<span class="o">(</span>s<span class="o">)</span> found to enforce <span class="k">for</span> st2.generic.actiontrigger.
</span></span><span class="line"><span class="cl">2015-12-11 15:24:16,546 INFO <span class="o">[</span>-<span class="o">]</span> <span class="o">===</span> RULE DOES NOT <span class="nv">MATCH</span> <span class="o">===</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>输出还标识了不匹配的来源，即是 Trigger 类型不匹配还是其中一个条件不匹配。</p>
<p>如果您正在调试并想要查看发送到 StackStorm 的 Trigger  实例列表，可以使用下面命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 trigger-instance list
</span></span></code></pre></td></tr></table>
</div>
</div><p>还可以按触发器进行触发器实例的过滤：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 trigger-instance list --trigger<span class="o">=</span>core.f9e09284-b2b1-4127-aedd-dcde7a752819
</span></span></code></pre></td></tr></table>
</div>
</div><p>此外，还可以通过使用 <code>timestamp_gt</code> 和 <code>timestamp_lt</code> 过滤选项，在时间范围内获取触发器实例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 trigger-instance list --trigger<span class="o">=</span><span class="s2">&#34;core.f9e09284-b2b1-4127-aedd-dcde7a752819&#34;</span> -timestamp_gt<span class="o">=</span>2015-06-01T12:00:00Z -timestamp_lt<span class="o">=</span>2015-06-02T12:00:00Z
</span></span></code></pre></td></tr></table>
</div>
</div><p>请注意，您还可以指定其中一个 timestamp_lt 或 timestamp_gt。您可以使用 get 命令获取有关触发器实例的详细信息：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 trigger-instance get 556e135232ed35569ff23238
</span></span></code></pre></td></tr></table>
</div>
</div><p>在调试规则时可能很有用的一项功能是将触发器实例重新发送到 StackStorm。您可以使用 re-emit 命令来实现这一点。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 trigger-instance re-emit 556e135232ed35569ff23238
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="定时器---timers">定时器 - timers</h2>
<p>定时器 (Timers) 允许基于定义的时间间隔重复运行特定操作，或在特定日期和时间运行。您可以将它们视为 cron 作业，但具有更多的灵活性，例如仅在提供的日期和时间运行操作一次的能力。</p>
<p>目前，我们支持以下定时器触发器类型：</p>
<ul>
<li><code>core.st2.IntervalTimer</code> ：在预定义的时间间隔（例如每30秒，每24小时，每周等）运行一个操作。</li>
<li><code>core.st2.DateTimer</code> ：在指定的日期和时间运行一个操作。</li>
<li><code>core.st2.CronTimer</code> ：当前时间匹配在UNIX cron格式中定义的时间约束时运行一个操作。</li>
</ul>
<p>定时器被实现为 Trigger，这意味着您可以在 Rule 中使用它们。在下面的部分中，您可以找到如何在规则定义中使用定时器的一些示例。</p>
<h3 id="corest2intervaltimer-使用示例">core.st2.IntervalTimer 使用示例</h3>
<p>可用的参数有：<code>unit</code> 和 <code>delta</code>。</p>
<p>对于 <code>unit</code> 参数，支持的值包括：<code>seconds</code>、<code>minutes</code>、<code>hours</code>、<code>days</code>、<code>weeks</code>。</p>
<h4 id="每30秒运行一次action">每30秒运行一次Action</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;core.st2.IntervalTimer&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;seconds&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">delta</span><span class="p">:</span><span class="w"> </span><span class="m">30</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="每24小时运行一次action">每24小时运行一次Action</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;core.st2.IntervalTimer&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;hours&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">delta</span><span class="p">:</span><span class="w"> </span><span class="m">24</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="每2星期运行一次action">每2星期运行一次Action</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;core.st2.IntervalTimer&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;weeks&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">delta</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="corest2datetimer">core.st2.DateTimer</h3>
<p>可用参数 <code>timezone</code>, <code>date</code>.</p>
<p>在指定时间运行 action</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;core.st2.DateTimer&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timezone</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UTC&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">date</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;2014-12-31 23:59:59&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="corest2crontimer">core.st2.CronTimer</h3>
<p>此定时器支持类似 cron 的表达式。</p>
<p>默认情况下，如果没有为特定参数提供值，则假定为 *，这意味着在每个值上触发。</p>
<p>可用参数 <code>timezone</code>, <code>year</code>, <code>month</code>, <code>day</code>, <code>week</code>, <code>day_of_week</code>, <code>hour</code>, <code>minute</code>, <code>second</code>，注意，时区(<code>timezone</code> ) 使用 <em>pytz</em> 格式 例如 <code>Asia/Shanghai</code>.</p>
<h4 id="每周日午夜运行action">每周日午夜运行action</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;core.st2.CronTimer&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timezone</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UTC&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">day_of_week: 6 # or day_of_week</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;sun&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hour</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">minute</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">second</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="每天午夜运行action">每天午夜运行action</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;core.st2.CronTimer&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timezone</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UTC&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">day_of_week</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;*&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hour</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">minute</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">second</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>如上所述，如果没有为特定参数提供值，则假定为 *，这意味着以下内容等效于上述内容：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;core.st2.CronTimer&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">timezone</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UTC&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hour</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">minute</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">second</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="周一到周五每天午夜执行但周六日不执行">周一到周五每天午夜执行，但周六日不执行</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">trigger:
</span></span><span class="line"><span class="cl">  type: <span class="s2">&#34;core.st2.CronTimer&#34;</span>
</span></span><span class="line"><span class="cl">  parameters:
</span></span><span class="line"><span class="cl">      timezone: <span class="s2">&#34;UTC&#34;</span>
</span></span><span class="line"><span class="cl">      day_of_week: <span class="s2">&#34;mon-fri&#34;</span>
</span></span><span class="line"><span class="cl">      hour: <span class="m">0</span>
</span></span><span class="line"><span class="cl">      minute: <span class="m">0</span>
</span></span><span class="line"><span class="cl">      second: <span class="m">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">action:
</span></span><span class="line"><span class="cl">  ...
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="每小时执行一次">每小时执行一次</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">trigger:
</span></span><span class="line"><span class="cl">  type: <span class="s2">&#34;core.st2.CronTimer&#34;</span>
</span></span><span class="line"><span class="cl">  parameters:
</span></span><span class="line"><span class="cl">      timezone: <span class="s2">&#34;UTC&#34;</span>
</span></span><span class="line"><span class="cl">      hour: <span class="s2">&#34;*&#34;</span>
</span></span><span class="line"><span class="cl">      minute: <span class="m">0</span>
</span></span><span class="line"><span class="cl">      second: <span class="m">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">action:
</span></span><span class="line"><span class="cl">  ...
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="故障排除">故障排除</h2>
<p>rules 不如预期那样工作？或者只是想看看哪些  rules  已经生效？</p>
<p>运行 <code>st2 rule-enforcement list</code> 以查看所有 rules 执行。您可以通过规则对此输出进行过滤以缩小范围。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>StackStorm自动化 - 包配置</title>
      <link>https://www.oomkill.com/2023/05/stackstorm-pack-configuaration/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2023/05/stackstorm-pack-configuaration/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="基本概念">基本概念</h2>
<p>从版本 2.4 开始，如果包包含.<code>config.yaml</code> ，可以使用包配置，包配置可以使用<strong>配置</strong>文件来设置包中资源通用的值，例如 API 凭证、连接详细信息、限制和阈值。这些值在运行时可供操作和传感器使用。</p>
<p><strong>包配置</strong>和 Action 参数之间的区别在于，配置通常包含包中所有资源通用的值，并且很少更改。动作参数是随每个动作调用动态提供的，并且可能会发生变化 - 例如，它们可能来自映射某些输入事件的规则。</p>
<p>包<strong>配置</strong>遵循基础架构即代码方法，并存储在特殊目录中的 YAML 格式文件中（默认情况下 <em><strong>/opt/stackstorm/configs</strong></em>）。每个包都为此配置文件定义自己的架构。</p>
<h3 id="配置-schema">配置 Schema</h3>
<p>配置文件的结构是一个 YAML 格式的文件，它定义了该包的<strong>配置</strong>文件。该配置由包作者自行编写，包含有关每个可用<strong>配置</strong>项的信息，例如名称, Secret等）。该文件已命名  <em><strong>config.schema.yaml</strong></em> 并位于包目录   <em><strong>/opt/stackstorm/packs/&lt;mypack&gt;</strong></em> 的根目录中。</p>
<p>这是一个示例包配置文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">api_key</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;API key&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">api_secret</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;API secret&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secret</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">region</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;API region to use&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;us-east-1&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">private_key_path</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Path to the private key file to use&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在该示例中，配置文件由 4 项 配置组成  (api_key,  api_secret, region, private_key_path)</p>
<blockquote>
<p>注，api_secret 被标注为 secret，这意味着如果使用动态值，则该值将加密存储在数据存储中。</p>
</blockquote>
<p>除了上面所示的“平面”<strong>配置</strong>之外，模式还支持嵌套对象。例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">consumer_key</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Your consumer key.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secret</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">consumer_secret</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Your consumer secret.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secret</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_token</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Your access token.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secret</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">access_token_secret</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Your access token secret.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secret</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Sensor specific settings.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;object&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">additionalProperties</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">device_uuids</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;array&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;A list of device UIDs to poll metrics for.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">items</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">required</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在该示例中，<strong>配置</strong>文件可以包含一个 <strong>sensor</strong> 项目，该项目是具有单个 <strong>device_uuids</strong> 属性的对象。</p>
<h2 id="配置文件">配置文件</h2>
<p>配置文件是 YAML 格式的文件，该文件可以包含 “静态” 或 “动态” 值。配置文件已命名并位于 <em><strong>/opt/stackstorm/configs/&lt;pack name&gt;.yaml</strong></em>  目录中。文件所有权应该是 <em><strong>st2:st2</strong></em></p>
<p>例如，对于名为 <em><strong>libcloud</strong></em> 的包 配置文件位于  <em><strong>/opt/stackstorm/configs/libcloud.yaml</strong></em>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">api_key</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;some_api_key&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">api_secret</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{st2kv.user.api_secret}}&#34;</span><span class="w">  </span><span class="c"># user-scoped configuration value which is also a secret as declared in config schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">region</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;us-west-1&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">private_key_path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{st2kv.system.private_key_path}}&#34;</span><span class="w">  </span><span class="c"># global datastore value</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><strong>配置文件</strong>不会<strong>在 run-time时动态读取</strong>，必须先进行注册，然后将值加载到 StackStorm DB 中。它们的注册方式与其他资源相同，通过运行 <em><strong>st2ctl reload</strong></em> / <em><strong>st2-register-content</strong></em> 脚本来注册。对于config，您需要使用 <em><strong>&ndash;register-configs</strong></em> flag 运行此脚本：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo st2ctl reload --register-configs
</span></span><span class="line"><span class="cl"><span class="c1"># Or</span>
</span></span><span class="line"><span class="cl">sudo st2-register-content --register-configs
</span></span></code></pre></td></tr></table>
</div>
</div><p>在使用上述命令加载和注册 <strong>config</strong> 时，将根据 shema 验证配置文件中的静态值。如果 schema 不存在，则不执行验证。</p>
<blockquote>
<p>注：仅验证<strong>配置</strong>中的静态值。动态值（使用 Jinja 表示法引用数据存储中的值的值）在运行时解析，因此无法在 register/load  阶段验证它们。</p>
</blockquote>
<h3 id="静态配置值">静态<strong>配置</strong>值</h3>
<p>静态<strong>配置</strong>值是从配置文件加载并按原样使用的值。</p>
<h3 id="动态配置值">动态<strong>配置</strong>值</h3>
<p>动态配置值提供了额外的灵活性，并包括对用户范围的数据存储值的支持。当您想要根据调用操作的用户使用不同的配置值时，这非常有用。</p>
<p>动态配置值是包含 Jinja 模板表达式的值。该模板表达式在运行时进行计算，并解析为 数据存储区 值的名称（Keys）。然后，该数据存储值将用作配置值。</p>
<blockquote>
<p>注：目前只有字符串（字符串类型）支持动态<strong>配置</strong>值。</p>
</blockquote>
<p>在<strong>config</strong>中，动态配置值的引用如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">api_secret</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{st2kv.user.api_secret}}&#34;</span><span class="w">  </span><span class="c"># user-scoped configuration value which is also a secret as declared in config schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">private_key_path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{st2kv.system.private_key_path}}&#34;</span><span class="w">  </span><span class="c"># global datastore value</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><em><strong>api_secret</strong></em> 是一个用户范围的动态配置值，这意味着 <strong>user</strong> 部分将被触发操作执行的用户的用户名替换。</p>
<p>动态配置值存储在“数据存储”中，并使用 CLI 或 API 进行配置。</p>
<p>如果某个值在配置 schema 中被标记为加密，则需要将其加密存储在数据存储中。设置该值时， 应使用 <em><strong>&ndash;encrypt</strong></em> 标志，如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 key <span class="nb">set</span> api_secret <span class="s2">&#34;my super secret api secret&#34;</span> --scope<span class="o">=</span>user --encrypt
</span></span></code></pre></td></tr></table>
</div>
</div><p>在上面的示例中，<em><strong>private_key_path</strong></em> 常规动态配置值，这意味着 <em><strong>private_key_path</strong></em> 将从数据存储中加载与此键对应的数据存储项。在这种情况下，使用命令行将该值设置如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">st2 key set private_key_path &#34;/home/myuser/.ssh/my_private_rsa_key&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置的加载和配置动态值解析">配置的加载和配置动态值解析</h2>
<p>配置文件在注册时加载。动态值在运行时解析。对于传感器，这是传感器容器为传感器实例生成子进程的时间，对于 Action，这是执行 Action 的时间。</p>
<p>解析和加载用户范围的配置值时，触发操作 Action 的经过身份验证的用户将用作解析值时的上下文。</p>
<p>在解析和加载用户范围配置值时，使用认证后的用户触发操作 Action 的来作为上下文来解析该值。</p>
<h3 id="命令行配置动态值">命令行配置动态值</h3>
<p>可以使用 st2 key 命令集与其他数据存储项相同的方式操作动态配置值，动态配置值包含“用户范围的动态配置值” 与 “常规动态配置值”</p>
<h4 id="配置常规动态配置值"><strong>配置</strong>常规动态配置值</h4>
<p>常规动态配置值可以由管理员或任何用户配置：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 key <span class="nb">set</span> &lt;key name&gt; &lt;key value&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># For example</span>
</span></span><span class="line"><span class="cl">st2 key <span class="nb">set</span> private_key_path <span class="s2">&#34;/home/myuser/.ssh/my_private_rsa_key&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>要查看配置值可以使用命令 <em>st2 key get</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 key get &lt;key name&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># For example</span>
</span></span><span class="line"><span class="cl">st2 key get private_key_path
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>注意：默认情况下 Secret 类型的值将被屏蔽。</p>
</blockquote>
<h4 id="配置用户范围的动态配置值"><strong>配置</strong>用户范围的动态配置值</h4>
<p>动态配置值可以由每个用户自己配置，也可以由管理员为任何可用的系统用户配置：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">st2 key <span class="nb">set</span> --scope<span class="o">=</span>user <span class="o">[</span>--encrypt<span class="o">]</span> &lt;key name&gt; &lt;key value&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># For example (authenticated as &#34;user1&#34;)</span>
</span></span><span class="line"><span class="cl">st2 key <span class="nb">set</span> --scope<span class="o">=</span>user default_region <span class="s2">&#34;us-west-1&#34;</span>
</span></span><span class="line"><span class="cl">st2 key <span class="nb">set</span> --scope<span class="o">=</span>user --encrypt api_secret user1_api_secret
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># For example (authenticated as &#34;user2&#34;)</span>
</span></span><span class="line"><span class="cl">st2 key <span class="nb">set</span> --scope<span class="o">=</span>user default_region <span class="s2">&#34;us-east-1&#34;</span>
</span></span><span class="line"><span class="cl">st2 key <span class="nb">set</span> --scope<span class="o">=</span>user --encrypt api_secret user2_api_secret
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># For example (authenticated as administrator, setting a value for &#34;user1&#34; and &#34;user2&#34;)</span>
</span></span><span class="line"><span class="cl">st2 key <span class="nb">set</span> --scope<span class="o">=</span>user --user<span class="o">=</span>user1 default_region <span class="s2">&#34;us-west-1&#34;</span>
</span></span><span class="line"><span class="cl">st2 key <span class="nb">set</span> --scope<span class="o">=</span>user --user<span class="o">=</span>user2 default_region <span class="s2">&#34;us-east-1&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看值命令时用户只能看到他们自己的值，管理员可以看到所有值，默认情况下秘密被屏蔽</p>
<h2 id="配置的使用">配置的使用</h2>
<p>配置可以在 Packs 中的 Python 脚本中全局调用，但需要注意的是，Action 与 Sensor 的 Python 脚本调用有些微差异。</p>
<p>例如我们有一个 pack，名为 config_example，那么配置文件应定义为 <em><strong>config_example.yaml</strong></em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">if_host: <span class="s1">&#39;10.0.0.26&#39;</span>
</span></span><span class="line"><span class="cl">if_port: <span class="m">8086</span>
</span></span><span class="line"><span class="cl">if_username: <span class="s1">&#39;ifadm&#39;</span>
</span></span><span class="line"><span class="cl">if_password: <span class="s1">&#39;xxxxxxx&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在 <em><strong>/opt/stackstorm/pack/{packs_name}/actions/</strong></em> 目录下的 Python 脚本可使用如下方法调用。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">host</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;if_host&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">port</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;if_port&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">username</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;if_username&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">password</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;if_password&#39;</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在 <em><strong>/opt/stackstorm/pack/crontab/sensor/</strong></em> 中的 Python 脚本，则必需使用下列方法调用。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">host</span><span class="o">=</span>self._config<span class="o">[</span><span class="s1">&#39;if_host&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">port</span><span class="o">=</span>self._config<span class="o">[</span><span class="s1">&#39;if_port&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">username</span><span class="o">=</span>self._config<span class="o">[</span><span class="s1">&#39;if_username&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">password</span><span class="o">=</span>self._config<span class="o">[</span><span class="s1">&#39;if_password&#39;</span><span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="reference">Reference</h2>
<p><sup id="1">[1]</sup> <a href="https://docs.stackstorm.com/reference/pack_configs.html">Pack Configuration</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ansible介绍</title>
      <link>https://www.oomkill.com/2018/06/ansible/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2018/06/ansible/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="运维工具">运维工具</h2>
<p><strong>OS Provisioning: PXE, Cobbler(repository,distritution, profile)</strong></p>
<p>      PXE: dhcp, tftp, (http, ftp)</p>
<p>      dnsusq: dhcp, dns</p>
<p><strong>OS Config</strong>:</p>
<p>      puppet, saltstack, func</p>
<p><strong>Task Excute</strong>:</p>
<p>      fabric, func, saltstack</p>
<p><strong>Deployment</strong>:</p>
<p>      fabric</p>
<p>管理主机，要想管理被管理节点，二者必须有安全管理通道。puppet、saltstack在管理被管节点时，每一个被管节点必须运行puppet agent，管理端进程与每一个被管节点的agent进程进行通信，通信时使用的HTTP协议。此种方式必须在被管节点安装应用程序的agent，远程接收到指令，并在本地负责执行相应的任务。</p>
<p>根据远程管理时，是不是在每一个被管主机上安装agent端，分为两种puppet、func、saltstack；与无需agent端，ansible、fabric。依赖被管节点的ssh服务。而管理端需要知道对方主机上的账号密码。</p>
<h2 id="ansible的组成">ansible的组成</h2>
<h3 id="ansible核心">ansible核心</h3>
<p>host invenory ：为了管控每个被管主机，每个主机在本地需要注册。用来定义由ansible远程配置管理的主机，每个主机的IP地址、掩码、SSH监听的地址、端口号、账号密码等。</p>
<p>core modules：ansible执行任何特定管理任务，都是不由ansible自身玩成的，而是通过模块完成的。</p>
<p>custom Modules：使用任何编程语言来编写模块。</p>
<p>playbooks：将主机要完成的多个任务，事先定义在文件中可以多次调用。</p>
<h2 id="1-ansible的特性">1 ansible的特性</h2>
<ul>
<li>基于Python语言实现，由Paramiko, PyYAML和jiniia2三个关键模块</li>
<li>部署简单，agentless</li>
<li>默认使用SSH协议</li>
<li>主从模式：
<ul>
<li>master:ansible, ssh client</li>
<li>slave: ssh server</li>
</ul>
</li>
<li>支持自定文模块：支持各种编程语言，支持Playbook，基于“模块”完成各种“任务”。</li>
</ul>
<hr>
<p><strong>安装依赖于epel源</strong></p>
<hr>
<blockquote>
<p><strong>配置文件</strong>：</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/etc/ansible/ansible.cfg
</span></span><span class="line"><span class="cl">Invertory:/etc/ansible/hosts
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="2-ansible命令应用基础">2 ansible命令应用基础</h2>
<p><strong>语法</strong>:    <em><code>ansible &lt;host-pattern&gt; [-f forks] [-m module_name] [-a args]</code></em></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-f forks</td>
<td>启助的并发线程数。</td>
</tr>
<tr>
<td>-m module_name</td>
<td>要使用的模块。</td>
</tr>
<tr>
<td>-a args</td>
<td>模块特有的参数</td>
</tr>
</tbody>
</table>
<h4 id="查看模块">查看模块</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible-doc -l
</span></span><span class="line"><span class="cl">command           	Executes a command on a remote node                            
</span></span><span class="line"><span class="cl">composer         	Dependency Manager for PHP                                     
</span></span><span class="line"><span class="cl">consul          	Add, modify &amp; delete services within a consul cluster.         
</span></span><span class="line"><span class="cl">consul_acl      	Manipulate Consul ACL keys and rules                           
</span></span><span class="line"><span class="cl">consul_kv       	Manipulate entries in the key/value store of a consul cluster. 
</span></span><span class="line"><span class="cl">consul_session    	manipulate consul sessions                                     
</span></span><span class="line"><span class="cl">copy               	Copies files to remote locations    
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ ansible-doc -s command
</span></span><span class="line"><span class="cl">- name: Executes a command on a remote node
</span></span><span class="line"><span class="cl">  command:
</span></span><span class="line"><span class="cl">    chdir:# Change into this directory before running the command.
</span></span><span class="line"><span class="cl">     creates: A filename or (since 2.0) glob pattern, when it already exists, this step will *not* be run.
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="21-常见模块">2.1 常见模块</h3>
<p><em><code>command</code></em>：<font color=#0215cd size=3>命令模块，默认模块，用于在远程执行命令。</font></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ ansible 10.0.0.12 -m command -a &#39;date&#39;
</span></span><span class="line"><span class="cl">10.0.0.12 | SUCCESS | rc=0 &gt;&gt;
</span></span><span class="line"><span class="cl">Wed May  2 14:40:57 CST 2018
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ ansible 10.0.0.12 -a &#39;date&#39;
</span></span><span class="line"><span class="cl">10.0.0.12 | SUCCESS | rc=0 &gt;&gt;
</span></span><span class="line"><span class="cl">Wed May  2 14:41:03 CST 2018
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><em><strong>cron</strong></em></p>
<blockquote>
<p><em>state：表示任务是添加还是移除。present表示必须提供的，absent表示必须不能提供的
present：安装、absent移除。<em>可以不写，默认都是</em>。state默认 present</em></p>
</blockquote>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible websrvs cron -a &#39;minute=&#34;*/10&#34; job=&#34;/bin/echo hellow&#39; name-&#34;test cron job&#34;&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong><code>user</code>：指明创建用户的名字</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible all -m user -a &#39;name=user1&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible all -m group -a &#39;name=mysql gid=2000 system=yes&#39;
</span></span><span class="line"><span class="cl">ansible all -m user -a &#39;user=mysql group=mysql system=yes uid=3306&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><em><strong><code>copy</code></strong></em></p>
<blockquote>
<p><em>src本地原路径，可以使用相对和绝对路径
dest远程目标路径，必须使用绝对路径</em></p>
</blockquote>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible all -m copy -a &#39;src=https://www.oomkill.com/etc/hosts dest=/tmp/h.ansible&#39; owner=&#39;root&#39; mode=&#39;644&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><p><em><strong><font color=#0215cd size=3>content：取代src，表示直接用此处指定的信息生成为目标文件内容</font></strong></em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible all -m copy -a &#39;content=&#34;test ansible&#34; dest=/tmp/h.ansible&#39; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ ll /tmp/
</span></span><span class="line"><span class="cl">total 56
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root   12 May  2 14:50 h.ansible
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><em><strong><code>file</code></strong></em></p>
<blockquote>
<p><em>设置文件属性，path指定文件路径，可以用name或dest替代。</em></p>
</blockquote>
</blockquote>
<p><strong>创建文件的符号链接</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible all -m file -a &#39;path=/tmp/h src=https://www.oomkill.com/tmp/h.ansible state=link&#39;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$  ll /tmp/
</span></span><span class="line"><span class="cl">lrwxrwxrwx 1 root root   14 May  2 23:08 h -&gt; /tmp/h.ansible
</span></span><span class="line"><span class="cl">-rw-r--r-- 1 root root   12 May  2 23:05 h.ansible
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible all -m file -a &#39;name=/tmp/h.123 src=https://www.oomkill.com/tmp/h.ansible state=link&#39;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ ll /tmp/
</span></span><span class="line"><span class="cl">total 56
</span></span><span class="line"><span class="cl">lrwxrwxrwx. 1 root root   14 May  2 14:53 h -&gt; /tmp/h.ansible
</span></span><span class="line"><span class="cl">lrwxrwxrwx. 1 root root   14 May  2 15:00 h.123 -&gt; /tmp/h.ansible
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>删除文件夹</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible all -m file -a &#39;path=/tmp/ state=absent&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>创建文件夹</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible all -m file -a &#39;path=/tmp/test-create state=directory&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><p><font color=#0215cd size=2>state=file如果文件不存在，将失败，请使用copy或templates创建</font></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible-doc -s file
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>修改文件权限</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible test -m file -a &#39;owner=mysql group=mysql mode=000 path=/tmp/tomcat.xml&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>service 指定运行状态</strong></p>
</blockquote>
<ul>
<li>enabled：是否开机自动启动，取值为true或false</li>
<li>name：服务名称</li>
<li>state：状态，取位有started stopped restarted</li>
</ul>
<blockquote>
<p><strong>shell：在远程主机上运行命令。</strong></p>
</blockquote>
<blockquote>
<p><strong>script：将本地脚本复制到远程主机并运行</strong></p>
</blockquote>
<blockquote>
<p><strong>yum 安装程序包</strong></p>
</blockquote>
<ul>
<li>name：指明要安装的程序包，可以带上版本号</li>
<li>state：present，latest安装 absent卸载</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ansible test -m yum -a &#39;name=zsh state=present&#39;
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
  </channel>
</rss>

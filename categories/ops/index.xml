<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ops on Cylon&#39;s Collection</title>
    <link>https://www.oomkill.com/categories/ops/</link>
    <description>Recent content in ops on Cylon&#39;s Collection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 02 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.oomkill.com/categories/ops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使nginx支持分布式追踪</title>
      <link>https://www.oomkill.com/2022/07/opentracing-nginx/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2022/07/opentracing-nginx/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="background">Background</h2>
<p>NGINX 是一个通用且流行的应用程序。也是最流行的 Web 服务器，它可用于提供静态文件内容，但也通常与其他服务一起用作分布式系统中的组件，在其中它用作反向代理、负载均衡 或 API 网关。</p>
<p>分布式追踪 <code>distributed tracing</code> 是一种可用于分析与监控应用程序的机制，将追踪在从源到目的的整个过程中的单个请求，这与仅通过单个应用程序域来追踪请求的形式不同。</p>
<p>换句话说，我们可以说分布式追踪是对跨多个系统的多个请求的拼接。拼接通常由一个或多个相关 ID 完成，并且跟踪通常是一组记录的、跨所有系统的结构化日志事件，存储在一个中心位置。</p>
<p>在这种背景的情况下， <code>OpenTracing</code> 应运而生。<code>OpenTracing </code> 是一个与应用供应商无关的 API，它可帮助开发人员轻松地跟踪单一请求的域。目前有多种开源产品都支持 OpenTracing（例如，<code>Jaeger</code>, <code>skywalking </code>等），并将其作为一种检测分布式追踪的标准化方法。</p>
<p>本文将围绕，从0到1实现在nginx配置分布式追踪的架构的简单实例说明。本文实例使用的组件为</p>
<ul>
<li><a href="https://nginx.org/en/download.html">nginx</a> v1.22</li>
<li><a href="https://www.jaegertracing.io/docs/1.35/getting-started/">jaeger-all-in-on</a> v1.38</li>
<li><a href="https://github.com/opentracing-contrib/nginx-opentracing">nginx-opentracing</a> v1.22</li>
<li><a href="https://github.com/jaegertracing/jaeger-client-cpp">jaeger-client-cpp</a> v0.9</li>
</ul>
<h2 id="源码构建nginx-opentracing">源码构建nginx-opentracing</h2>
<h3 id="准备nginx-opentracing">准备nginx-opentracing</h3>
<p><a href="https://github.com/opentracing-contrib/nginx-opentracing">nginx-opentracing</a> 仓库中可以看到，官方为每个nginx版本都提供了一个编译好的动态库（Nginx1.19.13+），我们可以直接拿来使用这个动态库，如果你想将这个利用Nginx 提供的编译参数 <code>--add-module=/path/to/module</code> 构建为nginx的内置功能的话，可能会出现一些问题，例如下面的一些错误：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ngx_http_opentracing_module.so/config was found
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">	/root/nginx-opentracing-0.25.0/opentracing//src/ngx_http_opentracing_module.cpp
</span></span><span class="line"><span class="cl">In file included from /root/nginx-opentracing-0.25.0/opentracing//src/ngx_http_opentracing_module.cpp:1:0:
</span></span><span class="line"><span class="cl">/root/nginx-opentracing-0.25.0/opentracing//src/load_tracer.h:3:38: fatal error: opentracing/dynamic_load.h: No such file or directory
</span></span></code></pre></td></tr></table>
</div>
</div><p>根据 <a href="https://github.com/opentracing-contrib/nginx-opentracing/issues/120">issue</a> 中查询得知 <code>nginx-opentracing</code> 需要嵌入到nginx中，是需要一些 <a href="https://github.com/opentracing/opentracing-cpp">opentracing-cpp</a> 因为对c++不熟，尝试调试很久还是上面的错误，故直接使用了官方提供的动态库。</p>
<h3 id="准备jaeger-client-cpp">准备jaeger-client-cpp</h3>
<p>根据 <code>nginx-opentracing</code> 中提到的，还需要一个 <a href="https://github.com/jaegertracing/jaeger-client-cpp">jaeger-client-cpp</a> 的 <code>tracer</code> 才可以正常运行（这也是作为jaeger架构中的角色）</p>
<p>来到 <code>jaeger-client-cpp</code> 看到Release提供的编译好的动态库已经很久了，而最新版都没有提供相应编译的版本，需要我们自己编译</p>
<blockquote>
<p><strong>说明</strong>： 编译依赖CMake 3.3+，gcc 4.9.2+</p>
</blockquote>
<p>我们的编译环境使用CentOS 7 默认gcc与CMake都符合要求需要自行编译两个的版本。</p>
<h4 id="编译gcc">编译gcc</h4>
<p>gcc下载地址：<a href="https://ftp.gnu.org/gnu/gcc/">https://ftp.gnu.org/gnu/gcc/</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> gcc-5.4.0
</span></span><span class="line"><span class="cl">./contrib/download_prerequisites
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mkdir gcc-build-5.4.0
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> gcc-build-5.4.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/usr/local/src/gcc-5.4.0/configure <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--enable-checking<span class="o">=</span>release <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--enable-languages<span class="o">=</span>c,c++ <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--disable-multilib
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl">make <span class="o">&amp;&amp;</span> make install
</span></span></code></pre></td></tr></table>
</div>
</div><p>引用处理 <sup>refer 1</sup></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> /usr/bin/
</span></span><span class="line"><span class="cl">mv gcc gcc_back
</span></span><span class="line"><span class="cl">mv g++ g++_back
</span></span><span class="line"><span class="cl">ln -s /usr/local/bin/gcc gcc
</span></span><span class="line"><span class="cl">ln -s /usr/local/bin/g++ g++
</span></span></code></pre></td></tr></table>
</div>
</div><p>编译时遇到几个问题</p>
<p><code>/lib64/libstdc++.so.6: version GLIBCXX_3.4.20' not found</code></p>
<p>gcc 编译，<code>libgcc</code>动态库有改动，恢复原状即可</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">configure: error: C++ compiler missing or inoperational
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">make[2]: \*** [configure-stage1-libcpp] Error 1    
</span></span><span class="line"><span class="cl">make[2]: Leaving directory `/home/clay/programming/C++/gcc-4.8.1&#39;    
</span></span><span class="line"><span class="cl">make[1]: \*** [stage1-bubble] Error 2    
</span></span><span class="line"><span class="cl">make[1]: Leaving directory `/home/clay/programming/C++/gcc-4.8.1&#39;    
</span></span><span class="line"><span class="cl">make: \*** [all] Error 2
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="编译cmake">编译cmake</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./configure --prefix<span class="o">=</span>/path/to/app
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">make
</span></span><span class="line"><span class="cl">make install
</span></span></code></pre></td></tr></table>
</div>
</div><p>这里遇到一个小问题 编译过程中遇到 <code>[libstdc++.so.6: version GLIBCXX_3.4.20 not found</code></p>
<p>因为这里使用了自己编译的gcc版本，需要指定下动态库的路径 <sup>refer 2</sup></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span>/usr/local/lib64 ./configure --prefix<span class="o">=</span>/usr/local/cmake
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="编译jaeger-client-cpp">编译jaeger-client-cpp</h4>
<p>这里根据官方提供的步骤操作即可</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> jaeger-client-cpp-0.9.0/
</span></span><span class="line"><span class="cl">mkdir build
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> build
</span></span><span class="line"><span class="cl"><span class="c1"># 这里建议使用下科学上网，编译过程中会使用Hunter自动下载所需的依赖项</span>
</span></span><span class="line"><span class="cl"><span class="nv">ALL_PROXY</span><span class="o">=</span>http://x.0.0.x:10811 /usr/local/cmake/bin/cmake .. 
</span></span><span class="line"><span class="cl">make
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>注：依赖项挺大的，下载时间可能很长，会hang主，只需等待结束即可</p>
<p>​		编译完成后 <code>libjaegertracing.so.0.9.0</code> 则是我们需要的</p>
</blockquote>
<h4 id="编译nginx">编译nginx</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./configure <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--user<span class="o">=</span>web_www <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--group<span class="o">=</span>web_www <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--with-pcre <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--with-compat <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--with-http_ssl_module  <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--with-http_gzip_static_module <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--prefix<span class="o">=</span>/root/nginx  <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--with-http_stub_status_module
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>--with-compat</code> 必须加上，表面允许使用动态库，否则编译完在启动时会报下面的错误</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nginx: <span class="o">[</span>emerg<span class="o">]</span> module <span class="s2">&#34;/root/nginx/conf/ngx_http_opentracing_module.so&#34;</span> is not binary compatible in /root/nginx/conf/nginx.conf:1
</span></span></code></pre></td></tr></table>
</div>
</div><p>遇到的问题，<code>cc nou found</code>，这里只需将 <code>gcc</code> 软连接一份为 <code>cc</code> 即可</p>
<h2 id="配置nginx">配置nginx</h2>
<h3 id="准备jaeger-client的配置">准备jaeger-client的配置</h3>
<p>jaeger.json，参数的说明可以参考<a href="https://github.com/jaegertracing/jaeger-client-cpp#configuration-via-environment">configuration</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;service_name&#34;</span><span class="p">:</span> <span class="s2">&#34;nginx&#34;</span><span class="p">,</span> <span class="c1">// 服务名
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nt">&#34;sampler&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;const&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;param&#34;</span><span class="p">:</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;reporter&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;localAgentHostPort&#34;</span><span class="p">:</span> <span class="s2">&#34;jaeger:6831&#34;</span> <span class="c1">// jaeger agent的地址
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;headers&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="c1">// jaeger的默认的jaeger Baggage头设置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nt">&#34;jaegerDebugHeader&#34;</span><span class="p">:</span> <span class="s2">&#34;jaeger-debug-id&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;jaegerBaggageHeader&#34;</span><span class="p">:</span> <span class="s2">&#34;jaeger-baggage&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;traceBaggageHeaderPrefix&#34;</span><span class="p">:</span> <span class="s2">&#34;uberctx-&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;baggage_restrictions&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;denyBaggageOnInitializationFailure&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostPort&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="在nginx中开启opentracing">在nginx中开启opentracing</h3>
<p>对于 <code>nginx-opentracing</code> 更多的参数可以参考 <a href="https://github.com/opentracing-contrib/nginx-opentracing/blob/master/doc/Reference.md">Reference.md</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-v" data-lang="v"><span class="line"><span class="cl"><span class="o">#</span> <span class="nv">加载</span> <span class="nc">OpenTracing</span> <span class="nv">动态模块</span><span class="err">。</span>
</span></span><span class="line"><span class="cl"><span class="nv">load_module</span> <span class="nv">conf</span><span class="o">/</span><span class="nv">ngx_http_opentracing_module</span><span class="p">.</span><span class="nv">so</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">worker_processes</span>  <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">user</span> <span class="nv">root</span> <span class="nv">root</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">events</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">worker_connections</span>  <span class="mi">1024</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">http</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">log_format</span> <span class="nv">opentracing</span> <span class="s1">&#39;{&#34;timestamp&#34;:&#34;</span><span class="o">$</span><span class="nv">time_iso8601</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;source&#34;:&#34;</span><span class="o">$</span><span class="nv">server_addr</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;hostname&#34;:&#34;</span><span class="o">$</span><span class="nv">hostname</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;ip&#34;:&#34;</span><span class="o">$</span><span class="nv">http_x_forwarded_for</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;traceID&#34;:&#34;</span><span class="o">$</span><span class="nv">opentracing_context_uber_trace_id</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;client&#34;:&#34;</span><span class="o">$</span><span class="nv">remote_addr</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;request_method&#34;:&#34;</span><span class="o">$</span><span class="nv">request_method</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;scheme&#34;:&#34;</span><span class="o">$</span><span class="nv">scheme</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;domain&#34;:&#34;</span><span class="o">$</span><span class="nv">server_name</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;referer&#34;:&#34;</span><span class="o">$</span><span class="nv">http_referer</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;request&#34;:&#34;</span><span class="o">$</span><span class="nv">request_uri</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;args&#34;:&#34;</span><span class="o">$</span><span class="nv">args</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;size&#34;:</span><span class="o">$</span><span class="nv">body_bytes_sent</span><span class="s1">,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;status&#34;: </span><span class="o">$</span><span class="nv">status</span><span class="s1">,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;responsetime&#34;:</span><span class="o">$</span><span class="nv">request_time</span><span class="s1">,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;upstreamtime&#34;:&#34;</span><span class="o">$</span><span class="nv">upstream_response_time</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;upstreamaddr&#34;:&#34;</span><span class="o">$</span><span class="nv">upstream_addr</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;http_user_agent&#34;:&#34;</span><span class="o">$</span><span class="nv">http_user_agent</span><span class="s1">&#34;,&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;&#34;https&#34;:&#34;</span><span class="o">$</span><span class="nv">https</span><span class="s1">&#34;&#39;</span>
</span></span><span class="line"><span class="cl">                       <span class="s1">&#39;}&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="o">#</span> <span class="nv">加载</span> <span class="nv">tracer</span><span class="err">，</span><span class="nv">这里使用的jaeger</span><span class="err">，</span><span class="nv">需要传递配置文件</span>
</span></span><span class="line"><span class="cl">    <span class="nv">opentracing_load_tracer</span> <span class="nv">conf</span><span class="o">/</span><span class="nv">libjaegertracing</span><span class="p">.</span><span class="nv">so</span> <span class="nv">conf</span><span class="o">/</span><span class="nv">jaeger</span><span class="p">.</span><span class="nv">json</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">#</span> <span class="nv">启用</span> <span class="nv">tracing</span> 
</span></span><span class="line"><span class="cl">    <span class="nv">opentracing</span> <span class="nv">on</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl">    <span class="o">#</span> <span class="nv">设置tag</span><span class="err">，</span><span class="nv">可选参数</span>
</span></span><span class="line"><span class="cl">    <span class="nv">opentracing_tag</span> <span class="nv">http_user_agent</span> <span class="o">$</span><span class="nv">http_user_agent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">include</span>       <span class="nv">mime</span><span class="p">.</span><span class="nv">types</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">default_type</span>  <span class="nv">application</span><span class="o">/</span><span class="nv">octet</span><span class="o">-</span><span class="nv">stream</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">sendfile</span>        <span class="nv">on</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">keepalive_timeout</span>  <span class="mi">65</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">listen</span>       <span class="mi">80</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">server_name</span>  <span class="nv">localhost</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">location</span> <span class="o">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">opentracing_operation_name</span> <span class="o">$</span><span class="nv">uri</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	    <span class="nv">opentracing_propagate_context</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="nv">root</span>   <span class="nv">html</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="nv">index</span>  <span class="nv">index</span><span class="p">.</span><span class="nv">html</span> <span class="nv">index</span><span class="p">.</span><span class="nv">htm</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="nv">access_log</span> <span class="nv">logs</span><span class="o">/</span><span class="nv">access</span><span class="p">.</span><span class="nv">log</span> <span class="nv">opentracing</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">error_page</span>   <span class="mi">500</span> <span class="mi">502</span> <span class="mi">503</span> <span class="mi">504</span>  <span class="o">/</span><span class="mi">50</span><span class="nv">x</span><span class="p">.</span><span class="nv">html</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">location</span> <span class="o">=</span> <span class="o">/</span><span class="mi">50</span><span class="nv">x</span><span class="p">.</span><span class="nv">html</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">root</span>   <span class="nv">html</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>注：这里使用的 <code>opentracing-nginx</code> 的动态库为 ot16 ，<code>linux-amd64-nginx-1.22.0-ot16-ngx_http_module.so.tgz</code> ，另外一个版本不兼容，<code>-t</code> 检查语法时会提示</p>
</blockquote>
<p><strong>配置说明</strong></p>
<p>对于每一个location都可以对其设置别名，这个就是 <code>opentracing_operation_name</code> 与 <code>opentracing_location_operation_name</code> 的区别</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">http {
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">    location = /upload/animal {
</span></span><span class="line"><span class="cl">      opentracing_location_operation_name upload;
</span></span><span class="line"><span class="cl">    ...
</span></span></code></pre></td></tr></table>
</div>
</div><p>更多的配置说明可以参考 <a href="https://github.com/opentracing-contrib/nginx-opentracing/blob/master/doc/Tutorial.md">Tutorial.md</a></p>
<p>此时我们可以在jaeger上查看，可以看到 NGINX 的 span（因为这里只配置了NGINX，没有配置更多的后端）。</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20220704002209142.png" alt="image-20220704002209142"  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20220704002227865.png" alt="image-20220704002227865"  /></p>
<blockquote>
<p>Reference</p>
<p>1 <a href="https://www.jianshu.com/p/8ce98a06492f">CentOS7 升级 GCC 到 5.4.0 版本</a></p>
<p>2 <a href="https://stackoverflow.com/questions/53592796/libstdc-so-6-version-glibcxx-3-4-20-not-found">libstdc++.so.6: version GLIBCXX_3.4.20 not found</a></p>
<p>3 <a href="https://nginx.org/en/docs/ngx_core_module.html#load_module">nginx load_module</a></p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>用于监控nginx的exporter：nginx-module-vts</title>
      <link>https://www.oomkill.com/2019/07/prome-nginx-module-vts/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/07/prome-nginx-module-vts/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>prometheus 监控nginx的模块 <a href="https://github.com/vozlt/nginx-module-vts">nginx-module-vts</a></p>
<p>下载后配置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">http{
</span></span><span class="line"><span class="cl">    vhost_traffic_status_zone; 
</span></span><span class="line"><span class="cl">    vhost_traffic_status_zone shared:vhost_traffic_status:32m; #  设置共享内存大小
</span></span><span class="line"><span class="cl">    server {
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">        vhost_traffic_status_filter_by_set_key  $status $server_name; # 计算详细的http状态代码的流量
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">        location /status {
</span></span><span class="line"><span class="cl">            vhost_traffic_status_display; # 设置了该指令，则可以访问如下：
</span></span><span class="line"><span class="cl">            vhost_traffic_status_display_format html;
</span></span><span class="line"><span class="cl">            vhost_traffic_status off; ## 启用或禁用模块工作
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>不想统计流量的server区域禁用<code>vhost_traffic_statu off</code></p>
<p>例： 计算upstream后端响应时间 <code>nginx_upstream_responseMsec{upstream=“group1”}</code></p>
<ul>
<li>一个完整的配置文件：<a href="https://github.com/arquivei/nginx-vts/blob/master/nginx.conf">nginx.conf</a></li>
<li>关于GEO相关：<a href="https://github.com/vozlt/nginx-module-vts/issues/162">GeoIP.dat file format #162</a></li>
<li>ngx如何配置GEO：<a href="https://medium.com/@karljohnson/geoip-discontinuation-upgrade-to-geoip2-with-nginxon-centos-c2a3dbcf8fd">GeoIP discontinuation; Upgrade to GeoIP2 with nginx on CentOS</a></li>
</ul>
<p>删除所zone内存中的数据</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl localhost/status/control?cmd<span class="o">=</span>delete<span class="p">&amp;</span><span class="nv">group</span><span class="o">=</span>*
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>prometheus传统架构安装</title>
      <link>https://www.oomkill.com/2019/04/prometheus-install/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2019/04/prometheus-install/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>全局配置选项</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">scrape_interval: 采集生命周期
</span></span><span class="line"><span class="cl">scrape_timeout: 采集超时时间
</span></span><span class="line"><span class="cl">evaluation_interval: 告警评估周期
</span></span><span class="line"><span class="cl">rule_files 监控告警规则
</span></span><span class="line"><span class="cl">scrape_config: 被监控端
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">altering 
</span></span></code></pre></td></tr></table>
</div>
</div><p>检查配置文件语法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ promtool check config \etc\prometheus.yml 
</span></span><span class="line"><span class="cl">Checking \etc\prometheus.yml
</span></span><span class="line"><span class="cl">  SUCCESS: 0 rule files found
</span></span></code></pre></td></tr></table>
</div>
</div><p>100 - (node_memory_MemFree_bytes+node_memory_Cached_bytes+node_memory_Buffers_bytes) \ node_memory_MemTotal_bytes * 100</p>
<p>计算剩余空间</p>
<p>node_filesystem_free_bytes{mountpoint=&quot;&quot;,fstype=~&ldquo;ext4|xfs&rdquo;} \ node_filesystem_size_bytes{mountpoint=&quot;&quot;,fstype=~&ldquo;ext4|xfs&rdquo;} * 100</p>
<p>查看使用的百分比</p>
<p>100-node_filesystem_free_bytes{mountpoint=&quot;&quot;,fstype=~&ldquo;ext4|xfs&rdquo;} \ node_filesystem_size_bytes{mountpoint=&quot;&quot;,fstype=~&ldquo;ext4|xfs&rdquo;} * 100</p>
<p>prometheus使用influxdb [Prometheus endpoints support in InfluxDB | InfluxData Documentation](https:\docs.influxdata.com\influxdb\v1.7\supported_protocols\prometheus)</p>
<p>[Configuration | Prometheus](https:\prometheus.io\docs\prometheus\latest\configuration\configuration)</p>
<p>配置文件参考</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">global</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">alerting</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">alertmanagers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">static_configs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">targets</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">rule_files</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">scrape_configs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">job_name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;prometheus1&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">file_sd_configs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">files</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s1">&#39;\data\sd_config\test.yml&#39;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">refresh_interval</span><span class="p">:</span><span class="w"> </span><span class="l">5s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">relabel_configs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="l">replace</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">source_labels</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s1">&#39;prometheous1&#39;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">regex</span><span class="p">:</span><span class="w"> </span><span class="l">(.*)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">replacement</span><span class="p">:</span><span class="w"> </span><span class="l">$1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">target_label</span><span class="p">:</span><span class="w"> </span><span class="l">ids</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="l">keep</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">source_labels</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;job&#34;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">job_name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;k8s_master&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">file_sd_configs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">files</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s1">&#39;\data\sd_config\master.yml&#39;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">refresh_interval</span><span class="p">:</span><span class="w"> </span><span class="l">5s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">remote_write</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http:\\localhost:8086\api\v1\prom\write?db=prometheus&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">remote_read</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http:\\localhost:8086\api\v1\prom\read?db=prometheus&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>influxdb使用</p>
<p><a href="https:%5Cwww.linuxdaxue.com%5Cinfluxdb-basic-operation.html">InfluxDB学习之InfluxDB的基本操作 | Linux大学</a></p>
<p>查看所有表</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SHOW</span><span class="w"> </span><span class="n">MEASUREMENTS</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">select</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">up</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>https:\github.com\kubernetes\kubernetes\tree\master\cluster\addons\prometheus</p>
<p>文件主要包括一下几个部分</p>
<ul>
<li>Prometheus的安装 包括 rbac service configmap</li>
<li>Prometheus-metrics 获取资源对象</li>
<li>node-exporter 获取工作节点资源信息</li>
<li>alertmanager 告警</li>
</ul>
<p>安装顺序</p>
<p>prometheus-rbac.yaml Prometheus访问apiserver的授权
prometheus-configmap.yaml 管理Prometheus的配置文件
prometheus-service.yaml 将Prometheus端口暴漏
prometheus-statefulset.yaml</p>
<p>原因为 prometheus-statefulset.yaml中的<code>accessModes</code>不能为<code>ReadWriteOnce</code>
prometheus&quot;is invalid: spec: Forbidden: updates to statefulset spec for fields other than &lsquo;replicas&rsquo;, &rsquo;template&rsquo;, and &lsquo;updateStrategy&rsquo; are forbidden</p>
<p>日志中报错<code>pod has unbound immediate persistentvolumeclaims back-off restarting failed container</code></p>
<p>错误原因：动态绑定至其他sc上，查看<code>kubectl describe pvc prometheus-data-prometheus-0 -n kube-system</code>pvc中报错<code>storageclass.storage.k8s.io &quot;nfs&quot; not found</code></p>
<p>prometheus时间不一致问题</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">containers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">myweb</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">harbor/tomcat:8.5-jre8</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumeMounts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">host-time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">mountPath</span><span class="p">:</span><span class="w"> </span><span class="l">/etc/localtime</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">containerPort</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">host-time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">hostPath</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/etc/localtime</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>部署应用时，单独读取主机的“/etc/localtime”文件，即创建pod时同步时区，无需修改镜像，但是每个应用都要单独设置。</p>
<p>prometheus server down</p>
<p>编辑prometheus-statusfullset.yaml 修改其配置localhost 改为 127.0.0.1</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">time=&#34;2020-11-20T18:44:48+08:00&#34; level=error msg=&#34;subset not found for kube-system/prometheus-server&#34; providerName=kubernetescrd ingress=promserver namespace=kube-system
</span></span></code></pre></td></tr></table>
</div>
</div><p>查找原因kubernetes svc 匹配错误 service endpoint没有匹配到内容</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ kubectl describe svc  prometheus-server  -n kube-system 
</span></span><span class="line"><span class="cl">Name:              prometheus-server
</span></span><span class="line"><span class="cl">Namespace:         kube-system
</span></span><span class="line"><span class="cl">Labels:            &lt;none&gt;
</span></span><span class="line"><span class="cl">Annotations:       Selector:  monitor=prometheus
</span></span><span class="line"><span class="cl">Type:              ClusterIP
</span></span><span class="line"><span class="cl">IP:                10.110.116.203
</span></span><span class="line"><span class="cl">Port:              &lt;unset&gt;  9090/TCP
</span></span><span class="line"><span class="cl">TargetPort:        9090/TCP
</span></span><span class="line"><span class="cl">Endpoints:         &lt;none&gt;
</span></span><span class="line"><span class="cl">Session Affinity:  None
</span></span><span class="line"><span class="cl">Events:            &lt;none&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>修改后正常</p>
<p>数学理论基础实现的</p>
<p>配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="nt">job_name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;prometheus&#39;</span><span class="w"> </span><span class="l">首先定义任务名称</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>prometheus的客户端主要有两种方式采集</p>
<ul>
<li>pull 主动输影的形式</li>
<li>push 被动推送的形式</li>
</ul>
<h3 id="put">put</h3>
<p>put指的是客户端（被监控机器）先安装各类已有exporters（由社区组积或企业开发的监控客户端插件）在系统上之后，exporter以守护进程的模式运行并开始采集数据</p>
<p>exporter 本身也是一个htp_server 可以对http请求作出响应返回数据（KV metrics）</p>
<p>prometheua用pull 这种主动拉的方式（HTTP get）去访问每个节点上exporter并采样回需要的数据</p>
<h3 id="push">push：</h3>
<p>push指的是在客户端（或者服务端）安装这个官方提供的pushgateway插件然后，使用我们自行开发的各种脚本把监控数据组织成K/V的形式，metrics形式发送给pushgateway之后 puahgataway会再推送给prometheus</p>
<p>这种是一种被动的数据采集模式</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>

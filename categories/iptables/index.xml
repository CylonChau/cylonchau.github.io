<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>iptables on Cylon&#39;s Collection</title>
    <link>https://www.oomkill.com/categories/iptables/</link>
    <description>Recent content in iptables on Cylon&#39;s Collection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 19 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.oomkill.com/categories/iptables/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>firewalld去除polkit验证</title>
      <link>https://www.oomkill.com/2023/04/firewalld-without-polkit/</link>
      <pubDate>Wed, 19 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2023/04/firewalld-without-polkit/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="为什么去除polkit验证">为什么去除polkit验证</h2>
<p>在2021年询问过firewalld项目组，firewalld在dbus通讯时，会进行两部认证 <code>policy kit</code> 和 <code>UID checking</code>，正是因为这种情况，使得firewalld不能够通过TCP/IP连接，如果你需要连接，因为存在  <code>UID checking</code> ，这时会因为没有UID会报错。</p>
<blockquote>
<p>firewalld needs to do some authorization on the dbus request. It currently tries two ways, in order of preference:</p>
<ol>
<li>policy kit</li>
<li>UID checking</li>
</ol>
<p>Neither of these are available over a TCP/IP dbus connection. <sup><a id="1">[1]</a></sup></p>
</blockquote>
<h2 id="如何去除polkit">如何去除polkit</h2>
<p>首选需要确定你的firewalld版本，例如Centos7系列，那么你的 firewalld 版本为 0.6.3，那么你需要修改的包为 <code>python-firewall-0.6.3</code>, 在 debian11 上 firewalld版本默认为 0.9.3，那么需要关注的版本为：<code>python3-firewall_0.9.3</code></p>
<p>在确定版本后直接从github仓库进行拉去修改就可以</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git fetch v0.9.3
</span></span><span class="line"><span class="cl">git checkout v0.9.3
</span></span></code></pre></td></tr></table>
</div>
</div><p>对于 python-firewall-0.6.3 来说。直接注释掉 <code>slip.dbus.polkit.require_auth</code> 就可以了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nd">@slip</span><span class="o">.</span><span class="n">dbus</span><span class="o">.</span><span class="n">polkit</span><span class="o">.</span><span class="n">require_auth</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">dbus</span><span class="o">.</span><span class="n">PK_ACTION_POLICIES_INFO</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nd">@dbus_service_method</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">dbus</span><span class="o">.</span><span class="n">DBUS_INTERFACE_POLICIES</span><span class="p">,</span> <span class="n">in_signature</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                     <span class="n">out_signature</span><span class="o">=</span><span class="s1">&#39;as&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>而对于新一些版本的场景下，可以在github上看到，他们移除了对 python-slip 的依赖，这将对去除polkit认证的步骤则有些许调整 <sup><a id="2">[2]</a></sup>:</p>
<ol>
<li>
<p>首先需要完全移除修饰器 <code>polkit.require_auth</code></p>
</li>
<li>
<p>完全移除修饰器 <code>@slip.dbus.polkit.enable_proxy</code></p>
</li>
<li>
<p>由于对 <code>slip.dbus</code> 去除，那么需要注释掉 <code>import slip.dbus*</code></p>
</li>
<li>
<p>此时修改firewall server，去除基于slip的mainloop，改为旧版本形式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">mainloop</span> <span class="o">=</span> <span class="n">GLib</span><span class="o">.</span><span class="n">MainLoop</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="n">slip</span><span class="o">.</span><span class="n">dbus</span><span class="o">.</span><span class="n">service</span><span class="o">.</span><span class="n">set_mainloop</span><span class="p">(</span><span class="n">mainloop</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">mainloop</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 修改为</span>
</span></span><span class="line"><span class="cl"><span class="n">mainloop</span> <span class="o">=</span> <span class="n">GLib</span><span class="o">.</span><span class="n">MainLoop</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">mainloop</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>为了兼容命令 <code>firewall-cmd</code> ，还需要将 FirewallClient 中使用 <code>slip.dbus.xxx</code> 的内容修改为 <code>dbus.xxx</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="bp">self</span><span class="o">.</span><span class="n">bus</span> <span class="o">=</span> <span class="n">slip</span><span class="o">.</span><span class="n">dbus</span><span class="o">.</span><span class="n">SystemBus</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 修改为</span>
</span></span><span class="line"><span class="cl">    <span class="bp">self</span><span class="o">.</span><span class="n">bus</span> <span class="o">=</span> <span class="n">dbus</span><span class="o">.</span><span class="n">SystemBus</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">except</span> <span class="n">dbus</span><span class="o">.</span><span class="n">exceptions</span><span class="o">.</span><span class="n">DBusException</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">raise</span> <span class="n">FirewallError</span><span class="p">(</span><span class="n">errors</span><span class="o">.</span><span class="n">DBUS_ERROR</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="n">e</span><span class="o">.</span><span class="n">get_dbus_message</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Not using slip.dbus&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>最后一步，根据你的发行版本进行打包安装即可</p>
</li>
</ol>
<hr>
<blockquote>
<p>Tips：Redhat系列官方提供了rpm打包文件直接用就可以</p>
</blockquote>
<hr>
<p>debian control文件为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Package: python3-firewall
</span></span><span class="line"><span class="cl">Version: 0.9.3
</span></span><span class="line"><span class="cl">Architecture: amd64
</span></span><span class="line"><span class="cl">Description: python3-firewall
</span></span><span class="line"><span class="cl">Maintainer: Cylon Chau &lt;cylonchau@outlook.com&gt;
</span></span><span class="line"><span class="cl">Section: comm
</span></span><span class="line"><span class="cl">Homepage: https://github.com/cylonchau/firewalld
</span></span></code></pre></td></tr></table>
</div>
</div><p>debian构建目录为根据原生包目录格式进行后见即可</p>
<h2 id="dbus配置">dbus配置</h2>
<p>debian 系列 dbus 配置与 redhat 系列有略微差别，配置文件目录为</p>
<ul>
<li>主配置文件需要自行控制权限，必须为：<code>/etc/dbus-1/system.d/org.freedesktop.PackageKit.conf</code></li>
<li>其他配置可以根据redhat 系列进行调整即可</li>
</ul>
<p><strong>最后感谢firewalld团队，issue回复超级快</strong>，如果你需要像使用阿里云安全组使用firewalld管理你公司的大量linux 防火墙，可以试试我的项目 github.com/cylonchau/firewalld-gateway，这是一个firewlld控制器，可以管理大量的firewalld主机</p>
<h2 id="reference">Reference</h2>
<p><sup id="1">[1]</sup> <a href="https://github.com/firewalld/firewalld/issues/851"><em>firewalld issue 851</em></a></p>
<p><sup id="2">[2]</sup> <a href="https://github.com/firewalld/firewalld/pull/793"><em>firewalld issue 793 drop dependency python-slip</em></a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ipset性能测试</title>
      <link>https://www.oomkill.com/2022/11/ipset-preformance/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2022/11/ipset-preformance/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="测试方法">测试方法</h2>
<p>基于使用场景，最后⽣成的规则会是按照 ip 或者 <code>ip:port</code> 来进行过滤，测试时将使用10万条 <code>iptables</code> 规则来模拟对性能的压力；为了最大化测试压力情况，10万条 <code>iptables</code> 规则将都是==不会匹配==机房流量，通俗来讲，就是链式匹配会进行所有匹配并最后以无匹配告终。</p>
<p>网络负载的模拟将使用同机房 <code>scp</code> 来模拟，并按照下述条件进行匹配：</p>
<ul>
<li>查看正常的拷贝速度，cpu负载等</li>
<li>我们建⽴10万条的普通 <code>iptables</code> 规则，查看规则建立速度，拷贝速度，CPU负载，CPU主要耗时操作等</li>
<li>我们建⽴10万的 <code>ipset</code> ，并把普通的 <code>iptables</code> 规则转为结合 <code>ipset</code> 的规则，查看规则建立速度，拷贝速度，CPU负载，CPU主要耗时等。</li>
</ul>
<h2 id="实验开始">实验开始</h2>
<p><strong>步骤一</strong>：在同机房的⼀个机器构造⼀个大文件</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104233138861.png" alt="image-20221104233138861"  /></p>
<p>同机房拷贝</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104233643372.png" alt="image-20221104233643372"  /></p>
<p>观察网卡速度，CPU，系统主要耗时操作的等，此场景将在<code>iptables</code> 规则为空的情况下进行观察</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104234017089.png" alt="image-20221104234017089"  /></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104234322789.png" alt="image-20221104234322789"  /></p>
<p>使用 <code>sar</code> 观测网卡速度</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104233834434.png" alt="image-20221104233834434"  /></p>
<p>使用 <code>top</code> 观察CPU负载</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104234452841.png" alt="image-20221104234452841"  /></p>
<p>使用 <code>perf top -G</code> 观察CPU占用</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104234724668.png" alt="image-20221104234724668"  /></p>
<p><strong>步骤二</strong>：创建10万条iptables，观察⽹卡速度、cpu、系统主要耗时操作的等，会发现cpu利⽤率⼤部分被ipt占⽤，拷⻉速度下降到不到⼗分之⼀</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> *filter
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="o">((</span><span class="nv">i</span><span class="o">=</span>1<span class="p">;</span>i&lt;<span class="o">=</span><span class="nv">$1</span><span class="p">;</span>i++<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> -I INPUT -S <span class="nv">$i</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> COMMIT
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行脚本</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">time</span> ./mkrule.sh <span class="m">100000</span> <span class="p">|</span> sudo iptables-restore
</span></span></code></pre></td></tr></table>
</div>
</div><p>观察添加规则后的⽹卡速度，CPU，系统主要耗时操作的等</p>
<p>使用 <code>sar</code> 观测网卡速度</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104235306056.png" alt="image-20221104235306056"  /></p>
<p>使用 <code>top</code> 观察CPU负载</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104235441887.png" alt="image-20221104235441887"  /></p>
<p>使用 <code>perf top -G</code> 观察CPU占用</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221104235624488.png" alt="image-20221104235624488"  /></p>
<p><strong>步骤三</strong>：使用ipset替换iptables</p>
<p>此时改为使⽤ <code>ipset</code> ⽅式观察网卡卡速度，CPU，系统主要耗时操作的等，会发现跟没有规则没有明显变化。ipset的内存量不到2M。初步估计内存使⽤量 = $hashsize \times 16 + 存⼊数 \times (4～32之间)$</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">#ipset create whitelist hash:ip maxelem 1000000 -exist</span>
</span></span><span class="line"><span class="cl"><span class="c1">#ipset flush whitelist</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39; creae whitelist hash:ip family inet hashsize 65536 maxelem 100000000&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="o">((</span><span class="nv">i</span><span class="o">=</span>1<span class="p">;</span>i&lt;<span class="o">=</span><span class="nv">$1</span><span class="p">;</span>i++<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span>	
</span></span><span class="line"><span class="cl">	<span class="c1">#ipset add whitelist $i</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> add whitelist <span class="nv">$i</span>
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span><span class="line"><span class="cl"><span class="c1"># iptables -I INPUT -m set --match-set whitelisti src -j ACCEPT</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行脚本</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">time</span> ./mkset.sh <span class="m">100000</span> <span class="p">|</span> sudo ipset restore
</span></span><span class="line"><span class="cl">$ sudo iptables -Ln
</span></span><span class="line"><span class="cl">$ sudo iptables -I INPUT -m <span class="nb">set</span> --match-set whitelisti src -j ACCEPT
</span></span></code></pre></td></tr></table>
</div>
</div><p>观察添加规则后的⽹卡速度，CPU，系统主要耗时操作的等</p>
<p>使用 <code>sar</code> 观测网卡速度</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221105000318616.png" alt="image-20221105000318616"  /></p>
<p>使用 <code>top</code> 观察CPU负载</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221105000454342.png" alt="image-20221105000454342"  /></p>
<p>使用 <code>perf top -G</code> 观察CPU占用</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221105000630330.png" alt="image-20221105000630330"  /></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo ipset list <span class="p">|</span> head
</span></span><span class="line"><span class="cl">Name: whitelist
</span></span><span class="line"><span class="cl">Type: hash:ip
</span></span><span class="line"><span class="cl">Header: family inet hashsize <span class="m">65536</span> maxelem <span class="m">100000000</span>
</span></span><span class="line"><span class="cl">Size in memory: <span class="m">1891208</span>
</span></span><span class="line"><span class="cl">References: <span class="m">1</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>总结：ipset对于CPU和内存的影响很小，在大量规则场景下符合预期</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>firewalld</title>
      <link>https://www.oomkill.com/2017/03/firewalld/</link>
      <pubDate>Thu, 02 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2017/03/firewalld/</guid>
      <description></description>
      <content:encoded><![CDATA[<h3 id="1-firewalld的配置文件">1 firewalld的配置文件</h3>
<p>以xml格式为主</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/etc/firewalld/
</span></span><span class="line"><span class="cl">/usr/lib/firewalld/
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用时的规则是这样的：当需要一个文件时firewalld会首先到第一个目录中查找，如果找到直接使用，否则会继续到第二个目录中查找。</p>
<h4 id="11-配置文件结构">1.1 配置文件结构</h4>
<p>firewalld的配置文件主要有两个文件和三个目录</p>
<p>文件：firewalld.conf、lockdown-whitelist.xml</p>
<p>目录：zone services icmptypes</p>
<h4 id="12-firewalldconf">1.2 firewalld.conf</h4>
<p>firewalld的主配置文件，不过非常简单，只有五个配置项</p>
<p>defaultzone：默认使用的zone默认public</p>
<p>minimalmark：标记最小值</p>
<p>cleanUpOnExit：退出当前firewalld后是否清除防火墙规则，默认值为yes;</p>
<p>zones</p>
<p>保存zone配置文件</p>
<p>services</p>
<p>保存service配置文件</p>
<p>icmptypes</p>
<p>保存和icmp类型相关的配置文件</p>
<h3 id="2-firewall操作">2 firewall操作</h3>
<h4 id="21-查看firewalld状态">2.1 查看firewalld状态</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --state
</span></span><span class="line"><span class="cl">not running
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ systemctl start firewalld
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ firewall-cmd --state
</span></span><span class="line"><span class="cl">running
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="22-不改变状态的条件下重新加载防火墙">2.2 不改变状态的条件下重新加载防火墙</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">firewall-cmd --reload
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>获取支持的区域列表</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">firewall-cmd --get-zone
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>获得所有支持的服务</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --get-services
</span></span><span class="line"><span class="cl">RH-Satellite-6 amanda-client bacula bacula-client dhcp dhcpv6 dhcpv6-client dns ftp high-availability http https imaps ipp ipp-client ipsec kerberos kpasswd ldap ldaps libvirt libvirt-tls mdns mountd ms-wbt mysql nfs ntp openvpn pmcd pmproxypmwebapi pmwebapis pop3s postgresql proxy-dhcp radius redis rpc-bind samba samba-client smtp ssh telnet tftp tftp-clienttransmission-client vnc-server wbem-https
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>获取所有支持的ICMP类型</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --get-icmptypes
</span></span><span class="line"><span class="cl">destination-unreachable echo-reply echo-request parameter-problem redirect router-advertisement router-solicitation source-quench time-exceeded
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3-firewall-cmd的基础操作">3 firewall-cmd的基础操作</h3>
<h4 id="31-设置并获得默认区域">3.1 设置并获得默认区域</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --set-default-zone<span class="o">=</span>public
</span></span><span class="line"><span class="cl">success
</span></span><span class="line"><span class="cl">$ firewall-cmd --get-default-zone
</span></span><span class="line"><span class="cl">public
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="32-在不改变条件下重载防火墙">3.2 在不改变条件下重载防火墙</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --reload
</span></span><span class="line"><span class="cl">success
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>获得所有支持区域</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --get-services
</span></span><span class="line"><span class="cl">RH-Satellite-6 amanda-client bacula bacula-client dhcp dhcpv6 dhcpv6-client dns ftp high-availability http https imaps ipp ipp-client ipsec kerberos kpasswd ldap ldaps libvirt libvirt-tls mdns mountd ms-wbt mysql nfs ntp openvpn pmcd pmproxypmwebapi pmwebapis pop3s postgresql proxy-dhcp radius redis rpc-bind samba samba-client smtp ssh telnet tftp tftp-clienttransmission-client vnc-server wbem-https
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>列出全部启用区域的信息</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --list-all-zones
</span></span><span class="line"><span class="cl">block
</span></span><span class="line"><span class="cl">  interfaces:
</span></span><span class="line"><span class="cl">  sources:
</span></span><span class="line"><span class="cl">  services:
</span></span><span class="line"><span class="cl">  ports:
</span></span><span class="line"><span class="cl">  masquerade: no
</span></span><span class="line"><span class="cl">  forward-ports:
</span></span><span class="line"><span class="cl">  icmp-blocks:
</span></span><span class="line"><span class="cl">  rich rules:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">dmz
</span></span><span class="line"><span class="cl">  interfaces:
</span></span><span class="line"><span class="cl">  sources:
</span></span><span class="line"><span class="cl">  services: ssh
</span></span><span class="line"><span class="cl">  ports:
</span></span><span class="line"><span class="cl">  masquerade: no
</span></span><span class="line"><span class="cl">  forward-ports:
</span></span><span class="line"><span class="cl">  icmp-blocks:
</span></span><span class="line"><span class="cl">  rich rules:
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">...
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="33-获得活动区域">3.3 获得活动区域</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --get-active-zones
</span></span><span class="line"><span class="cl">public
</span></span><span class="line"><span class="cl">  interfaces: eth0
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="34-禁止掉ssh服务">3.4 禁止掉ssh服务</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">firewall-cmd --zone<span class="o">=</span>public --remove-service<span class="o">=</span>ssh
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="35-允许某个服务生效">3.5 允许某个服务生效</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">firewall-cmd --zone<span class="o">=</span>public --add-service<span class="o">=</span>ssh
</span></span></code></pre></td></tr></table>
</div>
</div><p>永久添加  <code>--permanent </code></p>
<h4 id="36-允许某个服务在一个时间段内生效">3.6 允许某个服务在一个时间段内生效</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --add-service<span class="o">=</span>ssh --timeout<span class="o">=</span><span class="m">60</span>
</span></span><span class="line"><span class="cl">success
</span></span><span class="line"><span class="cl">$ firewall-cmd --list-all
</span></span><span class="line"><span class="cl">drop <span class="o">(</span>default, active<span class="o">)</span>
</span></span><span class="line"><span class="cl">  interfaces: eth0
</span></span><span class="line"><span class="cl">  sources:
</span></span><span class="line"><span class="cl">  services: ssh
</span></span><span class="line"><span class="cl">  ports:
</span></span><span class="line"><span class="cl">  masquerade: yes
</span></span><span class="line"><span class="cl">  forward-ports:
</span></span><span class="line"><span class="cl">  icmp-blocks:
</span></span><span class="line"><span class="cl">  rich rules:
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --list-all
</span></span><span class="line"><span class="cl">drop <span class="o">(</span>default, active<span class="o">)</span>
</span></span><span class="line"><span class="cl">  interfaces: eth0
</span></span><span class="line"><span class="cl">  sources:
</span></span><span class="line"><span class="cl">  services:
</span></span><span class="line"><span class="cl">  ports:
</span></span><span class="line"><span class="cl">  masquerade: yes
</span></span><span class="line"><span class="cl">  forward-ports:
</span></span><span class="line"><span class="cl">  icmp-blocks:
</span></span><span class="line"><span class="cl">  rich rules:
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="37-查询某个区域是否开启某项服务">3.7 查询某个区域是否开启某项服务</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --zone<span class="o">=</span>public --query-service<span class="o">=</span>ssh
</span></span><span class="line"><span class="cl">no
</span></span><span class="line"><span class="cl">$ firewall-cmd --zone<span class="o">=</span>home --query-service<span class="o">=</span>ssh
</span></span><span class="line"><span class="cl">yes
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="38-启动区域端口协议组合">3.8 启动区域端口协议组合</h4>
<p>此举将启用端口和协议的组合。端口可以是一个单独的端口 或者是一个端口范围 - 。协议可以是 tcp 或udp。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --zone<span class="o">=</span>public --add-port<span class="o">=</span>80/tcp
</span></span><span class="line"><span class="cl">success
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --zone<span class="o">=</span>public --add-port<span class="o">=</span>10000-20000/tcp
</span></span><span class="line"><span class="cl">success
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --zone<span class="o">=</span>public --list-all
</span></span><span class="line"><span class="cl">public
</span></span><span class="line"><span class="cl">  interfaces:
</span></span><span class="line"><span class="cl">  sources:
</span></span><span class="line"><span class="cl">  services: dhcpv6-client
</span></span><span class="line"><span class="cl">  ports: 80/tcp 10000-20000/tcp
</span></span><span class="line"><span class="cl">  masquerade: yes
</span></span><span class="line"><span class="cl">  forward-ports:
</span></span><span class="line"><span class="cl">  icmp-blocks:
</span></span><span class="line"><span class="cl">  rich rules:
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="39-禁用端口和协议组合">3.9 禁用端口和协议组合</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">success
</span></span><span class="line"><span class="cl">$ firewall-cmd --zone<span class="o">=</span>public --list-all
</span></span><span class="line"><span class="cl">public
</span></span><span class="line"><span class="cl">  interfaces:
</span></span><span class="line"><span class="cl">  sources:
</span></span><span class="line"><span class="cl">  services: dhcpv6-client
</span></span><span class="line"><span class="cl">  ports: 80/tcp
</span></span><span class="line"><span class="cl">  masquerade: yes
</span></span><span class="line"><span class="cl">  forward-ports:
</span></span><span class="line"><span class="cl">  icmp-blocks:
</span></span><span class="line"><span class="cl">  rich rules:
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="310-启动ip伪装功能">3.10 启动IP伪装功能</h4>
<p>此举启用区域的伪装功能。私有网络的地址将被隐藏并映射到一个公有IP。这是地址转换的一种形式，常用于路由。由于内核的限制，伪装功能仅可用于IPv4。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --add-masquerade --zone<span class="o">=</span>home
</span></span><span class="line"><span class="cl">success
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="311-禁用ip伪装">3.11 禁用ip伪装</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">firewall-cmd -- -masquerade --zone<span class="o">=</span>home
</span></span></code></pre></td></tr></table>
</div>
</div><p>在区域中启用端口转发或映射</p>
<p>语法：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">firewall-cmd <span class="o">[</span>--zone<span class="o">=]</span> --add-forward-port<span class="o">=</span><span class="nv">port</span><span class="o">=[</span>-<span class="o">]</span>:proto<span class="o">=</span> <span class="o">{</span> :toport<span class="o">=[</span>-<span class="o">]</span> <span class="p">|</span> :toaddr<span class="o">=</span><span class="p">|</span> :toport<span class="o">=[</span>-<span class="o">]</span>:toaddr<span class="o">=}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ firewall-cmd --add-forward-port<span class="o">=</span><span class="nv">port</span><span class="o">=</span>9999:proto<span class="o">=</span>tcp:toaddr<span class="o">=</span>192.168.2.82:toport<span class="o">=</span><span class="m">80</span>
</span></span><span class="line"><span class="cl">success
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="http://www.sa-log.com/282.html">http://www.sa-log.com/282.html</a></p>
<p><a href="http://www.fedora.hk/linux/yumwei/show_15.html">http://www.fedora.hk/linux/yumwei/show_15.html</a></p>
<p><a href="https://yq.aliyun.com/ziliao/94786">https://yq.aliyun.com/ziliao/94786</a></p>
<p>启用区域的ICMP阻塞功能</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ch1 iptables介绍</title>
      <link>https://www.oomkill.com/2016/10/ch1-iptables-introduction/</link>
      <pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2016/10/ch1-iptables-introduction/</guid>
      <description></description>
      <content:encoded><![CDATA[<h3 id="1-防火墙实战">1 防火墙实战</h3>
<p><strong>关闭两项功能</strong>：</p>
<ol>
<li>selinux（生产中也是关闭的），ids入侵检测，MD5指纹将。系统所有核心文件全部做指纹识别，将指纹留下，将来出问题，一看就知道那个文件被改过。</li>
<li> iptables（生产中看情况，内网关闭，外网打开），大并发的情况，不能开iptables，影响性能。
使用防火墙就不如不使用防火墙，不使用防火墙的前提是不给外网ip，工作中要少给外网服务器ip，这样防火墙使用率较低，防火墙使用也很消耗资源</li>
</ol>
<p><strong>安全优化</strong>：</p>
<ol>
<li>尽可能不给服务器配置外网IP。可以通过代理转发或者通过防火墙映射。</li>
<li>并发不是特别大情况再外网IP的环境，要开启iptables防火墙</li>
</ol>
<p><a href="http://edu.51cto.com/course/course_id-772.html">http://edu.51cto.com/course/course_id-772.html</a></p>
<p><strong>学好iptables基础</strong>：</p>
<ol>
<li> OSI7层模型以及不同层对应那些协议？</li>
<li> TCP/IP三次握手，四次断开的过程，TCP HEADER。</li>
<li> 常用的服务端口要了如指掌。</li>
</ol>
<h4 id="11-iptables防火墙简介">1.1 iptables防火墙简介</h4>
<p>Netfilter/iptables(以下简称iptables)是unix/linux自带的一款优秀且开放源代码的完全自由的基于包过滤的防火墙工具，它的功能十分强大，使用非常灵活，可以对流入和流出的服务器数据包进行很精细的控制。特别是他可以在一台非常低的硬件配置下跑的非常好（赛扬500MHZ 64M内存的情况部署网关防火墙）提供400人的上网服务四号==不逊色企业级专业路由器防火墙==。iptables+zebra+squid</p>
<p>iptables是linux2.4及2.6内核中集成的服务。其功能与安全性比其老一辈ipwadin ipchains强大的多（长江水后浪推前浪），iptables主要工作在OSI七层的二、三、四层，如果重新编译内核，iptables也可以支持7层控制（squid代理+iptables）。</p>
<h4 id="12-iptables名词和术语">1.2 iptables名词和术语</h4>
<p>容器：包含或者说属于关系</p>
<p><strong>什么是容器？</strong></p>
<p>​	在iptables里，就是用老描述这种包含或者说属于的关系</p>
<p><strong>什么是Netfilter/iptables?</strong></p>
<p>​	Netfilter是表（tables）的容器</p>
<p><strong>什么是表（tables）？</strong></p>
<p>​	表是链的容器，所有的链（chains）都属于其对应的表。</p>
<p><strong>什么是链（chains）？</strong></p>
<p>​	链（chains）是规则的容器</p>
<p><strong>什么是规则（policy）</strong></p>
<p>​	iptables一系列过滤信息的规范和具体方法条款</p>
<center><b>iptables抽象和实际比喻对比表</b></center>
| Netfilter | tables     | chains       | policy               |
| --------- | ---------- | ------------ | -------------------- |
| 一栋楼    | 楼里的房子 | 房子里的柜子 | 柜子里衣服的摆放规则 |
<h4 id="13-iptables工作流程">1.3 iptables工作流程</h4>
<p>iptables是采用数据包过滤机制工作的，所以他会对请求的数据包包头数据进行分析，并根据我们预先设定的规则进行匹配来决定是否可以进入主机。</p>
<p>数据包的流向是从左向右的!</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20200728221029808.png" alt="image-20200728221029808"  /></p>
<p><strong>iptables工作小结</strong>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">防火墙是一层层过滤的。实际是按照配置规则的顺序从上到下，从前到后进行过滤的。
</span></span><span class="line"><span class="cl">如果匹配上规则，即明确表明是阻止还是通过，此时数据包就不在向下匹配新规则了。
</span></span><span class="line"><span class="cl">如果所有规则中没有明确表明是阻止还是通过这个数据包，也就是没有匹配上规则，向下进行匹配，知道匹配默认规则得到明确的阻止还是通过。
</span></span><span class="line"><span class="cl">防火墙的默认规则是对应链的所有的规则执行完才会执行的。
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p><strong>提示</strong>：</p>
<p>iptables防火墙规则的执行顺序默认从前到后（从上到下）依次执行，遇到匹配的规则就不在继续向下检查，只有遇到不匹配的规则才会继续向下进行匹配。</p>
<hr>
<p>重点：<font color="#f8070d" size=2>匹配上了拒绝规则也是匹配</font>，这点要多注意。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p tcp --dport <span class="m">3306</span> -j DROP
</span></span><span class="line"><span class="cl">iptables -A INPUT -p tcp --dport <span class="m">3306</span> -j ACCEPT
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span> 
</span></span><span class="line"><span class="cl">DROP       tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:3306 
</span></span><span class="line"><span class="cl">ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:3306 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain FORWARD <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain OUTPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination   
</span></span></code></pre></td></tr></table>
</div>
</div><p>此时 ``telnet10.0.0.148 3306<code>是不通的，原因就是telnet请求已匹配上了拒绝规则</code>iptables -A INPUT -p tcp &ndash;dport 3306 -j DROP<code>,因此，不会在找下面的规则匹配了。如果希望</code>telnet 10.0.0.148 3306 <code>连通，可以吧ACCEPT规则中的-A改为-I，即 </code>iptables -I INPUT -p tcp &ndash;dport 3306 -j ACCEPT` 把允许规则放于INPUT链第一行生效</p>
<p>==默认规则是所有的规则执行完才会执行的==。</p>
<h4 id="14--iptables表tables和链chains">1.4  iptables表（tables）和链（chains）</h4>
<p>默认情况下，iptables根据功能和表的定义划分包含三个表，filter nat mangle，其每个表有包含不同的操作链（chains）。</p>
<p><strong>下面的表格展示了表和链的对应关系</strong></p>
<div style="text-align:center">
<table>
       <tr   >
        <td style="text-align:center; " rowspan="2" bgcolor='#aaa9a9'><strong>表</strong></td>
        <td  style="text-align:center; " colspan="5" bgcolor='#aaa9a9' ><strong>链（chains）</strong></td>
    </tr>
     <tr>
        <td height="30px" width="100px">INPUT</td>
       <td height="30px" width="130px">FORWARD</td>
       <td height="30px" width="130px">OUTPUT</td>
       <td height="30px" width="130px">PREROUTING</td>
       <td height="30px" width="130px">POSTROUTING</td>
    </tr>
    <tr>
      <td height="30px" width="80px">Filter</td>
      <td height="30px" width="50px" style="background:#2E8B57"></td>
      <td height="30px" width="50px" style="background:#2E8B57"></td>
      <td height="30px" width="50px" style="background:#2E8B57"></td>
      <td height="30px" width="50px" style="background:#A9A9A9"></td>
      <td height="30px" width="50px" style="background:#A9A9A9"></td>
  </tr>
    <tr>
      <td height="30px" width="50px">NAT</td>
      <td height="30px" width="50px" style="background:#A9A9A9" ></td>
      <td height="30px" width="50px" style="background:#A9A9A9" ></td>
      <td height="30px" width="50px" style="background:#2E8B57" ></td>
      <td height="30px" width="50px" style="background:#2E8B57" ></td>
      <td height="30px" width="50px" style="background:#2E8B57" ></td>
    </tr>
      <tr>
       <td height="30px" width="50px">Mangle</td>
      <td height="30px" width="50px" style="background:#2E8B57" ></td>
      <td height="30px" width="50px" style="background:#2E8B57" ></td>
      <td height="30px" width="50px" style="background:#2E8B57" ></td>
      <td height="30px" width="50px" style="background:#2E8B57" ></td>
      <td height="30px" width="50px" style="background:#2E8B57" ></td>
    </tr>
      <tr>
       <td height="30px" width="30px" colspan="6" >注：绿色表示有， 灰色表示无</td>
    </tr>
</table>  
</div>  
**提示：所有链名要大写**
<table align='center' style="border:1px solid #fff;">
   <tr  align='center' style="border:1px solid #fff;" >
       <td height="50px" width="100px" style="text-align:center;" ><strong>表名</strong></td>
        <td  style="text-align:center; "><strong>作用</strong></td>
    </tr>
     <tr>
       <tr  >
        <td style="text-align:center; ">filter</td>
        <td  >强调主要和主机自身有关，真正负责主机防火墙功能的（过滤流入流出主机的数据包）。filter表是iptables默认使用的表。这个表定义了三个链（chains）。<strong>企业工作场景：主机防火墙。</strong></td>
    </tr>
     <tr>
        <td height="50px" width="50px" style="text-align:center; " >nat</td>
       <td  height="50px">负责网络地址转换，即来源与目的IP地址和port的转换。应用：和主机本身无关。<strong>一般用于局域网共享上网或者特殊的端口转换服务相关。</strong><br><br>
NAT功能一般企业工作场景<br>
1. 用于做企业路由（zebra）或网关（iptables），共享上网（POSTROUTING）<br>
2. 做内部外部IP地址一对一映射（dmz），硬件防火墙映射IP到内部服务器，ftp服务，（PREROUTING）<br>
3. web，单个端口的映射，直接映射80端口（PREROUTING）。这个表示定义了三个链（chains），nat功能就相当于网络的acl控制。和网络交换机acl类似。</td>
    </tr>
    <tr>
        <td height="50px" width="50px" style="text-align:center; ">Mangle</td>
       <td  height="50px">主要负责修改数据包中特殊的路由标记，如TTL，TOS，NARK等。这个表定义了5个链</td>
    </tr>
</table>  
<table align='center' style="border:1px solid #fff;">
   <tr  align='center' style="border:1px solid #fff;" >
       <td height="50px" width="150px" style="text-align:center; " ><strong>链名</strong></td>
        <td  style="text-align:center; "><strong>作用</strong></td>
    </tr>
     <tr>
       <tr  >
        <td style="text-align:center; " height="50px" width="50px" >INPUT</td>
        <td  >负责过滤所有目标地址是本机地址的数据包。通俗的讲，就是过滤进入主机的数据包</td>
    </tr>
     <tr>
        <td  style="text-align:center; " >FORWAED</td>
       <td >负责转发流经主机的数据包。起转发的作用，和NAT关系很大，后面会详细讲LVS NAT模式。</td>
    </tr>
    <tr>
        <td style="text-align:center; ">PREROUTING</td>
       <td >在<strong>数据包到达防火墙时进行路由判断之前执行的规则</strong>，作用是改变数据包的目的地址、目的端口等。（通俗比喻，就是收信时，根据规则重写收件人的地址，这看上去很不地道啊！）
例如：把公网IP：124.42.60.113映射到居于玩分10.0.0.19服务器上。如果是web服务，可以把80端转为局域网的服务器上9000端口。</td>
    </tr>
   <tr>
        <td style="text-align:center; ">POSTROUTING</td>
       <td >在数据包离开防火墙时进行路由判断之后执行的规则，作用改变数据包的源地址、源端口等。（通俗比喻，就是寄信时，写好发件人的地址，要让人家回信时能后有地址可回。）例如：我们在现在的笔记本和虚拟机都是10.0.0.0/24，就是楚王的时候被我们企业路由器把源地址改成了公网地址了。<strong>生产应用：局域网共享上网。</strong></td>
    </tr>
</table>  
<p>由于这个表与特殊标记相关，一般情况下，我们用不到这个mangle表，这里就不做详细介绍了。给初学者的建议：新手学习时最好抓住一个主线向前学，能够跑通路就好，不一定要面面俱到，不然很容易陷进去，而苦恼，甚至失去学习的兴趣</p>
<h4 id="15--iptables表和链的流程图">1.5  iptables表和链的流程图</h4>
<p>下面这张图清晰的描绘了netfilter对包的处理流程</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221025001126693.png" alt="image-20221025001126693"  /></p>
<p><strong>为了更好的学习将上图简化为如下</strong></p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221025002458322.png" alt="image-20221025002458322"  /></p>
<center><strong>图1-1 iptables简化流程图</strong></center>
强调：上图可以看作地铁1 2号线来
<p>1号线：主要是NAT功能，</p>
<p>​	<strong>企业案例</strong>：</p>
<p>​		1. 局域网上网共享（路由和网关），使用NAT的POSTROUTING链</p>
<p>​		2. 外部IP和端口映射为内部IP和端口（DMZ功能），使用NAT的PREROUTING链。</p>
<p>2号线：主要是FILTER功能，即防火墙功能 FILTER INPUT FORWARD</p>
<p>​	<strong>企业案例</strong>：</p>
<p>​		主要应用就是主机服务器防火墙，使用FILTER的INPUT链</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ch2 iptables命令帮助信息</title>
      <link>https://www.oomkill.com/2016/10/ch2-iptables-command/</link>
      <pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2016/10/ch2-iptables-command/</guid>
      <description></description>
      <content:encoded><![CDATA[<h2 id="2-iptables命令帮助信息">2 iptables命令帮助信息</h2>
<p>有问题查帮助，下面是很全的帮助信息（必须拿下它）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -h
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl"><span class="c1"># INPUT链 	ACCEPT默认允许决策              </span>
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED 
</span></span><span class="line"><span class="cl">ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0           
</span></span><span class="line"><span class="cl">ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           
</span></span><span class="line"><span class="cl">ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22 
</span></span><span class="line"><span class="cl">REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain FORWARD <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain OUTPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination  
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="21-启动和查看iptables状态">2.1 启动和查看iptables状态</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/etc/init.d/iptables start
</span></span><span class="line"><span class="cl">systemctl start iptables
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>实例演示1</strong>：</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ /etc/init.d/iptables status
</span></span><span class="line"><span class="cl">表格：filter
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">num  target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl"><span class="m">1</span> ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED 
</span></span><span class="line"><span class="cl">2ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0           
</span></span><span class="line"><span class="cl">num  target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED 
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p><strong>提示：如果遇到下面的无法启动IPTABLES的情况</strong></p>
<hr>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ /etc/init.d/iptables start
</span></span><span class="line"><span class="cl">$ /etc/init.d/iptables start
</span></span><span class="line"><span class="cl">$ /etc/init.d/iptables status
</span></span><span class="line"><span class="cl">Firewall is stopped
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p><strong>解决：setup -&gt; Firewall Configuration -&gt; enable</strong></p>
<hr>
<p><strong>Iptables默认加载的内核模块</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ lsmod<span class="p">|</span>egrep <span class="s2">&#34;nat|filter&#34;</span>   
</span></span><span class="line"><span class="cl">iptable_filter          <span class="m">2793</span>  <span class="m">1</span> 
</span></span><span class="line"><span class="cl">ip_tables              <span class="m">17831</span>  <span class="m">1</span> iptable_filter
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>加载如下模块到linux内核</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">modprobe ip_tables <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe iptable_filter <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe iptable_nat <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe ip_conntrack <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe ip_conntrack_ftp <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe ip_nat_ftp <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe ipt_state
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="22-iptables参数">2.2 iptables参数</h3>
<table>
<thead>
<tr>
<th><strong>参数选项</strong></th>
<th><strong>注释说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>-n <em>num</em></td>
<td>数字</td>
</tr>
<tr>
<td>-L</td>
<td>列表</td>
</tr>
<tr>
<td>-F</td>
<td>清除所有规则，不会处理默认的规则</td>
</tr>
<tr>
<td>-X</td>
<td>删除用户自定义的链</td>
</tr>
<tr>
<td>-Z</td>
<td>链的计数器清零</td>
</tr>
<tr>
<td>-t</td>
<td>指定表</td>
</tr>
<tr>
<td>-A</td>
<td>添加协议</td>
</tr>
<tr>
<td>-p</td>
<td>协议（all tcp udp Icmp）默认为all</td>
</tr>
<tr>
<td>&ndash;dport</td>
<td>目的端口</td>
</tr>
<tr>
<td>&ndash;sport</td>
<td>源端口</td>
</tr>
<tr>
<td>-j</td>
<td>处理的行为（ACCEPT接受 DROP丢弃 REJECT拒绝）</td>
</tr>
<tr>
<td>-D</td>
<td>删除规则</td>
</tr>
<tr>
<td>-A</td>
<td>添加规则到指定链的结尾</td>
</tr>
<tr>
<td>-I</td>
<td>添加规则到指定链的开头</td>
</tr>
<tr>
<td>-s</td>
<td>指定源地址</td>
</tr>
<tr>
<td>&ndash;line-numbers</td>
<td>显示序号</td>
</tr>
<tr>
<td>-i <em>&lt;网络接口&gt;</em></td>
<td>指定数据包进入本机的网络接口。</td>
</tr>
<tr>
<td>-o <em>&lt;网络接口&gt;</em></td>
<td>指定数据包要离开本机所使用的网络接口。</td>
</tr>
</tbody>
</table>
<h3 id="23-清除默认规则">2.3 清除默认规则</h3>
<ul>
<li><code>iptables -F</code> 清除所有规则，不会处理默认的规则</li>
<li><code>iptables -X</code> 删除用户自定义的链</li>
<li><code>iptables -Z</code> 链的计数器清零</li>
</ul>
<p><strong>实例演示2</strong>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -F <span class="o">==</span> iptables --flush
</span></span><span class="line"><span class="cl">iptables -X <span class="o">==</span> iptables --delete-chain
</span></span><span class="line"><span class="cl">iptables -Z
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>禁止规则</strong></p>
</blockquote>
<p><strong>1.禁止ssh端口</strong></p>
<p>(1) 找出当前机器SSH端口</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ netstat -lntup<span class="p">|</span>grep ssh
</span></span><span class="line"><span class="cl">tcp     <span class="m">0</span>      <span class="m">0</span> 192.168.1.5:52113       0.0.0.0:*         LISTEN      1053/sshd 
</span></span></code></pre></td></tr></table>
</div>
</div><p>(2) 禁止掉当前SSH端口，这里是52113</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t <span class="o">[</span>table<span class="o">]</span> -<span class="o">[</span>AD<span class="o">]</span> chain rule-specification <span class="o">[</span>options<span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>具体命令</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p tcp --dport <span class="m">52113</span> -j DROP
</span></span><span class="line"><span class="cl">iptables -tfilter -A INPUT -p tcp --dport <span class="m">52113</span> -j DROP	
</span></span></code></pre></td></tr></table>
</div>
</div><p>注：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">1.  iptables默认用的就是filter表，因此，以上两条命令等价。
</span></span><span class="line"><span class="cl">2.  其中INPUT DROP要大写
</span></span><span class="line"><span class="cl">3.  --jump  -j target target for rule（may load target extension）基本处理行为：ACCEPT（接受）、DROP（丢弃）、REJECT（拒绝）。比较：DROP好于REJECT（不要给reject，拒绝会给对方信息，透漏信息了）
</span></span></code></pre></td></tr></table>
</div>
</div><p>命令行执行的规则，仅仅在内存里临时生效。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -A INPUT -p tcp --dport <span class="m">52113</span> -j DROP 
</span></span><span class="line"><span class="cl">$ 
</span></span><span class="line"><span class="cl">ÐÅºÅµÆ³¬Ê±Ê
</span></span></code></pre></td></tr></table>
</div>
</div><p>打台球：如果对方告诉你不去，REJECT（拒绝），如果对方没反应，DROP（丢弃）。</p>
<p>(3) 恢复刚才断掉的SSH连接</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">1.  去机房重启系统或者登陆服务器删除刚才的禁止规则。
</span></span><span class="line"><span class="cl">2.  让机房人员重启服务器或让机房人员拿用户密码登陆进去。
</span></span><span class="line"><span class="cl">3.  通过服务器的远程管理卡管理（推荐）。
</span></span><span class="line"><span class="cl">4.  先写一个定时任务，每5分钟就停止防火墙。
</span></span><span class="line"><span class="cl">5.  测试环境测试号，写成脚本，批量执行。
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们恢复的办法，登陆虚拟终端页面删除掉刚才的规则。当然也可执行iptables -F， iptables stop等。
练习：禁止用户访问80端口或3306端口：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t filter -A INPUT -p tcp --dport <span class="m">80</span> -j DROP
</span></span><span class="line"><span class="cl">$ telnet 192.168.1.5 <span class="m">80</span>
</span></span><span class="line"><span class="cl">Trying 192.168.1.5...
</span></span><span class="line"><span class="cl">Connected to 192.168.1.5.
</span></span><span class="line"><span class="cl">Escape character is <span class="s1">&#39;^]&#39;</span>.
</span></span><span class="line"><span class="cl">^CConnection closed by foreign host.
</span></span><span class="line"><span class="cl">$ telnet 192.168.1.5 <span class="m">80</span>
</span></span><span class="line"><span class="cl">Trying 192.168.1.5...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">DROP       tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:80 
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用-I和-A的顺序，防火墙的过滤根据规则顺序的。</p>
<ul>
<li>
<p><code>-A</code> 是添加规则到指定链的结尾，最后一条。</p>
</li>
<li>
<p><code>-I</code> 是添加规则到指定链的结尾，第一条。</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination   
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -A INPUT -p tcp -s 192.168.1.1 --dport <span class="m">80</span> -j DROP
</span></span><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">DROP       tcp  --  192.168.1.1          0.0.0.0/0           tcp dpt:80 
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>查看规则序号</strong>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -L -n --line-numbers
</span></span><span class="line"><span class="cl">$ iptables -L -n --line-numbers                             
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">num  target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl"><span class="m">1</span>    DROP       tcp  --  192.168.1.1          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl"><span class="m">2</span>    DROP       tcp  --  192.168.1.2          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl">Chain FORWARD <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>指定位置插入规则：插入到第二行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -I INPUT <span class="m">2</span> -p tcp -s 192.168.1.3 --dport <span class="m">80</span> -j DROP 
</span></span><span class="line"><span class="cl">$ iptables -L -n --line-numbers                               
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">num  target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl"><span class="m">1</span>    DROP       tcp  --  192.168.1.1          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl"><span class="m">2</span>    DROP       tcp  --  192.168.1.3          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl"><span class="m">3</span>    DROP       tcp  --  192.168.1.2          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl">Chain FORWARD <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>通过序号删除规则，删除上述第2条规则</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -D INPUT <span class="nv">2</span> <span class="o">==</span> delete from iptables where <span class="nv">id</span><span class="o">=</span><span class="m">2</span>
</span></span><span class="line"><span class="cl">$ iptables -L -n --line-numbers
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">num  target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl"><span class="m">1</span>    DROP       tcp  --  192.168.1.1          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl"><span class="m">2</span>    DROP       tcp  --  192.168.1.2          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl">Chain FORWARD <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>小结：总结删除规则的方法</strong>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">1.   iptables -D INPUT -P tcp --dport 8080 -J DROP
</span></span><span class="line"><span class="cl">2.   iptables -F 删除所有规则
</span></span><span class="line"><span class="cl">3.   /etc/init.d/iptables restart （用iptables命令行配置的命令都是临时生效）
</span></span><span class="line"><span class="cl">4.   iptables -D INPUT 序列号
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>基于客户端源地址网段控制，禁止10.0.0.0网段连入</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t filter -A INPUT -i eth0 -s 10.0.0.0/24 -J DROP
</span></span><span class="line"><span class="cl">iptables -A INPUT -i eth0 -s 10.0.0.0/24 -J DROP
</span></span></code></pre></td></tr></table>
</div>
</div><p>注：iptables默认用的就是filter表，因此以上两条命令等价。
执行以上命令可以发现，我这里已经无法远程连接了。
登陆虚拟机，删除刚才禁止的来源地址为10网段的命令。
<code>iptables -D INPUT -i eth0 -s 10.0.0.0/24 -J DROP</code> (完整策略规则删除)
<code>iptables -D INPUT 1</code>（根据策略在链中的序号删，每条链都是各自从1编号）。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -nL --line-numbers
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">num  target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl"><span class="m">1</span>    DROP       tcp  --  192.168.1.5          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl"><span class="m">2</span>    DROP       tcp  --  192.168.1.4          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl"><span class="m">3</span>    DROP       tcp  --  192.168.1.2          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain FORWARD <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">n      
</span></span><span class="line"><span class="cl">$ iptables -D INPUT <span class="m">1</span>
</span></span><span class="line"><span class="cl">$ iptables -nL --line-numbers
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">num  target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl"><span class="m">1</span>    DROP       tcp  --  192.168.1.4          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl"><span class="m">2</span>    DROP       tcp  --  192.168.1.2          0.0.0.0/0           tcp dpt:80 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain FORWARD <span class="o">(</span>policy ACCEPT<span class="o">)</span>   
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>还可以通过“！”来取反</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 只有 192.168.1.1才可访问80端口 ！放在选项的前面而不是参数的前面</span>
</span></span><span class="line"><span class="cl">iptables -I INPUT -p tcp ! -s 192.168.1.1 --dport <span class="m">80</span> -j DROP
</span></span></code></pre></td></tr></table>
</div>
</div><p>测试配置拒绝规则也是匹配：下面的测试有两个要点：非的作用，匹配拒绝也是匹配。</p>
<p>centos5版本</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -I INPUT -p tcp -s ! 192.168.1.1 --dport <span class="m">80</span> -j DROP
</span></span></code></pre></td></tr></table>
</div>
</div><p>centos6.4高版本：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -t filter -A INPUT -i eth0 -s ! 10.0.0.115 -j DROP
</span></span><span class="line"><span class="cl">Using intrapositioned negation <span class="o">(</span><span class="sb">`</span>--option ! this<span class="sb">`</span><span class="o">)</span> is deprecated in favor of extrapositioned <span class="o">(</span><span class="sb">`</span>! --option this<span class="sb">`</span><span class="o">)</span>.
</span></span><span class="line"><span class="cl"><span class="c1"># 解决方案： iptables -t filter -A INPUT -i eth0 -s ! 10.0.0.115 -j DROP</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>测试非”！“</strong></p>
</blockquote>
<p>1.源地址不是10.0.0.101单个IP的禁止链接</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">iptables -t filter -I INPUT -i eth0 ! -s 10.0.0.101 -j DROP
</span></span><span class="line"><span class="cl">iptables -A INPUT -p all -i eth0 ! -s 10.0.0.106 -j DROP # p(udp tcp icmp all)
</span></span><span class="line"><span class="cl"># 不让主机ping通
</span></span><span class="line"><span class="cl">iptables -t filter -I INPUT -p icmp --icmp-type 8 -i eth0 -s ! 192.168.2.83 -j DROP
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># ssh 断开链接
</span></span><span class="line"><span class="cl">$ iptables -t filter -I INPUT -i eth0 ! -s 192.168.2.83 -j DROP
</span></span><span class="line"><span class="cl">$ 
</span></span><span class="line"><span class="cl">ÐÅºÅµÆ³¬Ê±Ê
</span></span><span class="line"><span class="cl"># ping 不通
</span></span><span class="line"><span class="cl">C:\Users\Company&gt;ping 192.168.2.83
</span></span><span class="line"><span class="cl">正在 Ping 192.168.2.83 具有 32 字节的数据:
</span></span><span class="line"><span class="cl">请求超时。
</span></span><span class="line"><span class="cl">请求超时。
</span></span><span class="line"><span class="cl">请求超时。
</span></span><span class="line"><span class="cl">192.168.2.83 的 Ping 统计信息:
</span></span><span class="line"><span class="cl">数据包: 已发送 = 4，已接收 = 0，丢失 = 4 (100% 丢失)，
</span></span></code></pre></td></tr></table>
</div>
</div><p>2.原地址不是192.168.2.0/24的网段禁止连接</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"> iptables -t filter -I INPUT -i eth0 -s ! 192.168.2.0/24 -j <span class="nv">DROP</span>  <span class="o">==</span>  
</span></span><span class="line"><span class="cl"> iptables -t filter -I INPUT -i eth0 -s 192.168.2.0/24 -j ACCECT <span class="c1"># 工作场景</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>第一节讲了linux优化，更改root和和ssh端口</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p tcp --dport <span class="m">52113</span> ! -s 192.168.2.0/24 -J DROP
</span></span></code></pre></td></tr></table>
</div>
</div><p>在默认规则为允许的情况下，上述可以封堵ssh访问。</p>
<blockquote>
<p><strong>企业工作中解决这个问题</strong>：</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">1.  vpn服务（拨号拨到VPN上，然后以VPN的内网地址区访问内部的机器地址）。
</span></span><span class="line"><span class="cl">2.  前端对外提供服务器的机器SSH端口都做禁止外部IP访问限制，可以开启后端或者不对外提供服务的机器，保留SSH服务（更改root和SSH端口）。然后，我们平时就先连接此机器没在去连其他机器。
</span></span><span class="line"><span class="cl">3.  流量特别大的外网机器不要开防火墙，会影响性能，购买硬件防火墙。
</span></span></code></pre></td></tr></table>
</div>
</div><p>封掉3306端口</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p tcp --dorp <span class="m">3306</span> -j DROP
</span></span></code></pre></td></tr></table>
</div>
</div><p>匹配指定的协议</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -P tcp 		<span class="c1"># 如果不指定-p，默认就是all</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>匹配指定协议外的所有协议</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p ! tcp
</span></span><span class="line"><span class="cl">iptables -I INPUT ! -p tcp -s 192.168.2.83 -j DROP
</span></span></code></pre></td></tr></table>
</div>
</div><p>匹配网段</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -s 10.0.0.0/24
</span></span><span class="line"><span class="cl">iptables -A INPUT ! -s 10.0.0.0/24
</span></span></code></pre></td></tr></table>
</div>
</div><p>匹配单一端口</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p tcp ! --sport <span class="m">22</span>
</span></span><span class="line"><span class="cl">iptables -A INPUT -p tcp ! --dport <span class="m">22</span> -s 10.0.0.20 -j DROP
</span></span></code></pre></td></tr></table>
</div>
</div><p>匹配端口范围</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p tcp --sport 22:80
</span></span><span class="line"><span class="cl">iptables -I INPUT -p tcp --dport 21,22,23,24 <span class="c1"># 错误语法</span>
</span></span><span class="line"><span class="cl">iptables -I INPUT -p tcp -m multiport --dport 18:80 -j DROP
</span></span><span class="line"><span class="cl">iptables -I INPUT -p tcp --dport 21:23 -j DROP <span class="c1"># 最佳</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>实例1：测试匹配端口范围</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -F
</span></span><span class="line"><span class="cl">$ iptables -t filter -A INPUT -p tcp --dport 20:100 -j DROP
</span></span><span class="line"><span class="cl">C:<span class="se">\U</span>sers<span class="se">\C</span>ompany&gt;telnet 192.168.2.83 <span class="m">80</span>
</span></span><span class="line"><span class="cl">正在连接192.168.2.83...无法打开到主机的连接。 在端口 80: 连接失败
</span></span><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">DROP       tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpts:20:100 
</span></span></code></pre></td></tr></table>
</div>
</div><p>测试结果</p>
<ol>
<li>ssh52113端口终端直接断掉</li>
<li>telnet连接80不通</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -t filter -A INPUT -p tcp --dport 50000:60000 -j DROP     
</span></span><span class="line"><span class="cl">$ 
</span></span><span class="line"><span class="cl">ÐÅºÅµÆ³¬Ê±Ê
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>实例2:列举端口</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -t filter -A INPUT -p tcp -m multiport --dport 80,90,100 -j DROP
</span></span><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">DROP       tcp  --  0.0.0.0/0            0.0.0.0/0           multiport dports 80,90,100 
</span></span></code></pre></td></tr></table>
</div>
</div><p>测试结果：telnet连接80不通</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ telnet 192.168.1.5 <span class="m">80</span>
</span></span><span class="line"><span class="cl">正在连接192.168.1.5...无法打开到主机的连接。 在端口 80: 连接失败
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>匹配ICMC类型</strong></p>
</blockquote>
<p><code>iptables -A INPUT -p icmp --icmp-type 8</code></p>
<p>例：<code>iptables -A INPUT -p icmp --icmp-type 8 -j DROP</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p icmp -m icmp --icmp-type any -j ACCEPT
</span></span><span class="line"><span class="cl"> 	iptables -A FORWARD -s 192.168.1.0/24 -p icmp -m icmp --icmp-type any -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1"># 在工作中默认是拒绝状态，用什么开什么，只有内网允许ping</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>匹配指定的网络接口</strong></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -i eth0
</span></span><span class="line"><span class="cl">iptables -A FORWARD -o eth0
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>记忆方法</strong>：</p>
<p>in-interface -i input name</p>
<p>in-interface -o output name</p>
<p><strong>匹配网络状态</strong></p>
<ul>
<li>
<p>-m state &ndash;state</p>
</li>
<li>
<p>NEW：已经或将启动洗呢连接</p>
</li>
<li>
<p>ESTABLISHED：已经建立的连接</p>
</li>
<li>
<p>RELATED：正在启动的新连接</p>
</li>
<li>
<p>INVALID：非法或无法识别的</p>
</li>
<li>
<p>FTP服务是特殊的，需要配状态连接。</p>
</li>
</ul>
<p>允许关联的状态包通过（web服务不要使用ftp）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
</span></span><span class="line"><span class="cl">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
</span></span></code></pre></td></tr></table>
</div>
</div><p>比喻：看电影出去WC或者接个电话，回来也得允许进去。</p>
<p>限制指定时间包的允许通过数量及并发数 <code>-m limit --limit n/{second/minute/hour/day}</code></p>
<p><strong>指定时间内的请求速率“n”为速率，后面为时间分别为：秒时分</strong></p>
<p><code>--limit-burst [n]</code>: 在同一时间内允许通过的请求“n”为数字，不指定默认为5</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ch3 iptables配置防火墙</title>
      <link>https://www.oomkill.com/2016/10/ch3-iptables-configuration/</link>
      <pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2016/10/ch3-iptables-configuration/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>生产环境配置主机防火墙有两种模式：</p>
<p>逛公园及看电影两种模式：</p>
<p>逛公园：默认随便出进，对非法的分子进行拒绝。企业应用：企业配置上网网关路由。</p>
<p>看电影：默认没有票进不去。花钱买票才能看电影。企业应用：服务器主机防火墙。</p>
<p>很显然：第二种更严格，更安全。</p>
<p>逛公园及看电影两种模式本事就是防火墙的默认规则是允许还是拒绝。</p>
<p><strong>1.清理当前所有规则和计数器</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -F
</span></span><span class="line"><span class="cl">iptables -Z
</span></span><span class="line"><span class="cl">iptables -X
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>2.配置允许SSH登陆端口进入</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p tcp --dport <span class="m">52113</span> -j ACCEPT
</span></span><span class="line"><span class="cl">iptables -A INPUT -p tcp -s 192.168.1.0/30 -j ACCEPT
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p>提示：此步骤是为了防止执行下面的步骤，把自己关在外面，除非你在本地处理，这部可以不做。</p>
<hr>
<p><strong>3.设置允许本机lo通讯规则</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -i lo -j ACCEPT
</span></span><span class="line"><span class="cl">iptables -A OUTPUT -o lo -j ACCEPT <span class="c1"># output加不加都行，在工作环境上是加的</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>4.设置默认的防火墙禁止和允许规则</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"> iptables -P INPUT DROP
</span></span><span class="line"><span class="cl"> iptables -P FORWARD DROP
</span></span><span class="line"><span class="cl"> iptables -P OUTPUT ACCEPT
</span></span></code></pre></td></tr></table>
</div>
</div><p>一般情况下OUTPUT我们不要drop，像电影院一样，电影已经看完了，中间不想看就回家了，你不可能说不行不能走，所以一般出去没人管，进来才收票，OUTPUT一般不设置，但是不设置也有风险，企业流量暴涨，由于服务器中病毒外发流量。</p>
<p><strong>查看结果</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iptables -nL
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy DROP<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">ACCEPT     tcp  --  192.168.1.0/27       0.0.0.0/0           tcp dpt:52113 
</span></span><span class="line"><span class="cl">ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain FORWARD <span class="o">(</span>policy DROP<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain OUTPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0 
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>5.开启网段信任</strong></p>
<p>允许IDC LAN/WAN和办公网ip的访问，及对外合作机构访问</p>
<p>办公室固定IP段，IDC机房内网网段，其他机房内网网段，IDC机房外网网段</p>
<p>例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">iptables -A INPUT -p all -s 192.168.1.0/27 -j ACCEPT
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p><strong>安全提示</strong>：要细化到掩码最小，租用阿里云攻击同网段案例</p>
<hr>
<p><strong>6.允许icmp类型协议通过</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p icmp -m icmp --icmp-type any -j ACCEPT
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p>注： 如果不想开，就不执行此行命令。如果对内网开，对外不开就用下面方式。</p>
<hr>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -A INPUT -p icmp -s 10.0.0.0/24 -m icmp --icmp-type any -j ACCEPT
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>8.允许关联的状态包通过（web服务不要使用FTP）</strong></p>
<p>通过其他服务器扫描我们配置的防火墙：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$  nmap 192.168.1.5 -p 1-65535 <span class="c1"># 时间很长</span>
</span></span><span class="line"><span class="cl">Starting Nmap 5.51 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2016-10-31 01:24 CST
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 192.168.1.5
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.00024s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65533</span> filtered ports
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE
</span></span><span class="line"><span class="cl">80/tcp    open  http
</span></span><span class="line"><span class="cl">52113/tcp open  unknown
</span></span><span class="line"><span class="cl">MAC Address: 00:0C:29:BE:2D:75 <span class="o">(</span>VMware<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 117.86 seconds
</span></span></code></pre></td></tr></table>
</div>
</div><p><em>在命令行操作的每一条命令都是在内存里 ，没有写入磁盘里，重启服务就丢了</em></p>
<p>在上面的命令行配置中所有的命令结果仅仅存在放于内存中，重启服务就会丢失。因此，我们有必要保存成配置文件。
法一：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">$ /etc/init.d/iptables save
</span></span><span class="line"><span class="cl">iptables：将防火墙规则保存到 /etc/sysconfig/iptables：<span class="o">[</span>确定<span class="o">]</span>
</span></span><span class="line"><span class="cl">$ cat /etc/sysconfig/iptables
</span></span><span class="line"><span class="cl"><span class="c1"># Generated by iptables-save v1.4.7 on Tue Nov 15 02:50:43 2016</span>
</span></span><span class="line"><span class="cl">*filter
</span></span><span class="line"><span class="cl">:INPUT DROP <span class="o">[</span>133073:5855518<span class="o">]</span>
</span></span><span class="line"><span class="cl">:FORWARD DROP <span class="o">[</span>0:0<span class="o">]</span>
</span></span><span class="line"><span class="cl">:OUTPUT ACCEPT <span class="o">[</span>202:14432<span class="o">]</span>
</span></span><span class="line"><span class="cl">-A INPUT -s 192.168.1.0/27 -p tcp -m tcp --dport <span class="m">52113</span> -j ACCEPT 
</span></span><span class="line"><span class="cl">-A INPUT -p icmp -m icmp --icmp-type any -j ACCEPT 
</span></span><span class="line"><span class="cl">-A INPUT -p tcp -m tcp --dport <span class="m">80</span> -j ACCEPT 
</span></span><span class="line"><span class="cl">-A OUTPUT -o lo -j ACCEPT 
</span></span><span class="line"><span class="cl">COMMIT
</span></span><span class="line"><span class="cl"><span class="c1"># Completed on Tue Nov 15 02:50:43 2016</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>法二：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ iptables-save &gt;/etc/sysconfig/iptables
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<blockquote>
<p><font color=#fe0101 size=2>提示：<code>/etc/sysconfig/iptables</code>为iptables的默认配置文件路径</font></p>
<p><font color=#fe0101 size=2>提示：第一次保存可以覆盖，以后保存只能追加</font></p>
</blockquote>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>ch4 生产环境如何维护iptables</title>
      <link>https://www.oomkill.com/2016/10/ch4-iptables-p/</link>
      <pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2016/10/ch4-iptables-p/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>生产中，一般第一次添加规则命令行或者脚本加入然后一次性保存成文件，然后可以改配置文件管理：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$  cat /etc/sysconfig/iptables
</span></span><span class="line"><span class="cl"><span class="c1"># Generated by iptables-save v1.4.7 on Wed Nov 23 09:18:12 2016</span>
</span></span><span class="line"><span class="cl">*filter
</span></span><span class="line"><span class="cl">:INPUT DROP <span class="o">[</span>0:0<span class="o">]</span>
</span></span><span class="line"><span class="cl">:FORWARD DROP <span class="o">[</span>0:0<span class="o">]</span>
</span></span><span class="line"><span class="cl">:OUTPUT ACCEPT <span class="o">[</span>115:13341<span class="o">]</span>
</span></span><span class="line"><span class="cl">-A INPUT -p tcp -m tcp --dport <span class="m">52113</span> -j ACCEPT 
</span></span><span class="line"><span class="cl">COMMIT
</span></span><span class="line"><span class="cl"><span class="c1"># Completed on Wed Nov 23 09:18:12 2016</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>生产维护：</p>
<p>⑴ 确定规则</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">vim /etc/sysconfig/iptables
</span></span><span class="line"><span class="cl"><span class="c1"># 加入想要的规则：例如：</span>
</span></span><span class="line"><span class="cl">-A INPUT -p tcp -m tcp --dport <span class="m">873</span> -j ACCEPT
</span></span><span class="line"><span class="cl">/etc/init.d/iptables reload
</span></span><span class="line"><span class="cl"><span class="c1"># 或者修改配置的同时命令行再执行，也是永久生效</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>⑵  命令行试错，没问题了，然后放配置文件。这时不需要重启了。</p>
<p>封IP，第一行封。10.0.0.115 这个机器攻击我们服务器或者在BBS里发垃圾帖子。</p>
<p>手工封IP：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">iptables -I INPUT -s 10.0.0.115 -j DROP <span class="c1"># 范围大，外部攻击者。</span>
</span></span><span class="line"><span class="cl">iptables -I INPUT -p tcp -s 10.0.0.106 --dport <span class="m">80</span> -j DROP <span class="c1"># 细，范围小 内部</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>自动封IP：分析web或应用日志或者网络连接状态封掉垃圾IP</p>
<p>详见：shell笔记</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nv">IPT</span><span class="o">=</span>/sbin/iptables
</span></span><span class="line"><span class="cl"><span class="c1"># remove any existing rules</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -F
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -X
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -Z
</span></span><span class="line"><span class="cl"><span class="c1">#setting default firewall policy</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IP</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#setting forloopback interface</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -i lo -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A OUTPUT -o lo -j ACCEPT
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># source address spoofing and other bad addresses</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -i eth0 -s 192.168.2.0/24 -j DROP
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -i eth0 -s 0.0.0.0/8 -j DROP
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#prevent all stealth scans and tcp state flags</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
</span></span><span class="line"><span class="cl"><span class="c1">#All of the bits are cleared</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --tcp-flags ALL,FIN,URG,PSH -j DROP
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#SYN and RST are both set</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
</span></span><span class="line"><span class="cl"><span class="c1">#SYN and FIN are both set</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># FIN is the only bit set ,whitout the expected accompanying ACK</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j DROP
</span></span><span class="line"><span class="cl"><span class="c1"># PSH is the only bit set ,whitout the expected accompanying ACK</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j DROP
</span></span><span class="line"><span class="cl"><span class="c1"># URG is the only bit set ,whitout the expected accompanying ACK</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --tcp-flags ACK,URG URG -j DROP
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#setting access rules</span>
</span></span><span class="line"><span class="cl"><span class="c1">#one,ip access rules,allow, all the ips of</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.10.0/24 -p tcp --dport <span class="m">5666</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.0.0/24 -p tcp --dport <span class="m">5666</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1">#db</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.0.0/24 -p tcp --dport <span class="m">3306</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.0.0/24 -p tcp --dport <span class="m">3307</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1">#ssh difference from other servers here</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.0.0/24 -p tcp --dport <span class="m">52113</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.0.0/24 -p tcp --dport <span class="m">22</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1">#http</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p tcp --dport <span class="m">80</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1">#snmp</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.0.0/24 -p UDP --dport <span class="m">161</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1">#rsync</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.0.0/24 -p tcp --dport <span class="m">873</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -s 10.0.10.0/24 -p tcp --dport <span class="m">873</span> -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1">#icmp</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT -p icmp -m icmp --icmp-type any -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1">#others RELATED</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A INPUT  -m state --state ESTABLISHED,RELATED -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
</span></span><span class="line"><span class="cl"><span class="c1">#setting default firewall rules</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> -P OUTPUT ACCEPT
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> --policy FORWARD DROP
</span></span><span class="line"><span class="cl"><span class="nv">$IPT</span> --policy INPUT DROP
</span></span></code></pre></td></tr></table>
</div>
</div><p>技巧：具备外网IP的服务器上不对外的服务最好要做源地址限制。</p>
<p>    对外提供服务，不能做源地址限制，例如：80端口。</p>
<p><font style="background:#bafe01;" size=2>问题：企业硬件防火墙和IPTABLES防火墙是否要同时用。</font></p>
<p>解决：可以同时用。</p>
<p>举例：</p>
<p>    企业硬件防火墙一般放在网关位置，相当于大厦的保安。</p>
<p>    但是，楼道里的每个屋子还是需要有人或者锁门的（iptables）</p>
<p><font style="background:#bafe01;" size=2>问题：IDC机房部署了硬件防火墙，我们的服务器可以不开防火墙吗？</font></p>
<p>​	解答：绝对不可以！大厦有保安，你的办公室就不锁门么？</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ch5 配置网关及服务器地址映射</title>
      <link>https://www.oomkill.com/2016/10/ch5-iptables-nat/</link>
      <pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2016/10/ch5-iptables-nat/</guid>
      <description></description>
      <content:encoded><![CDATA[<h3 id="1-办公室路由网关架构图">1 办公室路由网关架构图</h3>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221025002730248.png" alt="image-20221025002730248"  /></p>
<p>对应实际企业办公上网场景逻辑图</p>
<p>
  <img loading="lazy" src="https://cdn.jsdelivr.net/gh/CylonChau/imgbed/img/image-20221025002851351.png" alt="image-20221025002851351"  /></p>
<h3 id="2实验环境配置需求前期准备">2.实验环境配置需求前期准备</h3>
<h4 id="21-服务器网关b需要准备如下条件">2.1 服务器网关B需要准备如下条件</h4>
<blockquote>
<blockquote>
<ol>
<li>物理条件是具备上网卡，建议eth0外网地址（这里是192.168.1.5,gw 192.168.1.2），ech1内网地址（这里是172.168.1.10，<font style="background:#bafe01;" size=2>内网卡不配GW</font >。</li>
<li>确保服务器网关B要可以上网（B上网才能代理别的机器上网）。可以通过ping baidu.com或外网IP测试。</li>
<li>内核文件/etc/sysctl.conf里开启转发功能。在服务器网关B192.168.1.5机器上开启路由转发功能。编辑/etc/sysctl.conf修改内容为net.ipv4.ip_forward = 1，然后执行sysctl -p使修改生效</li>
<li>iptables的filter表的FORWARD链允许转发</li>
<li>不要filter防火墙功能，共享上网，因此最好暂停防火墙测试/etc/init.d/tables stop</li>
</ol>
</blockquote>
</blockquote>
<h4 id="22-加载iptables内核模块">2.2 加载iptables内核模块</h4>
<p>配置网关需要iptables的nat表，PREROUTING，POSTROUTING。</p>
<p><em><strong>(1)载入iptables内核模块，执行并放入rc.local</strong></em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">modprobe ip_tables <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe iptable_filter <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe iptable_nat <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe ip_conntrack <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe ip_conntrack_ftp <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe ip_nat_ftp <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>modprobe ipt_state
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ lsmod<span class="p">|</span>egrep ^ip 
</span></span><span class="line"><span class="cl">iptable_nat             <span class="m">6051</span>  <span class="m">0</span> 
</span></span><span class="line"><span class="cl">iptable_filter          <span class="m">2793</span>  <span class="m">0</span> 
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="23-局域网的机器">2.3 局域网的机器：</h4>
<blockquote>
<blockquote>
<ol>
<li>局域网的机器有一块网卡即可，确保局域网的机器C，默认网关这只了网关服务器B的eth1内网卡IP（172.168l.1.10）。把主机C的gateway设置为B的内网卡192的网卡ip即172.168l.1.10。</li>
<li>检查手段：</li>
<li>分别ping网关服务器B的内外网卡IP，都应该是通的就对了.</li>
<li>出公网检查除了PING网站域名外，也要ping下外网ip，排除DNS故障。不通</li>
<li>ping 10.0.0.254网关也是不通的。</li>
</ol>
</blockquote>
</blockquote>
<p>如上，请准备两台虚拟机B和C，其中B要有双网卡。B的内网卡的网段和C的网段一样。</p>
<p><em><strong>网关B：假设192.168.1.0/24为外部IP，172.168.1.0/24为内部IP</strong></em></p>
<p>eth0:192.168.1.5   IPADDR=192.168.1.5</p>
<p>gw:192.168.1.2	GATEWAY=192.168.1.2</p>
<p>eth1 	eth1:172.168.1.10</p>
<p><font style="background:#bafe01;" size=2>gw：不配</font></p>
<p>内部服务器C：</p>
<p>eth0：172.168.1.11 	IPADDR=172.168.1.11</p>
<p>gw：172.168.1.10（网关B的内网卡IP）		GATEWAY=172.168.1.10</p>
<p>准备结果：</p>
<p><strong>B网关服务器配置</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ifconfig
</span></span><span class="line"><span class="cl">eth0      Link encap:Ethernet  HWaddr 00:0C:29:31:E5:AF  
</span></span><span class="line"><span class="cl">          inet addr:192.168.1.4  Bcast:192.168.1.255  Mask:255.255.255.0
</span></span><span class="line"><span class="cl"> 		......
</span></span><span class="line"><span class="cl">eth1      Link encap:Ethernet  HWaddr 00:0C:29:31:E5:B9  
</span></span><span class="line"><span class="cl">          inet addr:172.168.1.10  Bcast:172.168.1.255  Mask:255.255.255.0
</span></span><span class="line"><span class="cl"><span class="c1"># 路由</span>
</span></span><span class="line"><span class="cl">$ route -n
</span></span><span class="line"><span class="cl">Kernel IP routing table
</span></span><span class="line"><span class="cl">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
</span></span><span class="line"><span class="cl">192.168.1.0     0.0.0.0         255.255.255.0   U     <span class="m">0</span>      <span class="m">0</span>        <span class="m">0</span> eth0
</span></span><span class="line"><span class="cl">172.168.1.0     0.0.0.0         255.255.255.0   U     <span class="m">0</span>      <span class="m">0</span>        <span class="m">0</span> eth1
</span></span><span class="line"><span class="cl">169.254.0.0     0.0.0.0         255.255.0.0     U     <span class="m">1002</span>   <span class="m">0</span>        <span class="m">0</span> eth0
</span></span><span class="line"><span class="cl">169.254.0.0     0.0.0.0         255.255.0.0     U     <span class="m">1003</span>   <span class="m">0</span>        <span class="m">0</span> eth1
</span></span><span class="line"><span class="cl">0.0.0.0         192.168.1.2     0.0.0.0         UG    <span class="m">0</span>      <span class="m">0</span>        <span class="m">0</span> eth0
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>C为内网PC或者服务器</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ifconfig
</span></span><span class="line"><span class="cl">eth0      Link encap:Ethernet  HWaddr 00:0C:29:BE:2D:75  
</span></span><span class="line"><span class="cl">          inet addr:172.168.1.11  Bcast:172.168.1.255  Mask:255.255.255.0
</span></span><span class="line"><span class="cl">....
</span></span><span class="line"><span class="cl">$ route -n
</span></span><span class="line"><span class="cl">Kernel IP routing table
</span></span><span class="line"><span class="cl">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
</span></span><span class="line"><span class="cl">172.168.1.0     0.0.0.0         255.255.255.0   U     <span class="m">0</span>      <span class="m">0</span>        <span class="m">0</span> eth0
</span></span><span class="line"><span class="cl">169.254.0.0     0.0.0.0         255.255.0.0     U     <span class="m">1002</span>   <span class="m">0</span>        <span class="m">0</span> eth0
</span></span><span class="line"><span class="cl">0.0.0.0         172.168.1.10    0.0.0.0         UG    <span class="m">0</span>      <span class="m">0</span>        <span class="m">0</span> eth0
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3-先做一些测试记录">3 先做一些测试记录</h3>
<p>1.登陆C主机172.168.1.11看是否能访问外部页面（配好DNS）。如ping <a href="https://www.baidu.com">www.baidu.com</a>。正确结果：当前情况不通 lamp为10 lnmp为11</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ping www.baidu.com
</span></span><span class="line"><span class="cl">^C
</span></span><span class="line"><span class="cl">$ ping 61.105.221.1
</span></span><span class="line"><span class="cl">PING 61.105.221.1 <span class="o">(</span>61.105.221.1<span class="o">)</span> 56<span class="o">(</span>84<span class="o">)</span> bytes of data.
</span></span></code></pre></td></tr></table>
</div>
</div><p>   2.在笔记本上分别测试telnet 172.168.1.10 22看是否能连通、结果:当前情况通。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ telnet 172.168.1.10 <span class="m">80</span>
</span></span><span class="line"><span class="cl">Trying 172.168.1.10...
</span></span><span class="line"><span class="cl">Connected to 172.168.1.10.
</span></span><span class="line"><span class="cl">Escape character is <span class="s1">&#39;^]&#39;</span>.	
</span></span><span class="line"><span class="cl">$  telnet 172.168.1.10 <span class="m">80</span>
</span></span><span class="line"><span class="cl">Trying 172.168.1.10...
</span></span><span class="line"><span class="cl">Connected to 172.168.1.10.
</span></span><span class="line"><span class="cl">Escape character is <span class="s1">&#39;^]&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>在笔记本上分别测试ping 172.168.1.11看是否能连通。结果当前情况通。</li>
<li>测试登陆172.168.1.10看是否能访问外部页面。如ping <a href="https://www.baidu.com">www.baidu.com</a>结果当前情况通。</li>
<li>在笔记本上分别测试telnet C主机 172.168.1.11 22 结果当前情况不通。</li>
<li>在笔记本上分别测试ping 172.168.1.11看是否能连通。结果当前情况不通。</li>
</ol>
<h3 id="4-根据逻辑图实现如下要求">4 根据逻辑图实现如下要求</h3>
<h4 id="41-局域网共享上网项目案例">4.1 局域网共享上网项目案例</h4>
<p>1.实现c可经过b，通过A上因特网。
解答：提示2:注意主机防火墙功能的影响，可以尝试在GW上先/etc/init.d/iptables stop后在加命令</p>
<p>2.实际处理的局域网共享上网NAT命令
局域网共享的两条命令方法：</p>
<p><em><strong>方法1：适合于有固定ip外网地址的</strong>：</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t nat -A POSTROUTING -s 172.168.1.0/24 -o eth0 -j SNAT --to-source 192.168.1.4
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<ol>
<li>-s 172.168.1.0/24办公室或IDC、内网网段。</li>
<li>-o eth0 为网关的外网卡接口。</li>
<li>-j SNAT &ndash;to-source 192.168.1.4是网关外网卡IP地址。</li>
</ol>
</blockquote>
<p><strong>方法2：适合变化外网地址（ADSL）</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t nat -A POSTROUTING -s 172.168.1.0/24 -j MASQUERADE
</span></span></code></pre></td></tr></table>
</div>
</div><p>测试结果</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ping www.baidu.com
</span></span><span class="line"><span class="cl">PING www.a.shifen.com <span class="o">(</span>58.217.200.112<span class="o">)</span> 56<span class="o">(</span>84<span class="o">)</span> bytes of data.
</span></span><span class="line"><span class="cl"><span class="m">64</span> bytes from 58.217.200.112: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">1</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">127</span> <span class="nv">time</span><span class="o">=</span>32.1 ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ iptables -t nat -nL
</span></span><span class="line"><span class="cl">Chain PREROUTING <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Chain POSTROUTING <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">SNAT       all  --  172.168.1.0/24       0.0.0.0/0           to:192.168.1.4 
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>为什么要用POSTROUTING？</strong></p>
<p>企业共享上网：</p>
<p>1.办公网共享上网（网关要有外网IP，否则用路由（zebra））</p>
<p>2.IDC内网机器上网</p>
<p><em><strong>企业上网到底需要不需要linux网关？</strong></em></p>
<p>解答：</p>
<ol>
<li>如果企业里有企业级路由器的情况下，可以不需要上网网关。使用网关只是解决路由器无法解决的需求（例如：上网行为，IP及端口的映射，网关杀毒）。</li>
<li>IDC机房，大厦有固定IP的宽带，直接用网关解决上网及控制问题。</li>
</ol>
<h4 id="42-把外部ip地址及端口映射到内部服务器地址及端口和贡献上网环境一样">4.2 把外部IP地址及端口映射到内部服务器地址及端口（和贡献上网环境一样）</h4>
<p>在10段主机可以通过访问192.168.1.4:80，即可访问到192.168.1.8:9000 提供的web服务。也可SSH（192.168.1.4:222 &ndash;&gt; 192.168.1.8:52113）&lt;== PREROUTING</p>
<p><strong>C配置WEB服务器</strong></p>
<p>解答：</p>
<p>⑴ 在172.168.1.10开启http服务监听9000端口，然后在网关服务器B可以访问</p>
<p>⑵ 具体转换命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t nat -A PREROUTING -d 192.168.1.5 -p tcp --dport <span class="m">9000</span> -j DNAT --to-destination 172.168.1.11:80
</span></span><span class="line"><span class="cl"><span class="c1"># DNAT：目的地址转换，将将本地内部的地址映射到互联网地址</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>测试结果</strong></p>
<p><em>清空NAT表的规则。</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t nat -F
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个时候访问83的9000端口是不能访问的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t nat -A PREROUTING -d 192.168.2.83 -p tcp --dport <span class="m">9000</span> -j DNAT --to-destination 172.168.1.11:80
</span></span></code></pre></td></tr></table>
</div>
</div><p>这里看到访问192.168.1.5的9000端口就会映射到内网172.168.1.11的80上。</p>
<h4 id="ssh转发实验">ssh转发实验</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 网关A IP 192.168.2.83 内网IP 172.168.1.10</span>
</span></span><span class="line"><span class="cl">$ ifconfig
</span></span><span class="line"><span class="cl">eth0      Link encap:Ethernet  HWaddr 00:0C:29:AF:21:4F  
</span></span><span class="line"><span class="cl">          inet addr:192.168.2.83  Bcast:192.168.2.255  Mask:255.255.255.0
</span></span><span class="line"><span class="cl">eth1      Link encap:Ethernet  HWaddr 00:50:56:20:37:C2  
</span></span><span class="line"><span class="cl">          inet addr:172.168.1.10  Bcast:172.168.1.255  Mask:255.255.255.0
</span></span><span class="line"><span class="cl"><span class="c1"># 在网关上设置转发</span>
</span></span><span class="line"><span class="cl">iptables -t nat -I PREROUTING  -p tcp -m tcp --dport <span class="m">9020</span> -j DNAT --to-destination 172.168.1.11:52113
</span></span><span class="line"><span class="cl"><span class="c1"># 用外网访问网关外网IP</span>
</span></span><span class="line"><span class="cl">$ ssh -p <span class="m">9020</span> 192.168.2.83
</span></span><span class="line"><span class="cl">.....
</span></span><span class="line"><span class="cl">root@192.168.2.83<span class="err">&#39;</span>s password: 
</span></span><span class="line"><span class="cl">Last login: Mon Dec <span class="m">12</span> 22:24:58 <span class="m">2016</span> from 192.168.2.84
</span></span><span class="line"><span class="cl">$ ifconfig
</span></span><span class="line"><span class="cl">          inet addr:172.168.1.11  Bcast:172.168.1.255  Mask:255.255.255.0
</span></span></code></pre></td></tr></table>
</div>
</div><p>强调：有个网友说网关服务需要开启80服务，但不需要对外服务？</p>
<p>测试结果：网关开启httpd:80后。</p>
<p>此时，来自80端口的请求转发依然会转发到后端的服务器。但是iptables nat规则删除后，此时就到达了http服务的80端口所以显示的是默认页面。</p>
<p><strong>企业应用场景</strong>：</p>
<ol>
<li>把访问外网IP及读研口的请求映射到内网某个服务器及端口（企业内部）。</li>
<li>硬件防火墙，把访问LVS/nginx外网VIP及80端口的请求映射到IDC负载均衡器内部IP及端口上（IDC机房的操作）</li>
</ol>
<p><strong>iptables企业常用案例</strong>：</p>
<ol>
<li>lnux主机防火墙（表FILTER INPUT链）</li>
<li>局域网机器共享上网（表：NAT POSTROUTING链）</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t nat -A POSTROUTING -s 172.168.1.0/24 -o eth0 -j SNAT --to-source 192.168.1.5
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>外部地址和端口，映射为内部地址和端口（表：NAT PREROUTING）</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t nat -A PREROUTING -d 192.168.1.5 -p tcp --dport <span class="m">80</span> -j DNAT --to-destination 172.168.1.11:9000
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="43-实现192段外网ip和172段内网ip一对一映射">4.3 实现192段外网IP和172段内网IP一对一映射</h4>
<p>网关IP：eth0:192.168.1.5 ech1:172.168.1.10</p>
<p>首先在路由网关上绑定接口外网ip，可以是别名的方式。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 访问外网IP就映射到0.8</span>
</span></span><span class="line"><span class="cl">-A PREROUTING -d 124.42.34.112 -j DNAT --to-destination 10.0.0.8
</span></span><span class="line"><span class="cl"><span class="c1"># 出网时候改回去</span>
</span></span><span class="line"><span class="cl">-A POSTROUTING -s 10.0.0.8 -j SNAT --to-destination 124.42.34.112
</span></span><span class="line"><span class="cl"><span class="c1"># 当局域网使用外网IP访问这台机器，会出现问题，只要是局域网访问这个地址，冲定向到网关，防止可能环路</span>
</span></span><span class="line"><span class="cl">-A POSTROUTING -s 10.0.0.0/255.255.240.0 -d 124.42.34.112 -j SNAT --to-source 10.0.0.254
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="44-实现192段机器和10段机器互相访问">4.4 实现192段机器和10段机器互相访问</h4>
<p><a href="http://v.youku.com/v_show/id_XNTAyMjAwMzI0.html">http://v.youku.com/v_show/id_XNTAyMjAwMzI0.html</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ch6 iptables生产应用场景</title>
      <link>https://www.oomkill.com/2016/10/ch6-iptables-application/</link>
      <pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2016/10/ch6-iptables-application/</guid>
      <description></description>
      <content:encoded><![CDATA[<blockquote>
<p>1、局域网共享上网（适合做企业内部局域网上网网关，以及IDC机房内网的上网网关 nat POSTROUTING）</p>
</blockquote>
<blockquote>
<p>2、服务器防火墙功能（适合IDC机房具有外网IP服务器，主要是filter INPUT的控制）</p>
</blockquote>
<blockquote>
<p>3、把外部IP及端口映射到局域网内部（可以一对一IP映射，也可针对某一个端口映射。）</p>
<p>也可能是IDC把网站的外网VIP级网站端口映射到负载均衡器上（硬件防火墙）（NAT PREROUTING）</p>
</blockquote>
<blockquote>
<p>4、办公路由器+网关功能（zebra路由+iptables过滤及NAT+squid正向透明代理80+ntop/iftop/iptaf流量查看+tc/cbq流量控制限速）。</p>
</blockquote>
<blockquote>
<p>5、邮件的网关。</p>
</blockquote>
<p><font style="background:#bafe01;" size=2>问题2：的生产环境应用：用于没有外网地址的内网服务器，映射为公网IP后对外提供服务，也包括端口的映射</font></p>
<p><font style="background:#bafe01;" size=2>问题3：IP一对一映射</font>
用于没有外网地址的内网服务器，映射为公网IP后对外提供服务，例如：ftp服务要一对一IP映射。</p>
<p>共享上网封IP的方法：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/sbin/iptables -I FROWAED -s 10.0.0.26 -j　DROP
</span></span><span class="line"><span class="cl">/sbin/iptables <span class="si">${</span><span class="nv">deal</span><span class="si">}</span> FROWARD -m mac --mac -source <span class="si">${</span><span class="nv">strIpMac</span><span class="si">}</span> -j DROP
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="映射多个外网ip上网">映射多个外网IP上网</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">iptables -t nat -A POSTROUTING -s 10.0.1.0/255.255.240.0 -o eth0 -j SNAT --to-source 124.42.60.11-124.42.60.16
</span></span><span class="line"><span class="cl">iptables -t nat -A POSTROUTING -s 172.168.1.0/255.255.255.0 -o eth0 -j SNAT --to<span class="o">=</span><span class="nb">source</span> 124.42.60.60-124.42.60.63
</span></span></code></pre></td></tr></table>
</div>
</div><p>问题：公司内网主机多的时候，访问网站容易被封。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ch7 关于iptables的内核参数</title>
      <link>https://www.oomkill.com/2016/10/ch7-iptables-kernel-parameter/</link>
      <pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.oomkill.com/2016/10/ch7-iptables-kernel-parameter/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>调整内核参数文件/etc/sysctl.conf，以下是我们生产环境的某个服务器的配置：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 表示如果套接字由本端要求关闭，这个檀树决定了他保持在FIN-WAIT-2状态的时间。</span>
</span></span><span class="line"><span class="cl">net.ipv4.tcp_fin_timeout <span class="o">=</span> <span class="m">2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭。</span>
</span></span><span class="line"><span class="cl">net.ipv4.tcp_tw_reuse <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 表示开启TCP连接中TIME-WAIT socket的快速收回，默认为0，表示关闭</span>
</span></span><span class="line"><span class="cl">net.ipv4.tcp_tw_recycle <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">提示：以上两个参数为了防止生产环境下 time_wait过多设置的。
</span></span><span class="line"><span class="cl"><span class="c1">############################################################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 表示开启SYN Cookie。当出现SYN等带队列溢出时，启动cookie来处理，可防范少量SYN攻击，默认为0表示关闭</span>
</span></span><span class="line"><span class="cl">net.ipv4.tcp_syncookies <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是两小时，改为20分钟 单位秒</span>
</span></span><span class="line"><span class="cl">net.ipv4.tcp_keepalive_time <span class="o">=</span> <span class="m">1200</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 表示对用向外连接的端口范围。缺省情况下很小。</span>
</span></span><span class="line"><span class="cl">net.ipv4.ip_local_port_range <span class="o">=</span> <span class="m">4000</span>  <span class="m">65000</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 表示SYN队列的长度，默认为1024，加大队列长度为8192，可容纳更过等待连接的网络连接数。</span>
</span></span><span class="line"><span class="cl">net.ipv4.tcp_max_syn_backlog <span class="o">=</span> <span class="m">16384</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 表示系统同时保持TIME_WAIT套接字的最大数量，如果超过这个数字，TIME_WAIT套接字将立刻被清楚并打印警告信息。默认为180000，对于Apache Nginx等服务器来说可以调低一点，如：改为5000-30000，不同业务的服务器也可以给大一点，比如LVS，squid</span>
</span></span><span class="line"><span class="cl">以上几行的参数可以很好的减少TIME_WAIT套接字数量，但对于squid效果却不大。
</span></span><span class="line"><span class="cl">net.ipv4.tcp_max_tw_buckets <span class="o">=</span> <span class="m">36000</span>
</span></span><span class="line"><span class="cl">net.ipv4.route.gc_timeout <span class="o">=</span> <span class="m">100</span>
</span></span><span class="line"><span class="cl">net.ipv4.tcp_syn_retries <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">net.ipv4.tcp_synack_retries <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 以下参数是对iptables防火墙的优化，防火墙不会开提示，可以忽略不理。</span>
</span></span><span class="line"><span class="cl">net.nf_conntrack_max <span class="o">=</span> <span class="m">25000000</span>
</span></span><span class="line"><span class="cl">net.netfilter.nf_conntrack_max <span class="o">=</span> <span class="m">25000000</span>
</span></span><span class="line"><span class="cl">net.netfilter.nf_conntrack_tcp_timeout_established <span class="o">=</span> <span class="m">180</span>
</span></span><span class="line"><span class="cl">net.netfilter.nf_conntrack_tcp_timeout_time_wait <span class="o">=</span> <span class="m">120</span>
</span></span><span class="line"><span class="cl">net.netfilter.nf_conntrack_tcp_timeout_close_wait <span class="o">=</span> <span class="m">60</span>
</span></span><span class="line"><span class="cl">net.netfilter.nf_conntrack_tcp_timeout_fin_wait <span class="o">=</span> <span class="m">120</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>dmesg里面显示 <code>ip_contrack:table full</code>，``dropping packet.` 的错误提示，如何解决?</p>
<p>这有两个可能，一个是打开的端口太少至不够用，修改ip_conntrack文件为1024 65535。</p>
<p>还有一个原因是nat链接真的达到65535了。此时就把NAT映射表保持时间设置短一些。</p>
<p><strong>强调</strong>：如果并发比较大，或者日PV多的情况下，开启防火墙要注意，很可能导致网站访问缓慢。</p>
<p>大并发（并发1万，PV日3000万）要么购买硬件防火墙，要么不开iptables防火墙。</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>

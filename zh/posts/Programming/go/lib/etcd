
高可用分布式key value存储，可以用于配置共享和服务发现

类似项目 zookeeper consul


### raft

raft 强一致性的集群日志同步算法，etcd利用raft算法在集群中同步key-value

基于raft算法的强一致性、高可用的服务存储目录。

raft是强一致的集群日志同步算法，通过将数据写入日志，再将日志复制给其余节点。

### quorum 模型


etcd有调用者、leader节点，由多个节点组成。遵守raft协议，集群中至少有2N+1个节点，1个leader 2个 follower。

调用者的写入请求发给leader，leader将日志向follower做实时复制（第一阶段，日志的复制），当日志复制给N+1（N+1指的是大多数）个节点后，本地提交，返回客户端。leader会周期性一部通知follower完成其本地提交

- replication：日志在leader生成，向follower复制，达到各个节点的日志序列最终一致
- term：任期，重新选举产生的leader，其term单调递增
- log index，日志行在日志序列的下标



- 选举leader需要半数以上节点参与
- 节点commit日志最多的允许选举为leader
- commit日志同样多，则term、index越大的允许选举为leader

![1569720641355](../images/etcd/1569720641355.png)

raft保证

- 提交成功的请求，一定不会丢
- 各个节点的数据将最终一致

[etcd Admin Guide \| etcd Configuration | CoreOS](https://coreos.com/etcd/docs/latest/v2/admin_guide.html)

```
nohup /usr/local/bin/etcd --listen-client-urls 'http://0.0.0.0:2379' --advertise-client-urls '0.0.0.0:2379' &
```


```sh
ETCDCTL_API=3 ./etcdctl
```

```sh
root@lc-virtual-machine:~# etcdctl put "name" "zhangsan"
OK

root@lc-virtual-machine:~# etcdctl get "name"
name
zhangsan

root@lc-virtual-machine:~# etcdctl del name
1
```

etcd不理解目录结构`/cron/jobs/job2` 认为其就是一个字符串 , etcd中key是有序的，相同前缀的可以排列在一起


```sh
lc@lc-virtual-machine:~$ etcdctl put "/cron/jobs/job2" "{....aaa}"
OK
lc@lc-virtual-machine:~$ etcdctl put "/cron/jobs/job2" "{....bbb}"
OK

lc@lc-virtual-machine:~$ etcdctl get "/cron/jobs/job2"
/cron/jobs/job2
{....bbb}
```

--from-key 从哪个key开始扫描

--prefix 获取满足key前缀的所有key







watch



window1 

```sh
lc@lc-virtual-machine:~$ etcdctl watch "/cron/jobs" --prefix
PUT
/cron/jobs/job3
{....ccc}
DELETE
/cron/jobs/job3
```

window2

```sh
lc@lc-virtual-machine:~$ etcdctl put "/cron/jobs/job3" "{....ccc}"
OK
lc@lc-virtual-machine:~$ etcdctl del "/cron/jobs/job3" "{....ccc}"
1
lc@lc-virtual-machine:~$ 
```



create_revision 创建版本

mod_revision 修改版本

version 自从创建后修改的次数

```sh
lc@lc-virtual-machine:~/data/src/cron/cronexpr/etcd-crud$ go run main.go 
[key:"/cron/jobs/jobn" create_revision:9 mod_revision:13 version:5 value:"bye" ]
lc@lc-virtual-machine:~/data/src/cron/cronexpr/etcd-crud$ go run main.go 
[key:"/cron/jobs/jobn" create_revision:9 mod_revision:13 version:5 value:"bye" ]
```





etcd restful